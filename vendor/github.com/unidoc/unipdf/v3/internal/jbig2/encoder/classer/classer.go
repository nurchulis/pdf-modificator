//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_aa "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_c "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_f "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_b "image";_e "math";);
const JbAddedPixels =6;const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_bcg *Classer )verifyMethod (_ff Method )error {if _ff !=RankHaus &&_ff !=Correlation {return _f .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_gece *Classer )classifyRankHouseOne (_cce *_c .Boxes ,_bga ,_dbf ,_dda *_c .Bitmaps ,_dca *_c .Points ,_agda int )(_cdf error ){const _ead ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_bfa ,_add ,_edb ,_faf float32 ;_dcac int ;_efd ,_cgb ,_dff ,_bgf ,_ade *_c .Bitmap ;_dac ,_baa bool ;);for _dag :=0;_dag < len (_bga .Values );_dag ++{_cgb =_dbf .Values [_dag ];_dff =_dda .Values [_dag ];_bfa ,_add ,_cdf =_dca .GetGeometry (_dag );
if _cdf !=nil {return _f .Wrapf (_cdf ,_ead ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_bacd :=len (_gece .UndilatedTemplates .Values );_dac =false ;_ggae :=_cafc (_gece ,_cgb );for _dcac =_ggae .Next ();_dcac > -1;
{_bgf ,_cdf =_gece .UndilatedTemplates .GetBitmap (_dcac );if _cdf !=nil {return _f .Wrap (_cdf ,_ead ,"\u0062\u006d\u0033");};_ade ,_cdf =_gece .DilatedTemplates .GetBitmap (_dcac );if _cdf !=nil {return _f .Wrap (_cdf ,_ead ,"\u0062\u006d\u0034");};_edb ,_faf ,_cdf =_gece .CentroidPointsTemplates .GetGeometry (_dcac );
if _cdf !=nil {return _f .Wrap (_cdf ,_ead ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_baa ,_cdf =_c .HausTest (_cgb ,_dff ,_bgf ,_ade ,_bfa -_edb ,_add -_faf ,MaxDiffWidth ,MaxDiffHeight );if _cdf !=nil {return _f .Wrap (_cdf ,_ead ,"");
};if _baa {_dac =true ;if _cdf =_gece .ClassIDs .Add (_dcac );_cdf !=nil {return _f .Wrap (_cdf ,_ead ,"");};if _cdf =_gece .ComponentPageNumbers .Add (_agda );_cdf !=nil {return _f .Wrap (_cdf ,_ead ,"");};if _gece .Settings .KeepClassInstances {_fcf ,_fda :=_gece .ClassInstances .GetBitmaps (_dcac );
if _fda !=nil {return _f .Wrap (_fda ,_ead ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_efd ,_fda =_bga .GetBitmap (_dag );if _fda !=nil {return _f .Wrap (_fda ,_ead ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fcf .AddBitmap (_efd );_ede ,_fda :=_cce .Get (_dag );
if _fda !=nil {return _f .Wrap (_fda ,_ead ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fcf .AddBox (_ede );};break ;};};if !_dac {if _cdf =_gece .ClassIDs .Add (_bacd );_cdf !=nil {return _f .Wrap (_cdf ,_ead ,"");};if _cdf =_gece .ComponentPageNumbers .Add (_agda );
_cdf !=nil {return _f .Wrap (_cdf ,_ead ,"");};_cgbg :=&_c .Bitmaps {};_efd ,_cdf =_bga .GetBitmap (_dag );if _cdf !=nil {return _f .Wrap (_cdf ,_ead ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cgbg .Values =append (_cgbg .Values ,_efd );_cffb ,_aefd :=_efd .Width ,_efd .Height ;
_gece .TemplatesSize .Add (uint64 (_aefd )*uint64 (_cffb ),_bacd );_bfdf ,_ffb :=_cce .Get (_dag );if _ffb !=nil {return _f .Wrap (_ffb ,_ead ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cgbg .AddBox (_bfdf );_gece .ClassInstances .AddBitmaps (_cgbg );_gece .CentroidPointsTemplates .AddPoint (_bfa ,_add );
_gece .UndilatedTemplates .AddBitmap (_cgb );_gece .DilatedTemplates .AddBitmap (_dff );};};return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};
func (_dbgf *Classer )classifyRankHaus (_dfc *_c .Boxes ,_bg *_c .Bitmaps ,_ddfg int )error {const _gea ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _dfc ==nil {return _f .Error (_gea ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _bg ==nil {return _f .Error (_gea ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_bae :=len (_bg .Values );if _bae ==0{return _f .Error (_gea ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_ebf :=_bg .CountPixels ();_dea :=_dbgf .Settings .SizeHaus ;_aec :=_c .SelCreateBrick (_dea ,_dea ,_dea /2,_dea /2,_c .SelHit );_dc :=&_c .Bitmaps {Values :make ([]*_c .Bitmap ,_bae )};_cbg :=&_c .Bitmaps {Values :make ([]*_c .Bitmap ,_bae )};var (_bfbg ,_acg ,_aaf *_c .Bitmap ;
_cdd error ;);for _bge :=0;_bge < _bae ;_bge ++{_bfbg ,_cdd =_bg .GetBitmap (_bge );if _cdd !=nil {return _f .Wrap (_cdd ,_gea ,"");};_acg ,_cdd =_bfbg .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _cdd !=nil {return _f .Wrap (_cdd ,_gea ,"");
};_aaf ,_cdd =_c .Dilate (nil ,_acg ,_aec );if _cdd !=nil {return _f .Wrap (_cdd ,_gea ,"");};_dc .Values [_bae ]=_acg ;_cbg .Values [_bae ]=_aaf ;};_aeb ,_cdd :=_c .Centroids (_dc .Values );if _cdd !=nil {return _f .Wrap (_cdd ,_gea ,"");};if _cdd =_aeb .Add (_dbgf .CentroidPoints );
_cdd !=nil {_aa .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _dbgf .Settings .RankHaus ==1.0{_cdd =_dbgf .classifyRankHouseOne (_dfc ,_bg ,_dc ,_cbg ,_aeb ,_ddfg );}else {_cdd =_dbgf .classifyRankHouseNonOne (_dfc ,_bg ,_dc ,_cbg ,_aeb ,_ebf ,_ddfg );
};if _cdd !=nil {return _f .Wrap (_cdd ,_gea ,"");};return nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_d .IntSlice ;TemplateAreas *_d .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_c .BitmapsArray ;
UndilatedTemplates *_c .Bitmaps ;DilatedTemplates *_c .Bitmaps ;TemplatesSize _d .IntsMap ;FgTemplates *_d .NumSlice ;CentroidPoints *_c .Points ;CentroidPointsTemplates *_c .Points ;ClassIDs *_d .IntSlice ;ComponentPageNumbers *_d .IntSlice ;PtaUL *_c .Points ;
PtaLL *_c .Points ;};var _gdf bool ;func _gd (_afdf *_c .Bitmap ,_bfc ,_ec ,_gb ,_bed int ,_bbb *_c .Bitmap )(_dfb _b .Point ,_bfe error ){const _ba ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _afdf ==nil {return _dfb ,_f .Error (_ba ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _bbb ==nil {return _dfb ,_f .Error (_ba ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_ffc ,_ga :=_bbb .Width ,_bbb .Height ;_gg ,_ad :=_bfc -_gb -JbAddedPixels ,_ec -_bed -JbAddedPixels ;_aa .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_bfc ,_ec ,_ffc ,_ga ,_gg ,_ad );
_bbba ,_bfe :=_c .Rect (_gg ,_ad ,_ffc ,_ga );if _bfe !=nil {return _dfb ,_f .Wrap (_bfe ,_ba ,"");};_gdb ,_ ,_bfe :=_afdf .ClipRectangle (_bbba );if _bfe !=nil {_aa .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_bbba );
return _dfb ,_f .Wrap (_bfe ,_ba ,"");};_ea :=_c .New (_gdb .Width ,_gdb .Height );_gbe :=_e .MaxInt32 ;var _fb ,_cec ,_agd ,_faa ,_efb int ;for _fb =-1;_fb <=1;_fb ++{for _cec =-1;_cec <=1;_cec ++{if _ ,_bfe =_c .Copy (_ea ,_gdb );_bfe !=nil {return _dfb ,_f .Wrap (_bfe ,_ba ,"");
};if _bfe =_ea .RasterOperation (_cec ,_fb ,_ffc ,_ga ,_c .PixSrcXorDst ,_bbb ,0,0);_bfe !=nil {return _dfb ,_f .Wrap (_bfe ,_ba ,"");};_agd =_ea .CountPixels ();if _agd < _gbe {_faa =_cec ;_efb =_fb ;_gbe =_agd ;};};};_dfb .X =_faa ;_dfb .Y =_efb ;return _dfb ,nil ;
};func (_abe *Classer )classifyCorrelation (_ada *_c .Boxes ,_bbe *_c .Bitmaps ,_gac int )error {const _fef ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _ada ==nil {return _f .Error (_fef ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _bbe ==nil {return _f .Error (_fef ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_cdb :=len (_bbe .Values );if _cdb ==0{_aa .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_abf ,_bbbaf *_c .Bitmap ;_fgd error ;);_dbb :=&_c .Bitmaps {Values :make ([]*_c .Bitmap ,_cdb )};for _gab ,_efc :=range _bbe .Values {_bbbaf ,_fgd =_efc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _fgd !=nil {return _f .Wrap (_fgd ,_fef ,"");};_dbb .Values [_gab ]=_bbbaf ;};_fefb :=_abe .FgTemplates ;_dab :=_c .MakePixelSumTab8 ();_cbd :=_c .MakePixelCentroidTab8 ();_cee :=make ([]int ,_cdb );_bac :=make ([][]int ,_cdb );_ddf :=_c .Points (make ([]_c .Point ,_cdb ));
_eab :=&_ddf ;var (_fgdg ,_bfb int ;_aga ,_fd ,_efbd int ;_dga ,_aacf int ;_bce byte ;);for _bfbe ,_ge :=range _dbb .Values {_bac [_bfbe ]=make ([]int ,_ge .Height );_fgdg =0;_bfb =0;_fd =(_ge .Height -1)*_ge .RowStride ;_aga =0;for _aacf =_ge .Height -1;
_aacf >=0;_aacf ,_fd =_aacf -1,_fd -_ge .RowStride {_bac [_bfbe ][_aacf ]=_aga ;_efbd =0;for _dga =0;_dga < _ge .RowStride ;_dga ++{_bce =_ge .Data [_fd +_dga ];_efbd +=_dab [_bce ];_fgdg +=_cbd [_bce ]+_dga *8*_dab [_bce ];};_aga +=_efbd ;_bfb +=_efbd *_aacf ;
};_cee [_bfbe ]=_aga ;if _aga > 0{(*_eab )[_bfbe ]=_c .Point {X :float32 (_fgdg )/float32 (_aga ),Y :float32 (_bfb )/float32 (_aga )};}else {(*_eab )[_bfbe ]=_c .Point {X :float32 (_ge .Width )/float32 (2),Y :float32 (_ge .Height )/float32 (2)};};};if _fgd =_abe .CentroidPoints .Add (_eab );
_fgd !=nil {return _f .Wrap (_fgd ,_fef ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_gdbf ,_caa ,_bace int ;_ceb float64 ;_gdc ,_gc ,_aag ,_gec float32 ;_efbe ,_fcd _c .Point ;_geb bool ;_geg *similarTemplatesFinder ;
_baf int ;_cafe *_c .Bitmap ;_dabc *_b .Rectangle ;_aba *_c .Bitmaps ;);for _baf ,_bbbaf =range _dbb .Values {_caa =_cee [_baf ];if _gdc ,_gc ,_fgd =_eab .GetGeometry (_baf );_fgd !=nil {return _f .Wrap (_fgd ,_fef ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_geb =false ;_gga :=len (_abe .UndilatedTemplates .Values );_geg =_cafc (_abe ,_bbbaf );for _egb :=_geg .Next ();_egb > -1;{if _cafe ,_fgd =_abe .UndilatedTemplates .GetBitmap (_egb );_fgd !=nil {return _f .Wrap (_fgd ,_fef ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _bace ,_fgd =_fefb .GetInt (_egb );_fgd !=nil {_aa .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fgd );};
if _aag ,_gec ,_fgd =_abe .CentroidPointsTemplates .GetGeometry (_egb );_fgd !=nil {return _f .Wrap (_fgd ,_fef ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _abe .Settings .WeightFactor > 0.0{if _gdbf ,_fgd =_abe .TemplateAreas .Get (_egb );_fgd !=nil {_aa .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_fgd );
};_ceb =_abe .Settings .Thresh +(1.0-_abe .Settings .Thresh )*_abe .Settings .WeightFactor *float64 (_bace )/float64 (_gdbf );}else {_ceb =_abe .Settings .Thresh ;};_ed ,_cg :=_c .CorrelationScoreThresholded (_bbbaf ,_cafe ,_caa ,_bace ,_efbe .X -_fcd .X ,_efbe .Y -_fcd .Y ,MaxDiffWidth ,MaxDiffHeight ,_dab ,_bac [_baf ],float32 (_ceb ));
if _cg !=nil {return _f .Wrap (_cg ,_fef ,"");};if _gdf {var (_eac ,_gbb float64 ;_cba ,_bfd int ;);_eac ,_cg =_c .CorrelationScore (_bbbaf ,_cafe ,_caa ,_bace ,_gdc -_aag ,_gc -_gec ,MaxDiffWidth ,MaxDiffHeight ,_dab );if _cg !=nil {return _f .Wrap (_cg ,_fef ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_gbb ,_cg =_c .CorrelationScoreSimple (_bbbaf ,_cafe ,_caa ,_bace ,_gdc -_aag ,_gc -_gec ,MaxDiffWidth ,MaxDiffHeight ,_dab );if _cg !=nil {return _f .Wrap (_cg ,_fef ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_cba =int (_e .Sqrt (_eac *float64 (_caa )*float64 (_bace )));_bfd =int (_e .Sqrt (_gbb *float64 (_caa )*float64 (_bace )));if (_eac >=_ceb )!=(_gbb >=_ceb ){return _f .Errorf (_fef ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_cba ,_eac ,_eac >=_ceb ,_bfd ,_gbb ,_gbb >=_ceb ,_eac -_gbb );
};if _eac >=_ceb !=_ed {return _f .Errorf (_fef ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_eac ,_eac *float64 (_caa )*float64 (_bace ),_cba ,_ceb ,float32 (_ceb )*float32 (_caa )*float32 (_bace ),_ed );
};};if _ed {_geb =true ;if _cg =_abe .ClassIDs .Add (_egb );_cg !=nil {return _f .Wrap (_cg ,_fef ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _cg =_abe .ComponentPageNumbers .Add (_gac );_cg !=nil {return _f .Wrap (_cg ,_fef ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _abe .Settings .KeepClassInstances {if _abf ,_cg =_bbe .GetBitmap (_baf );_cg !=nil {return _f .Wrap (_cg ,_fef ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _aba ,_cg =_abe .ClassInstances .GetBitmaps (_egb );
_cg !=nil {return _f .Wrap (_cg ,_fef ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_aba .AddBitmap (_abf );if _dabc ,_cg =_ada .Get (_baf );_cg !=nil {return _f .Wrap (_cg ,_fef ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_aba .AddBox (_dabc );};break ;};};if !_geb {if _fgd =_abe .ClassIDs .Add (_gga );_fgd !=nil {return _f .Wrap (_fgd ,_fef ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fgd =_abe .ComponentPageNumbers .Add (_gac );_fgd !=nil {return _f .Wrap (_fgd ,_fef ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_aba =&_c .Bitmaps {};if _abf ,_fgd =_bbe .GetBitmap (_baf );_fgd !=nil {return _f .Wrap (_fgd ,_fef ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_aba .AddBitmap (_abf );_ddd ,_gf :=_abf .Width ,_abf .Height ;_deb :=uint64 (_gf )*uint64 (_ddd );_abe .TemplatesSize .Add (_deb ,_gga );
if _dabc ,_fgd =_ada .Get (_baf );_fgd !=nil {return _f .Wrap (_fgd ,_fef ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_aba .AddBox (_dabc );_abe .ClassInstances .AddBitmaps (_aba );_abe .CentroidPointsTemplates .AddPoint (_gdc ,_gc );_abe .FgTemplates .AddInt (_caa );
_abe .UndilatedTemplates .AddBitmap (_abf );_gdbf =(_bbbaf .Width -2*JbAddedPixels )*(_bbbaf .Height -2*JbAddedPixels );if _fgd =_abe .TemplateAreas .Add (_gdbf );_fgd !=nil {return _f .Wrap (_fgd ,_fef ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_abe .NumberOfClasses =len (_abe .UndilatedTemplates .Values );
return nil ;};func (_cf *Classer )ComputeLLCorners ()(_fc error ){const _fe ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _cf .PtaUL ==nil {return _f .Error (_fe ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_de :=len (*_cf .PtaUL );_cf .PtaLL =&_c .Points {};var (_ef ,_ca float32 ;_aac ,_fa int ;_dg *_c .Bitmap ;);for _fcg :=0;_fcg < _de ;_fcg ++{_ef ,_ca ,_fc =_cf .PtaUL .GetGeometry (_fcg );if _fc !=nil {_aa .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fc );
return _f .Wrap (_fc ,_fe ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_aac ,_fc =_cf .ClassIDs .Get (_fcg );if _fc !=nil {_aa .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_fc );
return _f .Wrap (_fc ,_fe ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_dg ,_fc =_cf .UndilatedTemplates .GetBitmap (_aac );if _fc !=nil {_aa .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fc );
return _f .Wrap (_fc ,_fe ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_fa =_dg .Height ;_cf .PtaLL .AddPoint (_ef ,_ca +float32 (_fa ));};return nil ;};func _cafc (_fdga *Classer ,_bcc *_c .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_bcc .Width ,Height :_bcc .Height ,Classer :_fdga };
};func (_acc *similarTemplatesFinder )Next ()int {var (_ebe ,_caaa ,_aacfc ,_abb int ;_ffg bool ;_ccf *_c .Bitmap ;_efa error ;);for {if _acc .Index >=25{return -1;};_caaa =_acc .Width +TwoByTwoWalk [2*_acc .Index ];_ebe =_acc .Height +TwoByTwoWalk [2*_acc .Index +1];
if _ebe < 1||_caaa < 1{_acc .Index ++;continue ;};if len (_acc .CurrentNumbers )==0{_acc .CurrentNumbers ,_ffg =_acc .Classer .TemplatesSize .GetSlice (uint64 (_caaa )*uint64 (_ebe ));if !_ffg {_acc .Index ++;continue ;};_acc .N =0;};_aacfc =len (_acc .CurrentNumbers );
for ;_acc .N < _aacfc ;_acc .N ++{_abb =_acc .CurrentNumbers [_acc .N ];_ccf ,_efa =_acc .Classer .DilatedTemplates .GetBitmap (_abb );if _efa !=nil {_aa .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _ccf .Width -2*JbAddedPixels ==_caaa &&_ccf .Height -2*JbAddedPixels ==_ebe {return _abb ;};};_acc .Index ++;_acc .CurrentNumbers =nil ;};};func (_fad *Settings )SetDefault (){if _fad .MaxCompWidth ==0{switch _fad .Components {case _c .ComponentConn :_fad .MaxCompWidth =MaxConnCompWidth ;
case _c .ComponentCharacters :_fad .MaxCompWidth =MaxCharCompWidth ;case _c .ComponentWords :_fad .MaxCompWidth =MaxWordCompWidth ;};};if _fad .MaxCompHeight ==0{_fad .MaxCompHeight =MaxCompHeight ;};if _fad .Thresh ==0.0{_fad .Thresh =0.9;};if _fad .WeightFactor ==0.0{_fad .WeightFactor =0.75;
};if _fad .RankHaus ==0.0{_fad .RankHaus =0.97;};if _fad .SizeHaus ==0{_fad .SizeHaus =2;};};func (_dgf Settings )Validate ()error {const _aaff ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _dgf .Thresh < 0.4||_dgf .Thresh > 0.98{return _f .Error (_aaff ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _dgf .WeightFactor < 0.0||_dgf .WeightFactor > 1.0{return _f .Error (_aaff ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dgf .RankHaus < 0.5||_dgf .RankHaus > 1.0{return _f .Error (_aaff ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dgf .SizeHaus < 1||_dgf .SizeHaus > 10{return _f .Error (_aaff ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _dgf .Components {case _c .ComponentConn ,_c .ComponentCharacters ,_c .ComponentWords :default:return _f .Error (_aaff ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};type Method int ;type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _c .Component ;Method Method ;};const (RankHaus Method =iota ;
Correlation ;);func (_cff *Classer )addPageComponents (_cfe *_c .Bitmap ,_dgb *_c .Boxes ,_cfg *_c .Bitmaps ,_agb int ,_bf Method )error {const _ce ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _cfe ==nil {return _f .Error (_ce ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _dgb ==nil ||_cfg ==nil ||len (*_dgb )==0{_aa .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_cfe );
return nil ;};var _af error ;switch _bf {case RankHaus :_af =_cff .classifyRankHaus (_dgb ,_cfg ,_agb );case Correlation :_af =_cff .classifyCorrelation (_dgb ,_cfg ,_agb );default:_aa .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_bf );
return _f .Error (_ce ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _af !=nil {return _f .Wrap (_af ,_ce ,"");};if _af =_cff .getULCorners (_cfe ,_dgb );_af !=nil {return _f .Wrap (_af ,_ce ,"");
};_bbc :=len (*_dgb );_cff .BaseIndex +=_bbc ;if _af =_cff .ComponentsNumber .Add (_bbc );_af !=nil {return _f .Wrap (_af ,_ce ,"");};return nil ;};func (_g *Classer )getULCorners (_aef *_c .Bitmap ,_cc *_c .Boxes )error {const _fg ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _aef ==nil {return _f .Error (_fg ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _cc ==nil {return _f .Error (_fg ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _g .PtaUL ==nil {_g .PtaUL =&_c .Points {};
};_ab :=len (*_cc );var (_aae ,_fgg ,_cb ,_da int ;_eb ,_dd ,_dbg ,_cfa float32 ;_cae error ;_ac *_b .Rectangle ;_fcb *_c .Bitmap ;_ee _b .Point ;);for _ace :=0;_ace < _ab ;_ace ++{_aae =_g .BaseIndex +_ace ;if _eb ,_dd ,_cae =_g .CentroidPoints .GetGeometry (_aae );
_cae !=nil {return _f .Wrap (_cae ,_fg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _fgg ,_cae =_g .ClassIDs .Get (_aae );_cae !=nil {return _f .Wrap (_cae ,_fg ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");
};if _dbg ,_cfa ,_cae =_g .CentroidPointsTemplates .GetGeometry (_fgg );_cae !=nil {return _f .Wrap (_cae ,_fg ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_cbf :=_dbg -_eb ;
_eg :=_cfa -_dd ;if _cbf >=0{_cb =int (_cbf +0.5);}else {_cb =int (_cbf -0.5);};if _eg >=0{_da =int (_eg +0.5);}else {_da =int (_eg -0.5);};if _ac ,_cae =_cc .Get (_ace );_cae !=nil {return _f .Wrap (_cae ,_fg ,"");};_efg ,_afd :=_ac .Min .X ,_ac .Min .Y ;
_fcb ,_cae =_g .UndilatedTemplates .GetBitmap (_fgg );if _cae !=nil {return _f .Wrap (_cae ,_fg ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_ee ,_cae =_gd (_aef ,_efg ,_afd ,_cb ,_da ,_fcb );if _cae !=nil {return _f .Wrap (_cae ,_fg ,"");};_g .PtaUL .AddPoint (float32 (_efg -_cb +_ee .X ),float32 (_afd -_da +_ee .Y ));};return nil ;};func (_db *Classer )AddPage (inputPage *_c .Bitmap ,pageNumber int ,method Method )(_be error ){const _ag ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_db .Widths [pageNumber ]=inputPage .Width ;_db .Heights [pageNumber ]=inputPage .Height ;if _be =_db .verifyMethod (method );_be !=nil {return _f .Wrap (_be ,_ag ,"");};_ae ,_bc ,_be :=inputPage .GetComponents (_db .Settings .Components ,_db .Settings .MaxCompWidth ,_db .Settings .MaxCompHeight );
if _be !=nil {return _f .Wrap (_be ,_ag ,"");};_aa .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ae );if _be =_db .addPageComponents (inputPage ,_bc ,_ae ,pageNumber ,method );_be !=nil {return _f .Wrap (_be ,_ag ,"");
};return nil ;};func Init (settings Settings )(*Classer ,error ){const _bb ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_df :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_d .IntsMap {},TemplateAreas :&_d .IntSlice {},ComponentPageNumbers :&_d .IntSlice {},ClassIDs :&_d .IntSlice {},ComponentsNumber :&_d .IntSlice {},CentroidPoints :&_c .Points {},CentroidPointsTemplates :&_c .Points {},UndilatedTemplates :&_c .Bitmaps {},DilatedTemplates :&_c .Bitmaps {},ClassInstances :&_c .BitmapsArray {},FgTemplates :&_d .NumSlice {}};
if _cd :=_df .Settings .Validate ();_cd !=nil {return nil ,_f .Wrap (_cd ,_bb ,"");};return _df ,nil ;};func (_aad *Classer )classifyRankHouseNonOne (_dbd *_c .Boxes ,_aee ,_gfe ,_cgc *_c .Bitmaps ,_efcg *_c .Points ,_adg *_d .NumSlice ,_gaca int )(_ggc error ){const _fbe ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_dbga ,_ccg ,_dfg ,_fdg float32 ;_bgg ,_gecc ,_cecb int ;_cde ,_eec ,_fdgg ,_gad ,_ebg *_c .Bitmap ;_dfcd ,_aebd bool ;);_fefa :=_c .MakePixelSumTab8 ();for _bca :=0;_bca < len (_aee .Values );_bca ++{if _eec ,_ggc =_gfe .GetBitmap (_bca );_ggc !=nil {return _f .Wrap (_ggc ,_fbe ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _bgg ,_ggc =_adg .GetInt (_bca );_ggc !=nil {_aa .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bca ,_ggc );
};if _fdgg ,_ggc =_cgc .GetBitmap (_bca );_ggc !=nil {return _f .Wrap (_ggc ,_fbe ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _dbga ,_ccg ,_ggc =_efcg .GetGeometry (_bca );_ggc !=nil {return _f .Wrapf (_ggc ,_fbe ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_cdfa :=len (_aad .UndilatedTemplates .Values );_dfcd =false ;_bgb :=_cafc (_aad ,_eec );for _cecb =_bgb .Next ();_cecb > -1;{if _gad ,_ggc =_aad .UndilatedTemplates .GetBitmap (_cecb );_ggc !=nil {return _f .Wrap (_ggc ,_fbe ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _gecc ,_ggc =_aad .FgTemplates .GetInt (_cecb );_ggc !=nil {_aa .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cecb ,_ggc );
};if _ebg ,_ggc =_aad .DilatedTemplates .GetBitmap (_cecb );_ggc !=nil {return _f .Wrap (_ggc ,_fbe ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _dfg ,_fdg ,_ggc =_aad .CentroidPointsTemplates .GetGeometry (_cecb );
_ggc !=nil {return _f .Wrap (_ggc ,_fbe ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_aebd ,_ggc =_c .RankHausTest (_eec ,_fdgg ,_gad ,_ebg ,_dbga -_dfg ,_ccg -_fdg ,MaxDiffWidth ,MaxDiffHeight ,_bgg ,_gecc ,float32 (_aad .Settings .RankHaus ),_fefa );
if _ggc !=nil {return _f .Wrap (_ggc ,_fbe ,"");};if _aebd {_dfcd =true ;if _ggc =_aad .ClassIDs .Add (_cecb );_ggc !=nil {return _f .Wrap (_ggc ,_fbe ,"");};if _ggc =_aad .ComponentPageNumbers .Add (_gaca );_ggc !=nil {return _f .Wrap (_ggc ,_fbe ,"");
};if _aad .Settings .KeepClassInstances {_bd ,_efdb :=_aad .ClassInstances .GetBitmaps (_cecb );if _efdb !=nil {return _f .Wrap (_efdb ,_fbe ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _cde ,_efdb =_aee .GetBitmap (_bca );_efdb !=nil {return _f .Wrap (_efdb ,_fbe ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_bd .Values =append (_bd .Values ,_cde );_efgb ,_efdb :=_dbd .Get (_bca );if _efdb !=nil {return _f .Wrap (_efdb ,_fbe ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_bd .Boxes =append (_bd .Boxes ,_efgb );};break ;};};if !_dfcd {if _ggc =_aad .ClassIDs .Add (_cdfa );_ggc !=nil {return _f .Wrap (_ggc ,_fbe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ggc =_aad .ComponentPageNumbers .Add (_gaca );_ggc !=nil {return _f .Wrap (_ggc ,_fbe ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gdcf :=&_c .Bitmaps {};_cde =_aee .Values [_bca ];_gdcf .AddBitmap (_cde );_aafa ,_deag :=_cde .Width ,_cde .Height ;_aad .TemplatesSize .Add (uint64 (_aafa )*uint64 (_deag ),_cdfa );_ecg ,_bdd :=_dbd .Get (_bca );if _bdd !=nil {return _f .Wrap (_bdd ,_fbe ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gdcf .AddBox (_ecg );_aad .ClassInstances .AddBitmaps (_gdcf );_aad .CentroidPointsTemplates .AddPoint (_dbga ,_ccg );_aad .UndilatedTemplates .AddBitmap (_eec );_aad .DilatedTemplates .AddBitmap (_fdgg );_aad .FgTemplates .AddInt (_bgg );};};_aad .NumberOfClasses =len (_aad .UndilatedTemplates .Values );
return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func DefaultSettings ()Settings {_egf :=&Settings {};_egf .SetDefault ();return *_egf };