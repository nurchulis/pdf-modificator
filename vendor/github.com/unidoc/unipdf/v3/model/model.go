//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_fe "bufio";_ge "bytes";_bd "crypto/md5";_bf "crypto/rand";_a "crypto/sha1";_b "crypto/x509";_de "encoding/binary";_dg "encoding/hex";_fcf "errors";_f "fmt";_cd "github.com/unidoc/pkcs7";_aa "github.com/unidoc/unipdf/v3/common";_bcd "github.com/unidoc/unipdf/v3/core";
_fcg "github.com/unidoc/unipdf/v3/core/security";_gdb "github.com/unidoc/unipdf/v3/core/security/crypt";_dca "github.com/unidoc/unipdf/v3/internal/cmap";_gac "github.com/unidoc/unipdf/v3/internal/imageutil";_fd "github.com/unidoc/unipdf/v3/internal/license";
_gea "github.com/unidoc/unipdf/v3/internal/sampling";_af "github.com/unidoc/unipdf/v3/internal/textencoding";_edb "github.com/unidoc/unipdf/v3/internal/timeutils";_bca "github.com/unidoc/unipdf/v3/internal/transform";_aad "github.com/unidoc/unipdf/v3/model/internal/docutil";
_aab "github.com/unidoc/unipdf/v3/model/internal/fonts";_fga "github.com/unidoc/unipdf/v3/model/mdp";_ed "github.com/unidoc/unipdf/v3/model/sigutil";_bc "github.com/unidoc/unipdf/v3/ps";_fee "github.com/unidoc/unitype";_ca "golang.org/x/xerrors";_gd "hash";
_ga "image";_fc "image/color";_ "image/gif";_ "image/png";_ec "io";_dc "io/ioutil";_cc "math";_bbc "math/rand";_gae "os";_ee "regexp";_fg "sort";_gb "strconv";_fef "strings";_d "sync";_fb "time";_bb "unicode";_gg "unicode/utf8";);

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_eedba :=&PdfColorspaceCalRGB {};_eedba .BlackPoint =[]float64 {0.0,0.0,0.0};_eedba .Gamma =[]float64 {1.0,1.0,1.0};_eedba .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _eedba ;};

// K returns the value of the key component of the color.
func (_fbebb *PdfColorDeviceCMYK )K ()float64 {return _fbebb [3]};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_geaa :=NewPdfAnnotation ();_aaef :=&PdfAnnotationPrinterMark {};_aaef .PdfAnnotation =_geaa ;_geaa .SetContext (_aaef );return _aaef ;};type pdfCIDFontType0 struct{fontCommon ;_dabb *_bcd .PdfIndirectObject ;
_gdfea _af .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bcd .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bcd .PdfObject ;W _bcd .PdfObject ;DW2 _bcd .PdfObject ;W2 _bcd .PdfObject ;_adgbe map[_af .CharCode ]float64 ;_gcaba float64 ;};

// GetPage returns the PdfPage model for the specified page number.
func (_dfga *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _dfga ._aceagb .GetCrypter ()!=nil &&!_dfga ._aceagb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_dfga ._aaffe )< pageNumber {return nil ,_fcf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_ddagd :=pageNumber -1;if _ddagd < 0{return nil ,_f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_dabae :=_dfga .PageList [_ddagd ];
return _dabae ,nil ;};

// IsColored specifies if the pattern is colored.
func (_aggg *PdfTilingPattern )IsColored ()bool {if _aggg .PaintType !=nil &&*_aggg .PaintType ==1{return true ;};return false ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_abdgge *PdfField )GetContainingPdfObject ()_bcd .PdfObject {return _abdgge ._ebddc };

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_dgecg .Lock ();defer _dgecg .Unlock ();_dbdf =subject };

// SetVersion sets the PDF version of the output file.
func (_acggg *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_acggg ._cecgb .Major =majorVersion ;_acggg ._cecgb .Minor =minorVersion ;};func (_bed *PdfReader )newPdfActionImportDataFromDict (_cec *_bcd .PdfObjectDictionary )(*PdfActionImportData ,error ){_abdg ,_bgff :=_cdag (_cec .Get ("\u0046"));
if _bgff !=nil {return nil ,_bgff ;};return &PdfActionImportData {F :_abdg },nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;func _gceg (_fcdga _bcd .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_cgdd :=NewPdfColorspaceSpecialIndexed ();if _cfga ,_fdga :=_fcdga .(*_bcd .PdfIndirectObject );_fdga {_cgdd ._eegf =_cfga ;};_fcdga =_bcd .TraceToDirectObject (_fcdga );
_cbfe ,_ccdc :=_fcdga .(*_bcd .PdfObjectArray );if !_ccdc {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cbfe .Len ()!=4{return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_fcdga =_cbfe .Get (0);_gbff ,_ccdc :=_fcdga .(*_bcd .PdfObjectName );if !_ccdc {return nil ,_f .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_gbff !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_fcdga =_cbfe .Get (1);_ccce ,_efab :=DetermineColorspaceNameFromPdfObject (_fcdga );if _efab !=nil {return nil ,_efab ;};if _ccce =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_ccce =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_aa .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_ccce );
return nil ,_bfc ;};_fagd ,_efab :=NewPdfColorspaceFromPdfObject (_fcdga );if _efab !=nil {return nil ,_efab ;};_cgdd .Base =_fagd ;_fcdga =_cbfe .Get (2);_bffac ,_efab :=_bcd .GetNumberAsInt64 (_fcdga );if _efab !=nil {return nil ,_efab ;};if _bffac > 255{return nil ,_f .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_cgdd .HiVal =int (_bffac );_fcdga =_cbfe .Get (3);_cgdd .Lookup =_fcdga ;_fcdga =_bcd .TraceToDirectObject (_fcdga );var _aabaf []byte ;if _gdgd ,_ebga :=_fcdga .(*_bcd .PdfObjectString );_ebga {_aabaf =_gdgd .Bytes ();_aa .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_aabaf );
}else if _fdcb ,_gefg :=_fcdga .(*_bcd .PdfObjectStream );_gefg {_aa .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_fcdga .String ());_aa .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_fdcb .Stream ),_fdcb .Stream );
_bffd ,_fgdb :=_bcd .DecodeStream (_fdcb );if _fgdb !=nil {return nil ,_fgdb ;};_aa .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_bffd ),_bffd );_aabaf =_bffd ;}else {_aa .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_fcdga );
return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_aabaf )< _cgdd .Base .GetNumComponents ()*(_cgdd .HiVal +1){_aa .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_aa .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_aabaf ),_cgdd .Base .GetNumComponents (),_cgdd .HiVal );
}else {_aabaf =_aabaf [:_cgdd .Base .GetNumComponents ()*(_cgdd .HiVal +1)];};_cgdd ._fbga =_aabaf ;return _cgdd ,nil ;};func (_aca *PdfReader )newPdfAnnotationTrapNetFromDict (_bcga *_bcd .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_cdcf :=PdfAnnotationTrapNet {};
return &_cdcf ,nil ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_ffbe :=&PdfOutline {_ecac :_bcd .MakeIndirectObject (_bcd .MakeDict ())};_ffbe ._gadg =_ffbe ;return _ffbe ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;
);

// Val returns the color value.
func (_defa *PdfColorDeviceGray )Val ()float64 {return float64 (*_defa )};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func _gaag (_bbbge _bcd .PdfObject )(*PdfColorspaceDeviceN ,error ){_abae :=NewPdfColorspaceDeviceN ();if _cdbg ,_ecab :=_bbbge .(*_bcd .PdfIndirectObject );_ecab {_abae ._gdfbg =_cdbg ;};_bbbge =_bcd .TraceToDirectObject (_bbbge );
_bddf ,_dgbgb :=_bbbge .(*_bcd .PdfObjectArray );if !_dgbgb {return nil ,_f .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _bddf .Len ()!=4&&_bddf .Len ()!=5{return nil ,_f .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_bbbge =_bddf .Get (0);_ggbg ,_dgbgb :=_bbbge .(*_bcd .PdfObjectName );if !_dgbgb {return nil ,_f .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_ggbg !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_f .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_bbbge =_bddf .Get (1);
_bbbge =_bcd .TraceToDirectObject (_bbbge );_eaeaa ,_dgbgb :=_bbbge .(*_bcd .PdfObjectArray );if !_dgbgb {return nil ,_f .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_abae .ColorantNames =_eaeaa ;_bbbge =_bddf .Get (2);_faee ,_affb :=NewPdfColorspaceFromPdfObject (_bbbge );if _affb !=nil {return nil ,_affb ;};_abae .AlternateSpace =_faee ;_baeg ,_affb :=_bggfc (_bddf .Get (3));if _affb !=nil {return nil ,_affb ;};
_abae .TintTransform =_baeg ;if _bddf .Len ()==5{_ddfcdd ,_fcdc :=_eafb (_bddf .Get (4));if _fcdc !=nil {return nil ,_fcdc ;};_abae .Attributes =_ddfcdd ;};return _abae ,nil ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _bcd .PdfObjectName ;};func (_adcbf *PdfWriter )checkCrossReferenceStream ()bool {_bcdbga :=_adcbf ._cecgb .Major > 1||(_adcbf ._cecgb .Major ==1&&_adcbf ._cecgb .Minor > 4);if _adcbf ._dcfad !=nil {_bcdbga =*_adcbf ._dcfad ;
};return _bcdbga ;};

// SetFillImage attach a model.Image to push button.
func (_fadb *PdfFieldButton )SetFillImage (image *Image ){if _fadb .IsPush (){_fadb ._dfab =image ;};};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_fded *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bcd .PdfObject ;PreserveRB _bcd .PdfObject ;};

// C returns the value of the C component of the color.
func (_gbfce *PdfColorCalRGB )C ()float64 {return _gbfce [2]};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dggeag *PdfShadingType1 )ToPdfObject ()_bcd .PdfObject {_dggeag .PdfShading .ToPdfObject ();_ccdfa ,_gcaad :=_dggeag .getShadingDict ();if _gcaad !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dggeag .Domain !=nil {_ccdfa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dggeag .Domain );};if _dggeag .Matrix !=nil {_ccdfa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dggeag .Matrix );};if _dggeag .Function !=nil {if len (_dggeag .Function )==1{_ccdfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dggeag .Function [0].ToPdfObject ());
}else {_facaa :=_bcd .MakeArray ();for _ ,_egbe :=range _dggeag .Function {_facaa .Append (_egbe .ToPdfObject ());};_ccdfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_facaa );};};return _dggeag ._gggef ;};func (_cbece *pdfFontType0 )baseFields ()*fontCommon {return &_cbece .fontCommon };


// Initialize initializes the PdfSignature.
func (_gfeba *PdfSignature )Initialize ()error {if _gfeba .Handler ==nil {return _fcf .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _gfeba .Handler .InitSignature (_gfeba );};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_eccec *VRI )ToPdfObject ()*_bcd .PdfObjectDictionary {_ccde :=_bcd .MakeDict ();_ccde .SetIfNotNil (_bcd .PdfObjectName ("\u0043\u0065\u0072\u0074"),_aegcf (_eccec .Cert ));_ccde .SetIfNotNil (_bcd .PdfObjectName ("\u004f\u0043\u0053\u0050"),_aegcf (_eccec .OCSP ));
_ccde .SetIfNotNil (_bcd .PdfObjectName ("\u0043\u0052\u004c"),_aegcf (_eccec .CRL ));_ccde .SetIfNotNil ("\u0054\u0055",_eccec .TU );_ccde .SetIfNotNil ("\u0054\u0053",_eccec .TS );return _ccde ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_edfad *Image )GetSamples ()[]uint32 {_edbae :=_gea .ResampleBytes (_edfad .Data ,int (_edfad .BitsPerComponent ));if _edfad .BitsPerComponent < 8{_edbae =_edfad .samplesTrimPadding (_edbae );};_fbaab :=int (_edfad .Width )*int (_edfad .Height )*_edfad .ColorComponents ;
if len (_edbae )< _fbaab {_aa .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_edbae ),_fbaab );
return _edbae ;}else if len (_edbae )> _fbaab {_aa .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_edbae ),_fbaab );
_edbae =_edbae [:_fbaab ];};return _edbae ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_cgeg _bcd .PdfObject ;};

// GetCerts returns the signature certificate chain.
func (_bfddb *PdfSignature )GetCerts ()([]*_b .Certificate ,error ){var _cffac []func ()([]*_b .Certificate ,error );switch _agde ,_ :=_bcd .GetNameVal (_bfddb .SubFilter );_agde {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_cffac =append (_cffac ,_bfddb .extractChainFromPKCS7 ,_bfddb .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_cffac =append (_cffac ,_bfddb .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_cffac =append (_cffac ,_bfddb .extractChainFromPKCS7 );
default:return nil ,_f .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_agde );};for _ ,_agbdc :=range _cffac {_acgfeb ,_cdcgd :=_agbdc ();if _cdcgd !=nil {return nil ,_cdcgd ;
};if len (_acgfeb )> 0{return _acgfeb ,nil ;};};return nil ,ErrSignNoCertificates ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_agbc *PdfPageResourcesColorspaces )Set (key _bcd .PdfObjectName ,val PdfColorspace ){if _ ,_gfgdcb :=_agbc .Colorspaces [string (key )];!_gfgdcb {_agbc .Names =append (_agbc .Names ,string (key ));};_agbc .Colorspaces [string (key )]=val ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_cb :=NewPdfAction ();_dea :=&PdfActionTrans {};_dea .PdfAction =_cb ;_cb .SetContext (_dea );return _dea ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_gdaba :=&PdfShadingType2 {};_gdaba .PdfShading =&PdfShading {};_gdaba .PdfShading ._gggef =_bcd .MakeIndirectObject (_bcd .MakeDict ());_gdaba .PdfShading ._ecdfcf =_gdaba ;return _gdaba ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ecbcb *PdfShadingType6 )ToPdfObject ()_bcd .PdfObject {_ecbcb .PdfShading .ToPdfObject ();_fdab ,_bdgfa :=_ecbcb .getShadingDict ();if _bdgfa !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ecbcb .BitsPerCoordinate !=nil {_fdab .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ecbcb .BitsPerCoordinate );};if _ecbcb .BitsPerComponent !=nil {_fdab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ecbcb .BitsPerComponent );
};if _ecbcb .BitsPerFlag !=nil {_fdab .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ecbcb .BitsPerFlag );};if _ecbcb .Decode !=nil {_fdab .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ecbcb .Decode );};if _ecbcb .Function !=nil {if len (_ecbcb .Function )==1{_fdab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecbcb .Function [0].ToPdfObject ());
}else {_ffbcf :=_bcd .MakeArray ();for _ ,_geacf :=range _ecbcb .Function {_ffbcf .Append (_geacf .ToPdfObject ());};_fdab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffbcf );};};return _ecbcb ._gggef ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_fecd *PdfPage )GetContainingPdfObject ()_bcd .PdfObject {return _fecd ._bebee };

// ToPdfObject implements interface PdfModel.
func (_bfa *PdfActionSubmitForm )ToPdfObject ()_bcd .PdfObject {_bfa .PdfAction .ToPdfObject ();_eda :=_bfa ._fgae ;_cdgb :=_eda .PdfObject .(*_bcd .PdfObjectDictionary );_cdgb .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeSubmitForm )));if _bfa .F !=nil {_cdgb .Set ("\u0046",_bfa .F .ToPdfObject ());
};_cdgb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bfa .Fields );_cdgb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bfa .Flags );return _eda ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_eef *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baca :=vals [0];if _baca < 0.0||_baca > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_baca );
return nil ,ErrColorOutOfRange ;};_eddb :=vals [1];if _eddb < 0.0||_eddb > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_baca );return nil ,ErrColorOutOfRange ;
};_cdagg :=vals [2];if _cdagg < 0.0||_cdagg > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_baca );return nil ,ErrColorOutOfRange ;};_beag :=NewPdfColorDeviceRGB (_baca ,_eddb ,_cdagg );
return _beag ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fed *PdfActionSound )ToPdfObject ()_bcd .PdfObject {_fed .PdfAction .ToPdfObject ();_ecb :=_fed ._fgae ;_fde :=_ecb .PdfObject .(*_bcd .PdfObjectDictionary );_fde .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeSound )));_fde .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fed .Sound );
_fde .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_fed .Volume );_fde .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_fed .Synchronous );_fde .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fed .Repeat );_fde .SetIfNotNil ("\u004d\u0069\u0078",_fed .Mix );
return _ecb ;};func (_gddb *PdfAcroForm )fill (_aegffd FieldValueProvider ,_bbgdb FieldAppearanceGenerator )error {if _gddb ==nil {return nil ;};_feadb ,_beeg :=_aegffd .FieldValues ();if _beeg !=nil {return _beeg ;};for _ ,_eebdd :=range _gddb .AllFields (){_caafb :=_eebdd .PartialName ();
_feeg ,_gfab :=_feadb [_caafb ];if !_gfab {if _fffbb ,_befgg :=_eebdd .FullName ();_befgg ==nil {_feeg ,_gfab =_feadb [_fffbb ];};};if !_gfab {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_caafb );
continue ;};if _cbgc :=_fggc (_eebdd ,_feeg );_cbgc !=nil {return _cbgc ;};if _bbgdb ==nil {continue ;};for _ ,_dgge :=range _eebdd .Annotations {_fgde ,_ffgg :=_bbgdb .GenerateAppearanceDict (_gddb ,_eebdd ,_dgge );if _ffgg !=nil {return _ffgg ;};_dgge .AP =_fgde ;
_dgge .ToPdfObject ();};};return nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bcd .PdfObjectName ;Colorants _bcd .PdfObject ;Process _bcd .PdfObject ;MixingHints _bcd .PdfObject ;_fbgad *_bcd .PdfIndirectObject ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bcd .PdfObject ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bcd .PdfObject ;_fbga []byte ;_eegf *_bcd .PdfIndirectObject ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_ebfcf *PdfColorCalGray )GetNumComponents ()int {return 1};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bcd .PdfObject ;Flags _bcd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ceab *PdfAnnotationFileAttachment )ToPdfObject ()_bcd .PdfObject {_ceab .PdfAnnotation .ToPdfObject ();_bfbfe :=_ceab ._dbd ;_ece :=_bfbfe .PdfObject .(*_bcd .PdfObjectDictionary );_ceab .PdfAnnotationMarkup .appendToPdfDictionary (_ece );_ece .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_ece .SetIfNotNil ("\u0046\u0053",_ceab .FS );_ece .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ceab .Name );return _bfbfe ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_ggbge *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _ggbge .baseFields ()._agda !=nil {return _ggbge .baseFields ()._agda ;};if _ggcbc :=_ggbge ._fbcb .getFontDescriptor ();_ggcbc !=nil {return _ggcbc ;};_aa .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_ggbge );
return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gafd *PdfAnnotationRedact )ToPdfObject ()_bcd .PdfObject {_gafd .PdfAnnotation .ToPdfObject ();_bgcd :=_gafd ._dbd ;_adgb :=_bgcd .PdfObject .(*_bcd .PdfObjectDictionary );_gafd .PdfAnnotationMarkup .appendToPdfDictionary (_adgb );_adgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_adgb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gafd .QuadPoints );_adgb .SetIfNotNil ("\u0049\u0043",_gafd .IC );_adgb .SetIfNotNil ("\u0052\u004f",_gafd .RO );_adgb .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gafd .OverlayText );
_adgb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gafd .Repeat );_adgb .SetIfNotNil ("\u0044\u0041",_gafd .DA );_adgb .SetIfNotNil ("\u0051",_gafd .Q );return _bgcd ;};func (_daf *PdfReader )newPdfAnnotationLineFromDict (_efac *_bcd .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_eeda :=PdfAnnotationLine {};
_gga ,_agcfd :=_daf .newPdfAnnotationMarkupFromDict (_efac );if _agcfd !=nil {return nil ,_agcfd ;};_eeda .PdfAnnotationMarkup =_gga ;_eeda .L =_efac .Get ("\u004c");_eeda .BS =_efac .Get ("\u0042\u0053");_eeda .LE =_efac .Get ("\u004c\u0045");_eeda .IC =_efac .Get ("\u0049\u0043");
_eeda .LL =_efac .Get ("\u004c\u004c");_eeda .LLE =_efac .Get ("\u004c\u004c\u0045");_eeda .Cap =_efac .Get ("\u0043\u0061\u0070");_eeda .IT =_efac .Get ("\u0049\u0054");_eeda .LLO =_efac .Get ("\u004c\u004c\u004f");_eeda .CP =_efac .Get ("\u0043\u0050");
_eeda .Measure =_efac .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_eeda .CO =_efac .Get ("\u0043\u004f");return &_eeda ,nil ;};func _bbcce (_ffeeg *_bcd .PdfObjectStream )(*PdfFunctionType4 ,error ){_bcgdf :=&PdfFunctionType4 {};_bcgdf ._gagab =_ffeeg ;
_ceace :=_ffeeg .PdfObjectDictionary ;_fddgb ,_ffae :=_bcd .TraceToDirectObject (_ceace .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcd .PdfObjectArray );if !_ffae {_aa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fcf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fddgb .Len ()%2!=0{_aa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fcf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_beeae ,_gfabb :=_fddgb .ToFloat64Array ();if _gfabb !=nil {return nil ,_gfabb ;};_bcgdf .Domain =_beeae ;_fddgb ,_ffae =_bcd .TraceToDirectObject (_ceace .Get ("\u0052\u0061\u006eg\u0065")).(*_bcd .PdfObjectArray );
if _ffae {if _fddgb .Len ()< 0||_fddgb .Len ()%2!=0{return nil ,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dbdeea ,_aeegg :=_fddgb .ToFloat64Array ();if _aeegg !=nil {return nil ,_aeegg ;};_bcgdf .Range =_dbdeea ;
};_egafd ,_gfabb :=_bcd .DecodeStream (_ffeeg );if _gfabb !=nil {return nil ,_gfabb ;};_bcgdf ._dedec =_egafd ;_egad :=_bc .NewPSParser (_egafd );_ccbcb ,_gfabb :=_egad .Parse ();if _gfabb !=nil {return nil ,_gfabb ;};_bcgdf .Program =_ccbcb ;return _bcgdf ,nil ;
};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_cafge DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_bebd *LTV )Enable (sig *PdfSignature ,extraCerts []*_b .Certificate )error {if _agfa :=_bebd .validateSig (sig );_agfa !=nil {return _agfa ;};_gdeag ,_agdf :=_bebd .generateVRIKey (sig );if _agdf !=nil {return _agdf ;};if _ ,_eade :=_bebd ._fabg .VRI [_gdeag ];
_eade &&_bebd .SkipExisting {return nil ;};_egbdg ,_agdf :=sig .GetCerts ();if _agdf !=nil {return _agdf ;};return _bebd .enable (_egbdg ,extraCerts ,_gdeag );};func (_bede *PdfField )inherit (_efee func (*PdfField )bool )(bool ,error ){_dggfd :=map[*PdfField ]bool {};
_fcdfb :=false ;_aebaa :=_bede ;for _aebaa !=nil {if _ ,_cgff :=_dggfd [_aebaa ];_cgff {return false ,_fcf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_fgbg :=_efee (_aebaa );if _fgbg {_fcdfb =true ;
break ;};_dggfd [_aebaa ]=true ;_aebaa =_aebaa .Parent ;};return _fcdfb ,nil ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bcd .PdfObject ;Volume _bcd .PdfObject ;Synchronous _bcd .PdfObject ;Repeat _bcd .PdfObject ;Mix _bcd .PdfObject ;};

// GetStructRoot gets the StructTreeRoot object
func (_abcac *PdfPage )GetStructTreeRoot ()(*_bcd .PdfObject ,bool ){_eadce ,_bagg :=_abcac ._gadef .GetCatalogStructTreeRoot ();return &_eadce ,_bagg ;};func (_cdab *PdfReader )newPdfActionLaunchFromDict (_bba *_bcd .PdfObjectDictionary )(*PdfActionLaunch ,error ){_eeaa ,_bcf :=_cdag (_bba .Get ("\u0046"));
if _bcf !=nil {return nil ,_bcf ;};return &PdfActionLaunch {Win :_bba .Get ("\u0057\u0069\u006e"),Mac :_bba .Get ("\u004d\u0061\u0063"),Unix :_bba .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_bba .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_eeaa },nil ;
};func _ddbga (_bcfeg *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_bcfeg }};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_gbccg :=NewPdfAnnotation ();_ace :=&PdfAnnotationLink {};_ace .PdfAnnotation =_gbccg ;_gbccg .SetContext (_ace );return _ace ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bcd .PdfObjectArray ;ExtGState _bcd .PdfObject ;};func (_ddebaf *PdfWriter )copyObject (_effgg _bcd .PdfObject ,_aggb map[_bcd .PdfObject ]_bcd .PdfObject ,_egdd map[_bcd .PdfObject ]struct{},_fdgadc bool )_bcd .PdfObject {_gcdbb :=!_ddebaf ._dbcbd &&_egdd !=nil ;
if _dgfbd ,_dbagc :=_aggb [_effgg ];_dbagc {if _gcdbb &&!_fdgadc {delete (_egdd ,_effgg );};return _dgfbd ;};if _effgg ==nil {_fddef :=_bcd .MakeNull ();return _fddef ;};_aaabb :=_effgg ;switch _agdc :=_effgg .(type ){case *_bcd .PdfObjectArray :_eedcf :=_bcd .MakeArray ();
_aaabb =_eedcf ;_aggb [_effgg ]=_aaabb ;for _ ,_feega :=range _agdc .Elements (){_eedcf .Append (_ddebaf .copyObject (_feega ,_aggb ,_egdd ,_fdgadc ));};case *_bcd .PdfObjectStreams :_ebdgd :=&_bcd .PdfObjectStreams {PdfObjectReference :_agdc .PdfObjectReference };
_aaabb =_ebdgd ;_aggb [_effgg ]=_aaabb ;for _ ,_bbbcb :=range _agdc .Elements (){_ebdgd .Append (_ddebaf .copyObject (_bbbcb ,_aggb ,_egdd ,_fdgadc ));};case *_bcd .PdfObjectStream :_geadeg :=&_bcd .PdfObjectStream {Stream :_agdc .Stream ,PdfObjectReference :_agdc .PdfObjectReference };
_aaabb =_geadeg ;_aggb [_effgg ]=_aaabb ;_geadeg .PdfObjectDictionary =_ddebaf .copyObject (_agdc .PdfObjectDictionary ,_aggb ,_egdd ,_fdgadc ).(*_bcd .PdfObjectDictionary );case *_bcd .PdfObjectDictionary :var _bdddg bool ;if _gcdbb &&!_fdgadc {if _dbeegeb ,_ :=_bcd .GetNameVal (_agdc .Get ("\u0054\u0079\u0070\u0065"));
_dbeegeb =="\u0050\u0061\u0067\u0065"{_ ,_fdcge :=_ddebaf ._gacdb [_agdc ];_fdgadc =!_fdcge ;_bdddg =_fdgadc ;};};_addfg :=_bcd .MakeDict ();_aaabb =_addfg ;_aggb [_effgg ]=_aaabb ;for _ ,_bfgg :=range _agdc .Keys (){_addfg .Set (_bfgg ,_ddebaf .copyObject (_agdc .Get (_bfgg ),_aggb ,_egdd ,_fdgadc ));
};if _bdddg {_aaabb =_bcd .MakeNull ();_fdgadc =false ;};case *_bcd .PdfIndirectObject :_gdeec :=&_bcd .PdfIndirectObject {PdfObjectReference :_agdc .PdfObjectReference };_aaabb =_gdeec ;_aggb [_effgg ]=_aaabb ;_gdeec .PdfObject =_ddebaf .copyObject (_agdc .PdfObject ,_aggb ,_egdd ,_fdgadc );
case *_bcd .PdfObjectString :_egfbb :=*_agdc ;_aaabb =&_egfbb ;_aggb [_effgg ]=_aaabb ;case *_bcd .PdfObjectName :_fcafb :=*_agdc ;_aaabb =&_fcafb ;_aggb [_effgg ]=_aaabb ;case *_bcd .PdfObjectNull :_aaabb =_bcd .MakeNull ();_aggb [_effgg ]=_aaabb ;case *_bcd .PdfObjectInteger :_bbga :=*_agdc ;
_aaabb =&_bbga ;_aggb [_effgg ]=_aaabb ;case *_bcd .PdfObjectReference :_dfcc :=*_agdc ;_aaabb =&_dfcc ;_aggb [_effgg ]=_aaabb ;case *_bcd .PdfObjectFloat :_fbebff :=*_agdc ;_aaabb =&_fbebff ;_aggb [_effgg ]=_aaabb ;case *_bcd .PdfObjectBool :_dbfe :=*_agdc ;
_aaabb =&_dbfe ;_aggb [_effgg ]=_aaabb ;case *pdfSignDictionary :_faeaa :=&pdfSignDictionary {PdfObjectDictionary :_bcd .MakeDict (),_geef :_agdc ._geef ,_eadde :_agdc ._eadde };_aaabb =_faeaa ;_aggb [_effgg ]=_aaabb ;for _ ,_ffbgb :=range _agdc .Keys (){_faeaa .Set (_ffbgb ,_ddebaf .copyObject (_agdc .Get (_ffbgb ),_aggb ,_egdd ,_fdgadc ));
};default:_aa .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_effgg );
};if _gcdbb &&_fdgadc {_egdd [_effgg ]=struct{}{};};return _aaabb ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_bcd .PdfObjectString ;Q *_bcd .PdfObjectInteger ;DS *_bcd .PdfObjectString ;RV _bcd .PdfObject ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_agbdg *PdfSignature ,_ddffb Hasher ,_facga SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _bcd .PdfObject )(*PdfOutputIntent ,error ){_febfe :=&PdfOutputIntent {};if _cgacg :=_febfe .ParsePdfObject (object );_cgacg !=nil {return nil ,_cgacg ;};return _febfe ,nil ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_adgag *PdfWriter )SetOpenAction (dest _bcd .PdfObject )error {if dest ==nil ||_bcd .IsNullObject (dest ){return nil ;};_adgag ._daaaa .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _adgag .addObjects (dest );};


// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_eegbe *DSS )ToPdfObject ()_bcd .PdfObject {_bfbed :=_eegbe ._efdee .PdfObject .(*_bcd .PdfObjectDictionary );_bfbed .Clear ();_afdea :=_bcd .MakeDict ();for _bcfc ,_gfbda :=range _eegbe .VRI {_afdea .Set (*_bcd .MakeName (_bcfc ),_gfbda .ToPdfObject ());
};_bfbed .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_aegcf (_eegbe .Certs ));_bfbed .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_aegcf (_eegbe .OCSPs ));_bfbed .SetIfNotNil ("\u0043\u0052\u004c\u0073",_aegcf (_eegbe .CRLs ));_bfbed .Set ("\u0056\u0052\u0049",_afdea );
return _eegbe ._efdee ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_dgedg *PdfFont )BytesToCharcodes (data []byte )[]_af .CharCode {_aa .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _efef ,_ggbggd :=_dgedg ._fbcb .(*pdfFontType0 );_ggbggd &&_efef ._fadc !=nil {if _ggcad ,_baff :=_efef .bytesToCharcodes (data );_baff {return _ggcad ;};};var (_bdcb =make ([]_af .CharCode ,0,len (data )+len (data )%2);_gaae =_dgedg .baseFields ();
);if _gaae ._fbfb !=nil {if _caec ,_efcfb :=_gaae ._fbfb .BytesToCharcodes (data );_efcfb {for _ ,_agage :=range _caec {_bdcb =append (_bdcb ,_af .CharCode (_agage ));};return _bdcb ;};};if _gaae .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _beedb :=0;_beedb < len (data );_beedb +=2{_beaff :=uint16 (data [_beedb ])<<8|uint16 (data [_beedb +1]);_bdcb =append (_bdcb ,_af .CharCode (_beaff ));};}else {for _ ,_fbbc :=range data {_bdcb =append (_bdcb ,_af .CharCode (_fbbc ));
};};return _bdcb ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_acaaa pdfFontType3 )GetCharMetrics (code _af .CharCode )(_aab .CharMetrics ,bool ){if _egaf ,_cecg :=_acaaa ._aacec [code ];_cecg {return _aab .CharMetrics {Wx :_egaf },true ;};if _aab .IsStdFont (_aab .StdFontName (_acaaa ._gagg )){return _aab .CharMetrics {Wx :250},true ;
};return _aab .CharMetrics {},false ;};func _daebd (_fbbcg _bcd .PdfObject )(*PdfPattern ,error ){_fgaad :=&PdfPattern {};var _daeac *_bcd .PdfObjectDictionary ;if _abbgg ,_dbdeg :=_bcd .GetIndirect (_fbbcg );_dbdeg {_fgaad ._bdfe =_abbgg ;_gdgbg ,_gcaeg :=_abbgg .PdfObject .(*_bcd .PdfObjectDictionary );
if !_gcaeg {_aa .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_abbgg .PdfObject );
return nil ,_bcd .ErrTypeError ;};_daeac =_gdgbg ;}else if _gdedc ,_aceae :=_bcd .GetStream (_fbbcg );_aceae {_fgaad ._bdfe =_gdedc ;_daeac =_gdedc .PdfObjectDictionary ;}else {_aa .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_fbbcg );
return nil ,_bcd .ErrTypeError ;};_bfcfc :=_daeac .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _bfcfc ==nil {_aa .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dcgab ,_fdedce :=_bfcfc .(*_bcd .PdfObjectInteger );if !_fdedce {_aa .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bfcfc );
return nil ,_bcd .ErrTypeError ;};if *_dcgab !=1&&*_dcgab !=2{_aa .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_dcgab );return nil ,_bcd .ErrRangeError ;
};_fgaad .PatternType =int64 (*_dcgab );switch *_dcgab {case 1:_cccff ,_cebde :=_gegag (_daeac );if _cebde !=nil {return nil ,_cebde ;};_cccff .PdfPattern =_fgaad ;_fgaad ._dabac =_cccff ;return _fgaad ,nil ;case 2:_agcb ,_gbbdf :=_gdbea (_daeac );if _gbbdf !=nil {return nil ,_gbbdf ;
};_agcb .PdfPattern =_fgaad ;_fgaad ._dabac =_agcb ;return _fgaad ,nil ;};return nil ,_fcf .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func (_fgbbf *Image )samplesTrimPadding (_cgcfd []uint32 )[]uint32 {_gcebb :=_fgbbf .ColorComponents *int (_fgbbf .Width )*int (_fgbbf .Height );
if len (_cgcfd )==_gcebb {return _cgcfd ;};_fdddf :=make ([]uint32 ,_gcebb );_dagaf :=int (_fgbbf .Width )*_fgbbf .ColorComponents ;var _fecag ,_ccgdg ,_ecad ,_gbaaf int ;_ccbdf :=_gac .BytesPerLine (int (_fgbbf .Width ),int (_fgbbf .BitsPerComponent ),_fgbbf .ColorComponents );
for _fecag =0;_fecag < int (_fgbbf .Height );_fecag ++{_ccgdg =_fecag *int (_fgbbf .Width );_ecad =_fecag *_ccbdf ;for _gbaaf =0;_gbaaf < _dagaf ;_gbaaf ++{_fdddf [_ccgdg +_gbaaf ]=_cgcfd [_ecad +_gbaaf ];};};return _fdddf ;};var (CourierName =_aab .CourierName ;
CourierBoldName =_aab .CourierBoldName ;CourierObliqueName =_aab .CourierObliqueName ;CourierBoldObliqueName =_aab .CourierBoldObliqueName ;HelveticaName =_aab .HelveticaName ;HelveticaBoldName =_aab .HelveticaBoldName ;HelveticaObliqueName =_aab .HelveticaObliqueName ;
HelveticaBoldObliqueName =_aab .HelveticaBoldObliqueName ;SymbolName =_aab .SymbolName ;ZapfDingbatsName =_aab .ZapfDingbatsName ;TimesRomanName =_aab .TimesRomanName ;TimesBoldName =_aab .TimesBoldName ;TimesItalicName =_aab .TimesItalicName ;TimesBoldItalicName =_aab .TimesBoldItalicName ;
);

// GetCharMetrics returns the char metrics for character code `code`.
func (_fbeda pdfCIDFontType2 )GetCharMetrics (code _af .CharCode )(_aab .CharMetrics ,bool ){if _bbbc ,_ccdea :=_fbeda ._dbabb [code ];_ccdea {return _aab .CharMetrics {Wx :_bbbc },true ;};_bacbd :=rune (code );_fgdcb ,_gcad :=_fbeda ._ffda [_bacbd ];if !_gcad {_fgdcb =int (_fbeda ._cafed );
};return _aab .CharMetrics {Wx :float64 (_fgdcb )},true ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_feeea *PdfWriter )SetNameDictionary (names _bcd .PdfObject )error {if names ==nil {return nil ;};_aa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_feeea ._daaaa .Set ("\u004e\u0061\u006de\u0073",names );return _feeea .addObjects (names );};

// DecodeArray returns the component range values for the Separation colorspace.
func (_gdee *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gdbf *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_ebed ,_eggg :=color .(*PdfColorPattern );if !_eggg {_aa .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _ebed .Color ==nil {return color ,nil ;};if _gdbf .UnderlyingCS ==nil {return nil ,_fcf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gdbf .UnderlyingCS .ColorToRGB (_ebed .Color );
};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_gaaeg *PdfPageResources )GetXObjectByName (keyName _bcd .PdfObjectName )(*_bcd .PdfObjectStream ,XObjectType ){if _gaaeg .XObject ==nil {return nil ,XObjectTypeUndefined ;};_ccdgg ,_acfef :=_bcd .TraceToDirectObject (_gaaeg .XObject ).(*_bcd .PdfObjectDictionary );
if !_acfef {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcd .TraceToDirectObject (_gaaeg .XObject ));
return nil ,XObjectTypeUndefined ;};if _gdaf :=_ccdgg .Get (keyName );_gdaf !=nil {_eecac ,_aefbb :=_bcd .GetStream (_gdaf );if !_aefbb {_aa .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_gdaf );
return nil ,XObjectTypeUndefined ;};_fdfcf :=_eecac .PdfObjectDictionary ;_dbede ,_aefbb :=_bcd .TraceToDirectObject (_fdfcf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bcd .PdfObjectName );if !_aefbb {_aa .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_fdfcf .String ());
return nil ,XObjectTypeUndefined ;};if *_dbede =="\u0049\u006d\u0061g\u0065"{return _eecac ,XObjectTypeImage ;}else if *_dbede =="\u0046\u006f\u0072\u006d"{return _eecac ,XObjectTypeForm ;}else if *_dbede =="\u0050\u0053"{return _eecac ,XObjectTypePS ;
}else {_aa .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_dbede );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_ddcde *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _cebd []_af .TextEncoder ;var _dbdac _af .CMapEncoder ;if _aabda :=_ddcde .baseFields ()._fbfb ;_aabda !=nil {_dbdac =_af .NewCMapEncoder ("",nil ,_aabda );};_aebc :=_ddcde .Encoder ();
if _aebc !=nil {switch _cffee :=_aebc .(type ){case _af .SimpleEncoder :_dfad :=_cffee .BaseName ();if _ ,_bbae :=_edfdd [_dfad ];_bbae {_cebd =append (_cebd ,_aebc );};};};if len (_cebd )==0{if _ddcde .baseFields ()._fbfb !=nil {_cebd =append (_cebd ,_dbdac );
};if _aebc !=nil {_cebd =append (_cebd ,_aebc );};};var _acfb _ge .Buffer ;var _ebag int ;for _ ,_efgg :=range data {var _daef bool ;for _ ,_gbcd :=range _cebd {if _bbdbg :=_gbcd .Encode (string (_efgg ));len (_bbdbg )> 0{_acfb .Write (_bbdbg );_daef =true ;
break ;};};if !_daef {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_efgg );
_ebag ++;};};if _ebag !=0{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_ebag ,_ddcde ,_cebd );
};return _acfb .Bytes (),_ebag ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_faea :=map[rune ]int {};for _ ,_ggedce :=range text {_faea [_ggedce ]++;};return _faea ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_beaeb :=&PdfShadingPatternType3 {};_beaeb .Matrix =_bcd .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_beaeb .PdfPattern =&PdfPattern {};_beaeb .PdfPattern .PatternType =int64 (*_bcd .MakeInteger (2));
_beaeb .PdfPattern ._dabac =_beaeb ;_beaeb .PdfPattern ._bdfe =_bcd .MakeIndirectObject (_bcd .MakeDict ());return _beaeb ;};

// String returns a human readable description of `fontfile`.
func (_cdgac *fontFile )String ()string {_febed :="\u005b\u004e\u006f\u006e\u0065\u005d";if _cdgac ._fbfa !=nil {_febed =_cdgac ._fbfa .String ();};return _f .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_cdgac ._fcbbc ,_febed );
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_eada *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _eada .Alternate ==nil {if _eada .N ==1{_gbad :=NewPdfColorspaceDeviceGray ();return _gbad .ColorFromFloats (vals );}else if _eada .N ==3{_dbfce :=NewPdfColorspaceDeviceRGB ();
return _dbfce .ColorFromFloats (vals );}else if _eada .N ==4{_eaged :=NewPdfColorspaceDeviceCMYK ();return _eaged .ColorFromFloats (vals );}else {return nil ,_fcf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _eada .Alternate .ColorFromFloats (vals );};

// GetOCProperties returns the optional content properties PdfObject.
func (_fgbf *PdfReader )GetOCProperties ()(_bcd .PdfObject ,error ){_dadb :=_fgbf ._babac ;_acae :=_dadb .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_acae =_bcd .ResolveReference (_acae );if !_fgbf ._aacc {_ggdga :=_fgbf .traverseObjectData (_acae );
if _ggdga !=nil {return nil ,_ggdga ;};};return _acae ,nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_egbc :=NewPdfAction ();_deeb :=&PdfActionGoTo3DView {};_deeb .PdfAction =_egbc ;_egbc .SetContext (_deeb );return _deeb ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_eagg *PdfFieldSignature )ToPdfObject ()_bcd .PdfObject {if _eagg .PdfAnnotationWidget !=nil {_eagg .PdfAnnotationWidget .ToPdfObject ();};_eagg .PdfField .ToPdfObject ();_fcdgad :=_eagg ._ebddc ;_adfg :=_fcdgad .PdfObject .(*_bcd .PdfObjectDictionary );
_adfg .SetIfNotNil ("\u0046\u0054",_bcd .MakeName ("\u0053\u0069\u0067"));_adfg .SetIfNotNil ("\u004c\u006f\u0063\u006b",_eagg .Lock );_adfg .SetIfNotNil ("\u0053\u0056",_eagg .SV );if _eagg .V !=nil {_adfg .SetIfNotNil ("\u0056",_eagg .V .ToPdfObject ());
};return _fcdgad ;};

// ToInteger convert to an integer format.
func (_dbfd *PdfColorDeviceGray )ToInteger (bits int )uint32 {_gdcf :=_cc .Pow (2,float64 (bits ))-1;return uint32 (_gdcf *_dbfd .Val ());};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bcd .PdfObject ;Popup *PdfAnnotationPopup ;CA _bcd .PdfObject ;RC _bcd .PdfObject ;CreationDate _bcd .PdfObject ;IRT _bcd .PdfObject ;Subj _bcd .PdfObject ;RT _bcd .PdfObject ;IT _bcd .PdfObject ;ExData _bcd .PdfObject ;
};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_cccd *XObjectImage )GetContainingPdfObject ()_bcd .PdfObject {return _cccd ._baedd };

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_ggad *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bcd .GetNumberAsFloat (_ggad .CapHeight );};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_cdff *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bcd .PdfObject )(PdfColor ,error ){if _cdff .Alternate ==nil {if _cdff .N ==1{_gafbc :=NewPdfColorspaceDeviceGray ();return _gafbc .ColorFromPdfObjects (objects );}else if _cdff .N ==3{_cad :=NewPdfColorspaceDeviceRGB ();
return _cad .ColorFromPdfObjects (objects );}else if _cdff .N ==4{_dbdb :=NewPdfColorspaceDeviceCMYK ();return _dbdb .ColorFromPdfObjects (objects );}else {return nil ,_fcf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _cdff .Alternate .ColorFromPdfObjects (objects );};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bcd .PdfObject ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_bgcb *PdfColorspaceDeviceN )ToPdfObject ()_bcd .PdfObject {_afff :=_bcd .MakeArray (_bcd .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_afff .Append (_bgcb .ColorantNames );_afff .Append (_bgcb .AlternateSpace .ToPdfObject ());_afff .Append (_bgcb .TintTransform .ToPdfObject ());
if _bgcb .Attributes !=nil {_afff .Append (_bgcb .Attributes .ToPdfObject ());};if _bgcb ._gdfbg !=nil {_bgcb ._gdfbg .PdfObject =_afff ;return _bgcb ._gdfbg ;};return _afff ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bcd .PdfObject ;Sy _bcd .PdfObject ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_decgd :=&PdfColorspaceSpecialSeparation {};return _decgd ;};

// ToPdfObject implements interface PdfModel.
func (_beba *PdfActionRendition )ToPdfObject ()_bcd .PdfObject {_beba .PdfAction .ToPdfObject ();_cef :=_beba ._fgae ;_bde :=_cef .PdfObject .(*_bcd .PdfObjectDictionary );_bde .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeRendition )));_bde .SetIfNotNil ("\u0052",_beba .R );
_bde .SetIfNotNil ("\u0041\u004e",_beba .AN );_bde .SetIfNotNil ("\u004f\u0050",_beba .OP );_bde .SetIfNotNil ("\u004a\u0053",_beba .JS );return _cef ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;
);

// ToPdfObject implements interface PdfModel.
func (_aeeb *PdfActionNamed )ToPdfObject ()_bcd .PdfObject {_aeeb .PdfAction .ToPdfObject ();_fcb :=_aeeb ._fgae ;_ccd :=_fcb .PdfObject .(*_bcd .PdfObjectDictionary );_ccd .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeNamed )));_ccd .SetIfNotNil ("\u004e",_aeeb .N );
return _fcb ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_bfge *LTV )EnableAll (extraCerts []*_b .Certificate )error {_cedd :=_bfge ._dadd ._aagg .AcroForm ;for _ ,_gegbd :=range _cedd .AllFields (){_cfeaa ,_ :=_gegbd .GetContext ().(*PdfFieldSignature );if _cfeaa ==nil {continue ;};_adfed :=_cfeaa .V ;
if _bddg :=_bfge .validateSig (_adfed );_bddg !=nil {_aa .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_bddg );
};if _fdbfe :=_bfge .Enable (_adfed ,extraCerts );_fdbfe !=nil {return _fdbfe ;};};return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_bdba *PdfFunctionType0 )ToPdfObject ()_bcd .PdfObject {if _bdba ._agcce ==nil {_bdba ._agcce =&_bcd .PdfObjectStream {};};_dccf :=_bcd .MakeDict ();_dccf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcd .MakeInteger (0));
_cbaa :=&_bcd .PdfObjectArray {};for _ ,_dcde :=range _bdba .Domain {_cbaa .Append (_bcd .MakeFloat (_dcde ));};_dccf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cbaa );_dbgfa :=&_bcd .PdfObjectArray {};for _ ,_ccgdbe :=range _bdba .Range {_dbgfa .Append (_bcd .MakeFloat (_ccgdbe ));
};_dccf .Set ("\u0052\u0061\u006eg\u0065",_dbgfa );_ffebe :=&_bcd .PdfObjectArray {};for _ ,_cagce :=range _bdba .Size {_ffebe .Append (_bcd .MakeInteger (int64 (_cagce )));};_dccf .Set ("\u0053\u0069\u007a\u0065",_ffebe );_dccf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bcd .MakeInteger (int64 (_bdba .BitsPerSample )));
if _bdba .Order !=1{_dccf .Set ("\u004f\u0072\u0064e\u0072",_bcd .MakeInteger (int64 (_bdba .Order )));};_dccf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcd .MakeInteger (int64 (len (_bdba ._fcac ))));_bdba ._agcce .Stream =_bdba ._fcac ;_bdba ._agcce .PdfObjectDictionary =_dccf ;
return _bdba ._agcce ;};func (_eceb *pdfFontType0 )bytesToCharcodes (_addcb []byte )([]_af .CharCode ,bool ){if _eceb ._fadc ==nil {return nil ,false ;};_dcebf ,_fbbgf :=_eceb ._fadc .BytesToCharcodes (_addcb );if !_fbbgf {return nil ,false ;};_daeee :=make ([]_af .CharCode ,len (_dcebf ));
for _bfag ,_ggggc :=range _dcebf {_daeee [_bfag ]=_af .CharCode (_ggggc );};return _daeee ,true ;};func (_ggdea *PdfReader )loadPerms ()(*Permissions ,error ){if _afgad :=_ggdea ._babac .Get ("\u0050\u0065\u0072m\u0073");_afgad !=nil {if _cccaa ,_edbcg :=_bcd .GetDict (_afgad );
_edbcg {_dacae :=_cccaa .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _dacae ==nil {return nil ,nil ;};if _cafbc ,_fgag :=_bcd .GetIndirect (_dacae );_fgag {_cgcgd ,_gfeed :=_ggdea .newPdfSignatureFromIndirect (_cafbc );if _gfeed !=nil {return nil ,_gfeed ;
};return NewPermissions (_cgcgd ),nil ;};return nil ,_f .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};func _dbadb (_gafe *_bcd .PdfObjectDictionary )*VRI {_cbgbc ,_ :=_bcd .GetString (_gafe .Get ("\u0054\u0055"));_aeff ,_ :=_bcd .GetString (_gafe .Get ("\u0054\u0053"));return &VRI {Cert :_eegc (_gafe .Get ("\u0043\u0065\u0072\u0074")),OCSP :_eegc (_gafe .Get ("\u004f\u0043\u0053\u0050")),CRL :_eegc (_gafe .Get ("\u0043\u0052\u004c")),TU :_cbgbc ,TS :_aeff };
};func (_feffb *PdfWriter )getPdfVersion ()string {return _f .Sprintf ("\u0025\u0064\u002e%\u0064",_feffb ._cecgb .Major ,_feffb ._cecgb .Minor );};func _cfgb (_acfa _bcd .PdfObject )(*PdfColorspaceCalGray ,error ){_eegef :=NewPdfColorspaceCalGray ();if _dbde ,_ecdfc :=_acfa .(*_bcd .PdfIndirectObject );
_ecdfc {_eegef ._faf =_dbde ;};_acfa =_bcd .TraceToDirectObject (_acfa );_cdcb ,_fabf :=_acfa .(*_bcd .PdfObjectArray );if !_fabf {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cdcb .Len ()!=2{return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_acfa =_bcd .TraceToDirectObject (_cdcb .Get (0));_adaf ,_fabf :=_acfa .(*_bcd .PdfObjectName );if !_fabf {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_adaf !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_f .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_acfa =_bcd .TraceToDirectObject (_cdcb .Get (1));
_dbceg ,_fabf :=_acfa .(*_bcd .PdfObjectDictionary );if !_fabf {return nil ,_f .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_acfa =_dbceg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_acfa =_bcd .TraceToDirectObject (_acfa );_afee ,_fabf :=_acfa .(*_bcd .PdfObjectArray );if !_fabf {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _afee .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_fgge ,_dcffb :=_afee .GetAsFloat64Slice ();
if _dcffb !=nil {return nil ,_dcffb ;};_eegef .WhitePoint =_fgge ;_acfa =_dbceg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _acfa !=nil {_acfa =_bcd .TraceToDirectObject (_acfa );_abcca ,_eagb :=_acfa .(*_bcd .PdfObjectArray );
if !_eagb {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _abcca .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_gcba ,_bece :=_abcca .GetAsFloat64Slice ();if _bece !=nil {return nil ,_bece ;};_eegef .BlackPoint =_gcba ;};_acfa =_dbceg .Get ("\u0047\u0061\u006dm\u0061");if _acfa !=nil {_acfa =_bcd .TraceToDirectObject (_acfa );_fcbc ,_ffgf :=_bcd .GetNumberAsFloat (_acfa );
if _ffgf !=nil {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_eegef .Gamma =_fcbc ;};return _eegef ,nil ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ec .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _gbcba ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _fedda (rs ,opts ,true ,_gbcba );
};

// ToPdfObject implements interface PdfModel.
func (_cfgf *PdfAnnotationTrapNet )ToPdfObject ()_bcd .PdfObject {_cfgf .PdfAnnotation .ToPdfObject ();_bgdg :=_cfgf ._dbd ;_bcgad :=_bgdg .PdfObject .(*_bcd .PdfObjectDictionary );_bcgad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _bgdg ;};func (_bdabe *PdfReader )newPdfSignatureReferenceFromDict (_bbca *_bcd .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _bcgbd ,_cfgef :=_bdabe ._gaafcb .GetModelFromPrimitive (_bbca ).(*PdfSignatureReference );_cfgef {return _bcgbd ,nil ;
};_gbfbe :=&PdfSignatureReference {_geafd :_bbca ,Data :_bbca .Get ("\u0044\u0061\u0074\u0061")};var _gegfg bool ;_gbfbe .Type ,_ =_bcd .GetName (_bbca .Get ("\u0054\u0079\u0070\u0065"));_gbfbe .TransformMethod ,_gegfg =_bcd .GetName (_bbca .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_gegfg {_aa .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gbfbe .TransformParams ,_ =_bcd .GetDict (_bbca .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_gbfbe .DigestMethod ,_ =_bcd .GetName (_bbca .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _gbfbe ,nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bcd .PdfObjectArray ;Matrix *_bcd .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_cefd *PdfAnnotation3D )ToPdfObject ()_bcd .PdfObject {_cefd .PdfAnnotation .ToPdfObject ();_gaeb :=_cefd ._dbd ;_bebaa :=_gaeb .PdfObject .(*_bcd .PdfObjectDictionary );_bebaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0033\u0044"));
_bebaa .SetIfNotNil ("\u0033\u0044\u0044",_cefd .T3DD );_bebaa .SetIfNotNil ("\u0033\u0044\u0056",_cefd .T3DV );_bebaa .SetIfNotNil ("\u0033\u0044\u0041",_cefd .T3DA );_bebaa .SetIfNotNil ("\u0033\u0044\u0049",_cefd .T3DI );_bebaa .SetIfNotNil ("\u0033\u0044\u0042",_cefd .T3DB );
return _gaeb ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bcd .PdfObject ;GetContainingPdfObject ()_bcd .PdfObject ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_fbfdb *PdfPattern )GetContainingPdfObject ()_bcd .PdfObject {return _fbfdb ._bdfe };func (_afa *PdfReader )newPdfAnnotationSquigglyFromDict (_fcag *_bcd .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gda :=PdfAnnotationSquiggly {};_bgbegf ,_bedf :=_afa .newPdfAnnotationMarkupFromDict (_fcag );
if _bedf !=nil {return nil ,_bedf ;};_gda .PdfAnnotationMarkup =_bgbegf ;_gda .QuadPoints =_fcag .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gda ,nil ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_dcggb :_bcd .MakeDict ()};
};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_bdeaa *PdfReader )GetCatalogMetadata ()(_bcd .PdfObject ,bool ){if _bdeaa ._babac ==nil {return nil ,false ;};_bdaeg :=_bdeaa ._babac .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _bdaeg ,_bdaeg !=nil ;};

// RemovePage removes a page by number.
func (_aaed *PdfAppender )RemovePage (pageNum int ){_eceg :=pageNum -1;_aaed ._ebcd =append (_aaed ._ebcd [0:_eceg ],_aaed ._ebcd [pageNum :]...);};func _adfb (_aagge _bcd .PdfObject )(*PdfColorspaceLab ,error ){_ddaf :=NewPdfColorspaceLab ();if _dadg ,_egac :=_aagge .(*_bcd .PdfIndirectObject );
_egac {_ddaf ._bggfg =_dadg ;};_aagge =_bcd .TraceToDirectObject (_aagge );_bgfd ,_bdef :=_aagge .(*_bcd .PdfObjectArray );if !_bdef {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bgfd .Len ()!=2{return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_aagge =_bcd .TraceToDirectObject (_bgfd .Get (0));_cace ,_bdef :=_aagge .(*_bcd .PdfObjectName );if !_bdef {return nil ,_f .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_cace !="\u004c\u0061\u0062"{return nil ,_f .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_aagge =_bcd .TraceToDirectObject (_bgfd .Get (1));_eacg ,_bdef :=_aagge .(*_bcd .PdfObjectDictionary );
if !_bdef {return nil ,_f .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_aagge =_eacg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_aagge =_bcd .TraceToDirectObject (_aagge );_bceef ,_bdef :=_aagge .(*_bcd .PdfObjectArray );if !_bdef {return nil ,_f .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _bceef .Len ()!=3{return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gaaf ,_dfde :=_bceef .GetAsFloat64Slice ();if _dfde !=nil {return nil ,_dfde ;};_ddaf .WhitePoint =_gaaf ;_aagge =_eacg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _aagge !=nil {_aagge =_bcd .TraceToDirectObject (_aagge );
_cbacd ,_baad :=_aagge .(*_bcd .PdfObjectArray );if !_baad {return nil ,_f .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _cbacd .Len ()!=3{return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_fafa ,_cbee :=_cbacd .GetAsFloat64Slice ();if _cbee !=nil {return nil ,_cbee ;};_ddaf .BlackPoint =_fafa ;};_aagge =_eacg .Get ("\u0052\u0061\u006eg\u0065");if _aagge !=nil {_aagge =_bcd .TraceToDirectObject (_aagge );_bdgd ,_eadbc :=_aagge .(*_bcd .PdfObjectArray );
if !_eadbc {_aa .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_f .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bdgd .Len ()!=4{_aa .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_baaaa ,_beaae :=_bdgd .GetAsFloat64Slice ();if _beaae !=nil {return nil ,_beaae ;};_ddaf .Range =_baaaa ;};return _ddaf ,nil ;};func _eddc (_cgdg *_bcd .PdfObjectDictionary )(*PdfFieldChoice ,error ){_bbeb :=&PdfFieldChoice {};
_bbeb .Opt ,_ =_bcd .GetArray (_cgdg .Get ("\u004f\u0070\u0074"));_bbeb .TI ,_ =_bcd .GetInt (_cgdg .Get ("\u0054\u0049"));_bbeb .I ,_ =_bcd .GetArray (_cgdg .Get ("\u0049"));return _bbeb ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_ddgdg *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _ddgdg ._gccae ==nil {_ddgdg .GetAnnotations ();};_ddgdg ._gccae =append (_ddgdg ._gccae ,annot );};func _cdag (_ceg _bcd .PdfObject )(*PdfFilespec ,error ){if _ceg ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_ceg );};func (_gabfc *PdfWriter )checkLicense ()error {_ebegc :=_fd .GetLicenseKey ();if (_ebegc ==nil ||!_ebegc .IsLicensed ())&&!_caefa {_f .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_f .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _fcf .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_bcd .PdfObjectArray ;ExtGState _bcd .PdfObject ;};func _dfbad (_eagbb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_eagbb }};func _dadc (_gcfad _bcd .PdfObject )(map[_af .CharCode ]float64 ,error ){if _gcfad ==nil {return nil ,nil ;
};_ebgde ,_gcegc :=_bcd .GetArray (_gcfad );if !_gcegc {return nil ,nil ;};_bgea :=map[_af .CharCode ]float64 {};_gbgd :=_ebgde .Len ();for _abgf :=0;_abgf < _gbgd -1;_abgf ++{_dccga :=_bcd .TraceToDirectObject (_ebgde .Get (_abgf ));_gccfc ,_fgeaa :=_bcd .GetIntVal (_dccga );
if !_fgeaa {return nil ,_f .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_abgf ,_dccga );};_abgf ++;if _abgf > _gbgd -1{return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ebgde );
};_babfd :=_bcd .TraceToDirectObject (_ebgde .Get (_abgf ));switch _babfd .(type ){case *_bcd .PdfObjectArray :_fafb ,_ :=_bcd .GetArray (_babfd );if _ddda ,_efbg :=_fafb .ToFloat64Array ();_efbg ==nil {for _cffd :=0;_cffd < len (_ddda );_cffd ++{_bgea [_af .CharCode (_gccfc +_cffd )]=_ddda [_cffd ];
};}else {return nil ,_f .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_abgf ,_babfd );};case *_bcd .PdfObjectInteger :_gedbg ,_ecbd :=_bcd .GetIntVal (_babfd );
if !_ecbd {return nil ,_f .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_abgf ,_babfd );};_abgf ++;if _abgf > _gbgd -1{return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ebgde );
};_dfdc :=_ebgde .Get (_abgf );_adfgg ,_befc :=_bcd .GetNumberAsFloat (_dfdc );if _befc !=nil {return nil ,_f .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_abgf ,_dfdc );
};for _edecd :=_gccfc ;_edecd <=_gedbg ;_edecd ++{_bgea [_af .CharCode (_edecd )]=_adfgg ;};default:return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_abgf ,_babfd );
};};return _bgea ,nil ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_eed :=NewPdfAnnotation ();_cge :=&PdfAnnotationSound {};_cge .PdfAnnotation =_eed ;_cge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eed .SetContext (_cge );return _cge ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _fcg .Permissions ;Algorithm EncryptionAlgorithm ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_cdaaa *PdfPattern )GetContext ()PdfModel {return _cdaaa ._dabac };

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_gccd *PdfColorCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject converts the font to a PDF representation.
func (_ceagc *pdfFontType0 )ToPdfObject ()_bcd .PdfObject {if _ceagc ._fgacg ==nil {_ceagc ._fgacg =&_bcd .PdfIndirectObject {};};_faafed :=_ceagc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_ceagc ._fgacg .PdfObject =_faafed ;if _ceagc .Encoding !=nil {_faafed .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ceagc .Encoding );
}else if _ceagc ._ggdfd !=nil {_faafed .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ceagc ._ggdfd .ToPdfObject ());};if _ceagc .DescendantFont !=nil {_faafed .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bcd .MakeArray (_ceagc .DescendantFont .ToPdfObject ()));
};return _ceagc ._fgacg ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_aegd *PdfFont )SubsetRegistered ()error {switch _eega :=_aegd ._fbcb .(type ){case *pdfFontType0 :_cffe :=_eega .subsetRegistered ();if _cffe !=nil {_aa .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cffe );
return _cffe ;};if _eega ._fgacg !=nil {if _eega ._ggdfd !=nil {_eega ._ggdfd .ToPdfObject ();};_eega .ToPdfObject ();};default:_aa .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_eega );
};return nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_eeacg ,_egfb :=_gecfe (basefont );if _egfb !=nil {return nil ,_egfb ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_eeacg ._gcega =_af .NewWinAnsiEncoder ();};return &PdfFont {_fbcb :&_eeacg },nil ;
};

// GetAscent returns the Ascent of the font `descriptor`.
func (_caged *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bcd .GetNumberAsFloat (_caged .Ascent );};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bcd .PdfObject ;MK _bcd .PdfObject ;A _bcd .PdfObject ;AA _bcd .PdfObject ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bcd .PdfObjectInteger ;BitsPerComponent *_bcd .PdfObjectInteger ;BitsPerFlag *_bcd .PdfObjectInteger ;Decode *_bcd .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_degc *PdfPattern )ToPdfObject ()_bcd .PdfObject {_eagd :=_degc .getDict ();_eagd .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_eagd .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bcd .MakeInteger (_degc .PatternType ));
return _degc ._bdfe ;};

// ToPdfObject implements interface PdfModel.
func (_gcbdg *PdfAnnotationProjection )ToPdfObject ()_bcd .PdfObject {_gcbdg .PdfAnnotation .ToPdfObject ();_add :=_gcbdg ._dbd ;_bbdb :=_add .PdfObject .(*_bcd .PdfObjectDictionary );_gcbdg .PdfAnnotationMarkup .appendToPdfDictionary (_bbdb );return _add ;
};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_bggfg *_bcd .PdfIndirectObject ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_fcda *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bcd .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bcd .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bcd .PdfObjectBool ;_ecdfcf PdfModel ;_gggef _bcd .PdfObject ;};

// AddOutlineTree adds outlines to a PDF file.
func (_egfcg *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_egfcg ._fbcgef =outlineTree ;};

// SetFlag sets the flag for the field.
func (_egf *PdfField )SetFlag (flag FieldFlag ){_egf .Ff =_bcd .MakeInteger (int64 (flag ))};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_ffcf *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_dfefg *PdfShadingPatternType2 )ToPdfObject ()_bcd .PdfObject {_dfefg .PdfPattern .ToPdfObject ();_dcdc :=_dfefg .getDict ();if _dfefg .Shading !=nil {_dcdc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dfefg .Shading .ToPdfObject ());};if _dfefg .Matrix !=nil {_dcdc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dfefg .Matrix );
};if _dfefg .ExtGState !=nil {_dcdc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dfefg .ExtGState );};return _dfefg ._bdfe ;};func (_ddcdf *PdfWriter )writeObjects (){_aa .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_ddcdf ._cccfae ));
_ddcdf ._dfafe =make (map[int ]crossReference );_ddcdf ._dfafe [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _ddcdf ._gdfed .ObjectMap !=nil {for _bceeb ,_ecdec :=range _ddcdf ._gdfed .ObjectMap {if _bceeb ==0{continue ;};if _ecdec .XType ==_bcd .XrefTypeObjectStream {_fgga :=crossReference {Type :2,ObjectNumber :_ecdec .OsObjNumber ,Index :_ecdec .OsObjIndex };
_ddcdf ._dfafe [_bceeb ]=_fgga ;};if _ecdec .XType ==_bcd .XrefTypeTableEntry {_fedcf :=crossReference {Type :1,ObjectNumber :_ecdec .ObjectNumber ,Offset :_ecdec .Offset };_ddcdf ._dfafe [_bceeb ]=_fedcf ;};};};};func (_bbbd *PdfAnnotationMarkup )appendToPdfDictionary (_agbe *_bcd .PdfObjectDictionary ){_agbe .SetIfNotNil ("\u0054",_bbbd .T );
if _bbbd .Popup !=nil {_agbe .Set ("\u0050\u006f\u0070u\u0070",_bbbd .Popup .ToPdfObject ());};_agbe .SetIfNotNil ("\u0043\u0041",_bbbd .CA );_agbe .SetIfNotNil ("\u0052\u0043",_bbbd .RC );_agbe .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bbbd .CreationDate );
_agbe .SetIfNotNil ("\u0049\u0052\u0054",_bbbd .IRT );_agbe .SetIfNotNil ("\u0053\u0075\u0062\u006a",_bbbd .Subj );_agbe .SetIfNotNil ("\u0052\u0054",_bbbd .RT );_agbe .SetIfNotNil ("\u0049\u0054",_bbbd .IT );_agbe .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_bbbd .ExData );
};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_aede *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bcd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcga ,_ffbb :=_bcd .GetNumbersAsFloat (objects );
if _ffbb !=nil {return nil ,_ffbb ;};return _aede .ColorFromFloats (_fcga );};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_abca *PdfFieldButton )IsPush ()bool {return _abca .GetType ()==ButtonTypePush };

// ImageToRGB convert an indexed image to RGB.
func (_cgfcc *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_cgfcc .Base .GetNumComponents ();if N < 1{return Image {},_f .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_fbcc :=_gac .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._fafbg ,img ._fbccc );_gaea :=_gea .NewReader (img .getBase ());_aaab :=_gea .NewWriter (_fbcc );var (_eaad uint32 ;_afbb int ;_efcb error ;);for {_eaad ,_efcb =_gaea .ReadSample ();
if _efcb ==_ec .EOF {break ;}else if _efcb !=nil {return img ,_efcb ;};_afbb =int (_eaad );_aa .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_afbb ,N ,len (_cgfcc ._fbga ));
if (_afbb +1)*N > len (_cgfcc ._fbga ){_afbb =len (_cgfcc ._fbga )/N -1;_aa .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_afbb );if _afbb < 0{_aa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _afeb :=_afbb *N ;_afeb < (_afbb +1)*N ;_afeb ++{if _efcb =_aaab .WriteSample (uint32 (_cgfcc ._fbga [_afeb ]));_efcb !=nil {return img ,_efcb ;};};};return _cgfcc .Base .ImageToRGB (_bbbcd (&_fbcc ));};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_gc PdfModel ;Type _bcd .PdfObject ;S _bcd .PdfObject ;Next _bcd .PdfObject ;_fgae *_bcd .PdfIndirectObject ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_ccec *PdfPattern )IsTiling ()bool {return _ccec .PatternType ==1};func (_fgdg *PdfAcroForm )fillImageWithAppearance (_cfgfa FieldImageProvider ,_efcea FieldAppearanceGenerator )error {if _fgdg ==nil {return nil ;};_dfdgf ,_becb :=_cfgfa .FieldImageValues ();
if _becb !=nil {return _becb ;};for _ ,_dggea :=range _fgdg .AllFields (){_dfgg :=_dggea .PartialName ();_daegg ,_caaff :=_dfdgf [_dfgg ];if !_caaff {if _gcdc ,_dfbec :=_dggea .FullName ();_dfbec ==nil {_daegg ,_caaff =_dfdgf [_gcdc ];};};if !_caaff {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_dfgg );
continue ;};switch _fdac :=_dggea .GetContext ().(type ){case *PdfFieldButton :if _fdac .IsPush (){_fdac .SetFillImage (_daegg );};};if _efcea ==nil {continue ;};for _ ,_gfdb :=range _dggea .Annotations {_agedf ,_bgeg :=_efcea .GenerateAppearanceDict (_fgdg ,_dggea ,_gfdb );
if _bgeg !=nil {return _bgeg ;};_gfdb .AP =_agedf ;_gfdb .ToPdfObject ();};};return nil ;};func _aeef (_febcc *_bcd .PdfObjectDictionary )(*PdfShadingType6 ,error ){_aebfb :=PdfShadingType6 {};_eaead :=_febcc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _eaead ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dgdg ,_aebd :=_eaead .(*_bcd .PdfObjectInteger );if !_aebd {_aa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eaead );
return nil ,_bcd .ErrTypeError ;};_aebfb .BitsPerCoordinate =_dgdg ;_eaead =_febcc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eaead ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dgdg ,_aebd =_eaead .(*_bcd .PdfObjectInteger );if !_aebd {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eaead );
return nil ,_bcd .ErrTypeError ;};_aebfb .BitsPerComponent =_dgdg ;_eaead =_febcc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eaead ==nil {_aa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dgdg ,_aebd =_eaead .(*_bcd .PdfObjectInteger );if !_aebd {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eaead );
return nil ,_bcd .ErrTypeError ;};_aebfb .BitsPerComponent =_dgdg ;_eaead =_febcc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eaead ==nil {_aa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbgde ,_aebd :=_eaead .(*_bcd .PdfObjectArray );if !_aebd {_aa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eaead );
return nil ,_bcd .ErrTypeError ;};_aebfb .Decode =_cbgde ;if _dbbgee :=_febcc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dbbgee !=nil {_aebfb .Function =[]PdfFunction {};if _gfge ,_gcgee :=_dbbgee .(*_bcd .PdfObjectArray );_gcgee {for _ ,_ddbac :=range _gfge .Elements (){_gfccb ,_eafcd :=_bggfc (_ddbac );
if _eafcd !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eafcd );return nil ,_eafcd ;};_aebfb .Function =append (_aebfb .Function ,_gfccb );
};}else {_gacb ,_facg :=_bggfc (_dbbgee );if _facg !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_facg );return nil ,_facg ;};
_aebfb .Function =append (_aebfb .Function ,_gacb );};};return &_aebfb ,nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bcd .PdfObjectArray ;TI *_bcd .PdfObjectInteger ;I *_bcd .PdfObjectArray ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_ddec *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_ddec .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_ddec ._dde =acroForm ;};func (_baae PdfFont )actualFont ()pdfFont {if _baae ._fbcb ==nil {_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_baae );
};return _baae ._fbcb ;};func (_bfeef *PdfWriter )updateObjectNumbers (){_fgdea :=_bfeef .ObjNumOffset ;_abfdf :=0;for _ ,_daac :=range _bfeef ._cccfae {_efeef :=int64 (_abfdf +1+_fgdea );_eggb :=true ;if _bfeef ._dbcbd {if _dgbde ,_bgffd :=_bfeef ._ddce [_daac ];
_bgffd {_efeef =_dgbde ;_eggb =false ;};};switch _afebg :=_daac .(type ){case *_bcd .PdfIndirectObject :_afebg .ObjectNumber =_efeef ;_afebg .GenerationNumber =0;case *_bcd .PdfObjectStream :_afebg .ObjectNumber =_efeef ;_afebg .GenerationNumber =0;case *_bcd .PdfObjectStreams :_afebg .ObjectNumber =_efeef ;
_afebg .GenerationNumber =0;default:_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_afebg );continue ;
};if _eggb {_abfdf ++;};};_ffcgf :=func (_ggbcf _bcd .PdfObject )int64 {switch _ddffd :=_ggbcf .(type ){case *_bcd .PdfIndirectObject :return _ddffd .ObjectNumber ;case *_bcd .PdfObjectStream :return _ddffd .ObjectNumber ;case *_bcd .PdfObjectStreams :return _ddffd .ObjectNumber ;
};return 0;};_fg .SliceStable (_bfeef ._cccfae ,func (_bcacdg ,_cggef int )bool {return _ffcgf (_bfeef ._cccfae [_bcacdg ])< _ffcgf (_bfeef ._cccfae [_cggef ]);});};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_cffea *XObjectImage )SetFilter (encoder _bcd .StreamEncoder )error {_aebgg :=_cffea .Stream ;_caafd ,_efbfg :=_cffea .Filter .DecodeBytes (_aebgg );if _efbfg !=nil {return _efbfg ;};_cffea .Filter =encoder ;encoder .UpdateParams (_cffea .getParamsDict ());
_aebgg ,_efbfg =encoder .EncodeBytes (_caafd );if _efbfg !=nil {return _efbfg ;};_cffea .Stream =_aebgg ;return nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_efdee *_bcd .PdfIndirectObject ;Certs []*_bcd .PdfObjectStream ;OCSPs []*_bcd .PdfObjectStream ;CRLs []*_bcd .PdfObjectStream ;VRI map[string ]*VRI ;_fcad map[string ]*_bcd .PdfObjectStream ;_beca map[string ]*_bcd .PdfObjectStream ;_gfbge map[string ]*_bcd .PdfObjectStream ;
};func _afbcf ()string {_dgecg .Lock ();defer _dgecg .Unlock ();if len (_baaed )> 0{return _baaed ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};func (_fbcbb *pdfFontSimple )baseFields ()*fontCommon {return &_fbcbb .fontCommon };
func _adffc (_cdge *_bcd .PdfIndirectObject )(*PdfOutline ,error ){_dbag ,_abcaa :=_cdge .PdfObject .(*_bcd .PdfObjectDictionary );if !_abcaa {return nil ,_f .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ffedd :=NewPdfOutline ();if _fbbcd :=_dbag .Get ("\u0054\u0079\u0070\u0065");_fbbcd !=nil {_bdeab ,_edcg :=_fbbcd .(*_bcd .PdfObjectName );if _edcg {if *_bdeab !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_bdeab );
};};};if _bbbgc :=_dbag .Get ("\u0043\u006f\u0075n\u0074");_bbbgc !=nil {_babae ,_aaegg :=_bcd .GetNumberAsInt64 (_bbbgc );if _aaegg !=nil {return nil ,_aaegg ;};_ffedd .Count =&_babae ;};return _ffedd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dcga *PdfFilespec )ToPdfObject ()_bcd .PdfObject {_gafbg :=_dcga .getDict ();_gafbg .Clear ();_gafbg .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_gafbg .SetIfNotNil ("\u0046\u0053",_dcga .FS );
_gafbg .SetIfNotNil ("\u0046",_dcga .F );_gafbg .SetIfNotNil ("\u0055\u0046",_dcga .UF );_gafbg .SetIfNotNil ("\u0044\u004f\u0053",_dcga .DOS );_gafbg .SetIfNotNil ("\u004d\u0061\u0063",_dcga .Mac );_gafbg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_dcga .Unix );
_gafbg .SetIfNotNil ("\u0049\u0044",_dcga .ID );_gafbg .SetIfNotNil ("\u0056",_dcga .V );_gafbg .SetIfNotNil ("\u0045\u0046",_dcga .EF );_gafbg .SetIfNotNil ("\u0052\u0046",_dcga .RF );_gafbg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_dcga .Desc );_gafbg .SetIfNotNil ("\u0043\u0049",_dcga .CI );
return _dcga ._dgfe ;};func _gaggc (_ggbc _bcd .PdfObject ,_efdca *PdfReader )(*OutlineDest ,error ){_gcbgea ,_eebe :=_bcd .GetArray (_ggbc );if !_eebe {return nil ,_fcf .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_bddd :=_gcbgea .Len ();if _bddd < 2{return nil ,_f .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_bddd );
};_bdee :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_efcbf :=_gcbgea .Get (0);if _bfce ,_afbfg :=_bcd .GetIndirect (_efcbf );_afbfg {if _ ,_bffcf ,_deefe :=_efdca .PageFromIndirectObject (_bfce );_deefe ==nil {_bdee .Page =int64 (_bffcf -1);}else {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_bfce );
};_bdee .PageObj =_bfce ;}else if _ccgg ,_gbddc :=_bcd .GetIntVal (_efcbf );_gbddc {if _ccgg >=0&&_ccgg < len (_efdca .PageList ){_bdee .PageObj =_efdca .PageList [_ccgg ].GetPageAsIndirectObject ();}else {_aa .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ccgg );
};_bdee .Page =int64 (_ccgg );}else {return nil ,_f .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_efcbf );};_abcaf ,_eebe :=_bcd .GetNameVal (_gcbgea .Get (1));
if !_eebe {_aa .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_gcbgea .Get (1));
return _bdee ,nil ;};switch _abcaf {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _bddd > 2{_bdee .Y ,_ =_bcd .GetNumberAsFloat (_bcd .TraceToDirectObject (_gcbgea .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _bddd > 2{_bdee .X ,_ =_bcd .GetNumberAsFloat (_bcd .TraceToDirectObject (_gcbgea .Get (2)));
};case "\u0058\u0059\u005a":if _bddd > 4{_bdee .X ,_ =_bcd .GetNumberAsFloat (_bcd .TraceToDirectObject (_gcbgea .Get (2)));_bdee .Y ,_ =_bcd .GetNumberAsFloat (_bcd .TraceToDirectObject (_gcbgea .Get (3)));_bdee .Zoom ,_ =_bcd .GetNumberAsFloat (_bcd .TraceToDirectObject (_gcbgea .Get (4)));
};default:_abcaf ="\u0046\u0069\u0074";};_bdee .Mode =_abcaf ;return _bdee ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_effe *PdfAnnotation )GetContainingPdfObject ()_bcd .PdfObject {return _effe ._dbd };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_dbgg *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// A returns the value of the A component of the color.
func (_dcda *PdfColorLab )A ()float64 {return _dcda [1]};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_deaed *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gggea :=vals [0];_dccca :=[]float64 {_gggea };
_efae ,_ggfd :=_deaed .TintTransform .Evaluate (_dccca );if _ggfd !=nil {_aa .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_ggfd );
_aa .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_deaed .TintTransform );return nil ,_ggfd ;};_aa .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_efae ,_deaed .AlternateSpace );
_abac ,_ggfd :=_deaed .AlternateSpace .ColorFromFloats (_efae );if _ggfd !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_ggfd );
return nil ,_ggfd ;};return _abac ,nil ;};

// Encoder returns the font's text encoder.
func (_dbac pdfCIDFontType2 )Encoder ()_af .TextEncoder {return _dbac ._becfcd };

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_gbcfe ,_dgad :=_edb .ParsePdfTime (dateStr );if _dgad !=nil {return PdfDate {},_dgad ;};return NewPdfDateFromTime (_gbcfe );};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcd .PdfObject ;};func (_ffca *PdfReader )newPdfAnnotationInkFromDict (_cbeg *_bcd .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_bcfe :=PdfAnnotationInk {};_eedac ,_acg :=_ffca .newPdfAnnotationMarkupFromDict (_cbeg );
if _acg !=nil {return nil ,_acg ;};_bcfe .PdfAnnotationMarkup =_eedac ;_bcfe .InkList =_cbeg .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_bcfe .BS =_cbeg .Get ("\u0042\u0053");return &_bcfe ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bfaf pdfFontType0 )GetCharMetrics (code _af .CharCode )(_aab .CharMetrics ,bool ){if _bfaf .DescendantFont ==nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bfaf );
return _aab .CharMetrics {},false ;};return _bfaf .DescendantFont .GetCharMetrics (code );};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_fbde :=PdfColorDeviceRGB {r ,g ,b };return &_fbde ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bcd .PdfObject ;AN _bcd .PdfObject ;OP _bcd .PdfObject ;JS _bcd .PdfObject ;};

// BaseFont returns the font's "BaseFont" field.
func (_aegdg *PdfFont )BaseFont ()string {return _aegdg .baseFields ()._gagg };func _fgeec (_aafa *_bcd .PdfIndirectObject ,_bedc *_bcd .PdfObjectDictionary )(*DSS ,error ){if _aafa ==nil {_aafa =_bcd .MakeIndirectObject (nil );};_aafa .PdfObject =_bcd .MakeDict ();
_dfafag :=map[string ]*VRI {};if _ddfd ,_gcbg :=_bcd .GetDict (_bedc .Get ("\u0056\u0052\u0049"));_gcbg {for _ ,_cbedac :=range _ddfd .Keys (){if _eaeg ,_cfbb :=_bcd .GetDict (_ddfd .Get (_cbedac ));_cfbb {_dfafag [_fef .ToUpper (_cbedac .String ())]=_dbadb (_eaeg );
};};};return &DSS {Certs :_eegc (_bedc .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_eegc (_bedc .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_eegc (_bedc .Get ("\u0043\u0052\u004c\u0073")),VRI :_dfafag ,_efdee :_aafa },nil ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_bcd .PdfParser ;DiffPolicy _fga .DiffPolicy ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_fafba *PdfOutlineTreeNode )GetContext ()PdfModel {if _fceeg ,_eeeda :=_fafba ._gadg .(*PdfOutline );_eeeda {return _fceeg ;};if _gcgb ,_caea :=_fafba ._gadg .(*PdfOutlineItem );_caea {return _gcgb ;};_aa .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bcd .PdfIndirectObject ;SV *_bcd .PdfIndirectObject ;};func (_df *PdfReader )newPdfActionResetFormFromDict (_aadc *_bcd .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_aadc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_aadc .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func (_fbeg *PdfReader )newPdfAnnotationStampFromDict (_ebdc *_bcd .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_ddaa :=PdfAnnotationStamp {};_abfb ,_aeba :=_fbeg .newPdfAnnotationMarkupFromDict (_ebdc );if _aeba !=nil {return nil ,_aeba ;};_ddaa .PdfAnnotationMarkup =_abfb ;
_ddaa .Name =_ebdc .Get ("\u004e\u0061\u006d\u0065");return &_ddaa ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// ToPdfObject implements interface PdfModel.
func (_efcf *PdfAnnotationMovie )ToPdfObject ()_bcd .PdfObject {_efcf .PdfAnnotation .ToPdfObject ();_fdfd :=_efcf ._dbd ;_bdff :=_fdfd .PdfObject .(*_bcd .PdfObjectDictionary );_bdff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u004d\u006f\u0076i\u0065"));
_bdff .SetIfNotNil ("\u0054",_efcf .T );_bdff .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_efcf .Movie );_bdff .SetIfNotNil ("\u0041",_efcf .A );return _fdfd ;};func (_gcfb *PdfWriter )checkPendingObjects (){for _dgdde ,_ecggb :=range _gcfb ._egab {if !_gcfb .hasObject (_dgdde ){_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_dgdde ,_dgdde ,_dgdde );
for _ ,_fdagc :=range _ecggb {for _ ,_bfaag :=range _fdagc .Keys (){_cefad :=_fdagc .Get (_bfaag );if _cefad ==_dgdde {_aa .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_fdagc .Set (_bfaag ,_bcd .MakeNull ());break ;};};};};};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bcbg *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bcd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbbbf ,_aabb :=_bcd .GetNumbersAsFloat (objects );
if _aabb !=nil {return nil ,_aabb ;};return _bcbg .ColorFromFloats (_dbbbf );};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_eae :=NewPdfAnnotation ();_efd :=&PdfAnnotationWatermark {};_efd .PdfAnnotation =_eae ;_eae .SetContext (_efd );return _efd ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_dbec *PdfColorspaceSpecialIndexed )ToPdfObject ()_bcd .PdfObject {_cgfa :=_bcd .MakeArray (_bcd .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cgfa .Append (_dbec .Base .ToPdfObject ());_cgfa .Append (_bcd .MakeInteger (int64 (_dbec .HiVal )));
_cgfa .Append (_dbec .Lookup );if _dbec ._eegf !=nil {_dbec ._eegf .PdfObject =_cgfa ;return _dbec ._eegf ;};return _cgfa ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_bdag *PdfWriter )ApplyStandard (optimizer StandardApplier ){_bdag ._dfea =optimizer };

// ToInteger convert to an integer format.
func (_aega *PdfColorLab )ToInteger (bits int )[3]uint32 {_eced :=_cc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_eced *_aega .L ()),uint32 (_eced *_aega .A ()),uint32 (_eced *_aega .B ())};};func (_aefeg *PdfReader )lookupPageByObject (_gffbc _bcd .PdfObject )(*PdfPage ,error ){return nil ,_fcf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// WriteString outputs the object as it is to be written to file.
func (_aadae *PdfTransformParamsDocMDP )WriteString ()string {return _aadae .ToPdfObject ().WriteString ();};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gacgd *PdfAnnotationWatermark )ToPdfObject ()_bcd .PdfObject {_gacgd .PdfAnnotation .ToPdfObject ();_agg :=_gacgd ._dbd ;_fegb :=_agg .PdfObject .(*_bcd .PdfObjectDictionary );_fegb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_fegb .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_gacgd .FixedPrint );return _agg ;};func _abbea (_accg []byte )bool {if len (_accg )< 4{return true ;};for _aabafe :=range _accg [:4]{_bgbfd :=rune (_aabafe );if !_bb .Is (_bb .ASCII_Hex_Digit ,_bgbfd )&&!_bb .IsSpace (_bgbfd ){return true ;
};};return false ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_beff *PdfFieldButton )ToPdfObject ()_bcd .PdfObject {_beff .PdfField .ToPdfObject ();_gaga :=_beff ._ebddc ;_bfae :=_gaga .PdfObject .(*_bcd .PdfObjectDictionary );_bfae .Set ("\u0046\u0054",_bcd .MakeName ("\u0042\u0074\u006e"));if _beff .Opt !=nil {_bfae .Set ("\u004f\u0070\u0074",_beff .Opt );
};return _gaga ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fagfc *PdfColorspaceLab )ToPdfObject ()_bcd .PdfObject {_cafe :=_bcd .MakeArray ();_cafe .Append (_bcd .MakeName ("\u004c\u0061\u0062"));_gdae :=_bcd .MakeDict ();if _fagfc .WhitePoint !=nil {_baba :=_bcd .MakeArray (_bcd .MakeFloat (_fagfc .WhitePoint [0]),_bcd .MakeFloat (_fagfc .WhitePoint [1]),_bcd .MakeFloat (_fagfc .WhitePoint [2]));
_gdae .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_baba );}else {_aa .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _fagfc .BlackPoint !=nil {_aaebg :=_bcd .MakeArray (_bcd .MakeFloat (_fagfc .BlackPoint [0]),_bcd .MakeFloat (_fagfc .BlackPoint [1]),_bcd .MakeFloat (_fagfc .BlackPoint [2]));_gdae .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aaebg );
};if _fagfc .Range !=nil {_bfef :=_bcd .MakeArray (_bcd .MakeFloat (_fagfc .Range [0]),_bcd .MakeFloat (_fagfc .Range [1]),_bcd .MakeFloat (_fagfc .Range [2]),_bcd .MakeFloat (_fagfc .Range [3]));_gdae .Set ("\u0052\u0061\u006eg\u0065",_bfef );};_cafe .Append (_gdae );
if _fagfc ._bggfg !=nil {_fagfc ._bggfg .PdfObject =_cafe ;return _fagfc ._bggfg ;};return _cafe ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bcd .PdfObjectArray )(*PdfRectangle ,error ){_bdgag :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _eccfg error ;_bdgag .Llx ,_eccfg =_bcd .GetNumberAsFloat (arr .Get (0));if _eccfg !=nil {return nil ,_eccfg ;};_bdgag .Lly ,_eccfg =_bcd .GetNumberAsFloat (arr .Get (1));if _eccfg !=nil {return nil ,_eccfg ;};_bdgag .Urx ,_eccfg =_bcd .GetNumberAsFloat (arr .Get (2));
if _eccfg !=nil {return nil ,_eccfg ;};_bdgag .Ury ,_eccfg =_bcd .GetNumberAsFloat (arr .Get (3));if _eccfg !=nil {return nil ,_eccfg ;};return &_bdgag ,nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bcd .PdfObject ;Q _bcd .PdfObject ;RC _bcd .PdfObject ;DS _bcd .PdfObject ;CL _bcd .PdfObject ;IT _bcd .PdfObject ;BE _bcd .PdfObject ;RD _bcd .PdfObject ;BS _bcd .PdfObject ;LE _bcd .PdfObject ;
};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_daee ,_afcca :=_aab .NewStdFontByName (HelveticaName );if !_afcca {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_cbfg :=_ffbdb (_daee );return &PdfFont {_fbcb :&_cbfg };};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_dafc *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_cecaf :=0.3*_dafc .R ()+0.59*_dafc .G ()+0.11*_dafc .B ();_cecaf =_cc .Min (_cc .Max (_cecaf ,0.0),1.0);return NewPdfColorDeviceGray (_cecaf );};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_eaa *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};func (_dgccd *PdfWriter )addObjects (_cbffg _bcd .PdfObject )error {_aa .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _gcdb ,_cgacf :=_cbffg .(*_bcd .PdfIndirectObject );
_cgacf {_aa .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_aa .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_cbffg ,_gcdb );_aa .Log .Trace ("\u002d\u0020\u0025\u0073",_gcdb .PdfObject );if _dgccd .addObject (_gcdb ){_cggca :=_dgccd .addObjects (_gcdb .PdfObject );
if _cggca !=nil {return _cggca ;};};return nil ;};if _cfbgge ,_cadcf :=_cbffg .(*_bcd .PdfObjectStream );_cadcf {_aa .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_aa .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_cbffg ,_cbffg );if _dgccd .addObject (_cfbgge ){_dbefba :=_dgccd .addObjects (_cfbgge .PdfObjectDictionary );
if _dbefba !=nil {return _dbefba ;};};return nil ;};if _gffec ,_bgedd :=_cbffg .(*_bcd .PdfObjectDictionary );_bgedd {_aa .Log .Trace ("\u0044\u0069\u0063\u0074");_aa .Log .Trace ("\u002d\u0020\u0025\u0073",_cbffg );for _ ,_cfcfc :=range _gffec .Keys (){_degfd :=_gffec .Get (_cfcfc );
if _ddddd ,_dgabf :=_degfd .(*_bcd .PdfObjectReference );_dgabf {_degfd =_ddddd .Resolve ();_gffec .Set (_cfcfc ,_degfd );};if _cfcfc !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _aeeda :=_dgccd .addObjects (_degfd );_aeeda !=nil {return _aeeda ;};}else {if _ ,_acdcbg :=_degfd .(*_bcd .PdfObjectNull );
_acdcbg {continue ;};if _becgf :=_dgccd .hasObject (_degfd );!_becgf {_aa .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_degfd ,_degfd ,_degfd );
_dgccd ._egab [_degfd ]=append (_dgccd ._egab [_degfd ],_gffec );};};};return nil ;};if _fbbfe ,_efeea :=_cbffg .(*_bcd .PdfObjectArray );_efeea {_aa .Log .Trace ("\u0041\u0072\u0072a\u0079");_aa .Log .Trace ("\u002d\u0020\u0025\u0073",_cbffg );if _fbbfe ==nil {return _fcf .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _bgbd ,_ccbcd :=range _fbbfe .Elements (){if _eddca ,_gaede :=_ccbcd .(*_bcd .PdfObjectReference );_gaede {_ccbcd =_eddca .Resolve ();_fbbfe .Set (_bgbd ,_ccbcd );};if _gbdf :=_dgccd .addObjects (_ccbcd );_gbdf !=nil {return _gbdf ;};};return nil ;
};if _ ,_cdadg :=_cbffg .(*_bcd .PdfObjectReference );_cdadg {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_cbffg );
return _fcf .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_ecfc *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_eabeg :=&PdfFieldSignature {};_eabeg .PdfField =NewPdfField ();_eabeg .PdfField .SetContext (_eabeg );_eabeg .PdfAnnotationWidget =NewPdfAnnotationWidget ();_eabeg .PdfAnnotationWidget .SetContext (_eabeg );
_eabeg .PdfAnnotationWidget ._dbd =_eabeg .PdfField ._ebddc ;_eabeg .T =_bcd .MakeString ("");_eabeg .F =_bcd .MakeInteger (132);_eabeg .V =signature ;return _eabeg ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_facfb pdfCIDFontType2 )GetRuneMetrics (r rune )(_aab .CharMetrics ,bool ){_dacd ,_cagef :=_facfb ._ffda [r ];if !_cagef {_gcdac ,_abdcd :=_bcd .GetInt (_facfb .DW );if !_abdcd {return _aab .CharMetrics {},false ;};_dacd =int (*_gcdac );};return _aab .CharMetrics {Wx :float64 (_dacd )},true ;
};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// ToPdfObject implements interface PdfModel.
func (_aae *PdfActionTrans )ToPdfObject ()_bcd .PdfObject {_aae .PdfAction .ToPdfObject ();_abde :=_aae ._fgae ;_agc :=_abde .PdfObject .(*_bcd .PdfObjectDictionary );_agc .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeTrans )));_agc .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_aae .Trans );
return _abde ;};func (_bgab *LTV )enable (_deeg ,_gbbed []*_b .Certificate ,_abdfa string )error {_ccag ,_afdcf ,_gedg :=_bgab .buildCertChain (_deeg ,_gbbed );if _gedg !=nil {return _gedg ;};_cgea ,_gedg :=_bgab .getCerts (_ccag );if _gedg !=nil {return _gedg ;
};var _dafdd ,_fegdb [][]byte ;if _bgab .OCSPClient !=nil {_dafdd ,_gedg =_bgab .getOCSPs (_ccag ,_afdcf );if _gedg !=nil {return _gedg ;};};if _bgab .CRLClient !=nil {_fegdb ,_gedg =_bgab .getCRLs (_ccag );if _gedg !=nil {return _gedg ;};};_bbfc :=_bgab ._fabg ;
_egfga ,_gedg :=_bbfc .addCerts (_cgea );if _gedg !=nil {return _gedg ;};_cbbc ,_gedg :=_bbfc .addOCSPs (_dafdd );if _gedg !=nil {return _gedg ;};_cgdge ,_gedg :=_bbfc .addCRLs (_fegdb );if _gedg !=nil {return _gedg ;};if _abdfa !=""{_bbfc .VRI [_abdfa ]=&VRI {Cert :_egfga ,OCSP :_cbbc ,CRL :_cgdge };
};_bgab ._dadd .SetDSS (_bbfc );return nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_dceef :=&PdfFilespec {};_dceef ._dgfe =_bcd .MakeIndirectObject (_bcd .MakeDict ());return _dceef ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_agd :=NewPdfAction ();_fdf :=&PdfActionThread {};_fdf .PdfAction =_agd ;_agd .SetContext (_fdf );return _fdf ;};func (_eagf *PdfReader )loadAnnotations (_daba _bcd .PdfObject )([]*PdfAnnotation ,error ){_ecega ,_edac :=_bcd .GetArray (_daba );
if !_edac {return nil ,_f .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _cceae []*PdfAnnotation ;for _ ,_ebae :=range _ecega .Elements (){_ebae =_bcd .ResolveReference (_ebae );
if _ ,_babgf :=_ebae .(*_bcd .PdfObjectNull );_babgf {continue ;};_gdcff ,_ffdf :=_ebae .(*_bcd .PdfObjectDictionary );_gaafa ,_fafbd :=_ebae .(*_bcd .PdfIndirectObject );if _ffdf {_gaafa =&_bcd .PdfIndirectObject {};_gaafa .PdfObject =_gdcff ;}else {if !_fafbd {return nil ,_f .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_daada ,_gcffa :=_eagf .newPdfAnnotationFromIndirectObject (_gaafa );if _gcffa !=nil {return nil ,_gcffa ;};switch _bdgcf :=_daada .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_ebdgf :=range _eagf .AcroForm .AllFields (){if _ebdgf ._ebddc ==_bdgcf .Parent {_bdgcf ._gge =_ebdgf ;
break ;};};};if _daada !=nil {_cceae =append (_cceae ,_daada );};};return _cceae ,nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bcd .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_bcd .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_cfcg ,_agdaf :=encoder .EncodeBytes (img .Data );
if _agdaf !=nil {_aa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_agdaf );return nil ,_agdaf ;};_fdbef :=NewXObjectImage ();_bedgfg :=img .Width ;_dagae :=img .Height ;
_fdbef .Width =&_bedgfg ;_fdbef .Height =&_dagae ;_addde :=img .BitsPerComponent ;_fdbef .BitsPerComponent =&_addde ;_fdbef .Filter =encoder ;_fdbef .Stream =_cfcg ;if cs ==nil {if img .ColorComponents ==1{_fdbef .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_fdbef .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_fdbef .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_fcf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_fdbef .ColorSpace =cs ;};if len (img ._fafbg )!=0{_feacd :=NewXObjectImage ();_feacd .Filter =encoder ;_geafe ,_gcfg :=encoder .EncodeBytes (img ._fafbg );if _gcfg !=nil {_aa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gcfg );
return nil ,_gcfg ;};_feacd .Stream =_geafe ;_feacd .BitsPerComponent =_fdbef .BitsPerComponent ;_feacd .Width =&img .Width ;_feacd .Height =&img .Height ;_feacd .ColorSpace =NewPdfColorspaceDeviceGray ();_fdbef .SMask =_feacd .ToPdfObject ();}else {_fdbef .SMask =xobjIn .SMask ;
_fdbef .ImageMask =xobjIn .ImageMask ;if _fdbef .ColorSpace .GetNumComponents ()==1{_bdbfe (_fdbef );};};return _fdbef ,nil ;};func _ddfb (_fbcce _bcd .PdfObject )(string ,error ){_fbcce =_bcd .TraceToDirectObject (_fbcce );switch _cbad :=_fbcce .(type ){case *_bcd .PdfObjectString :return _cbad .Str (),nil ;
case *_bcd .PdfObjectStream :_gbfgg ,_bacae :=_bcd .DecodeStream (_cbad );if _bacae !=nil {return "",_bacae ;};return string (_gbfgg ),nil ;};return "",_f .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fbcce );
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_cabc *PdfColorspaceLab )GetNumComponents ()int {return 3};

// SetFontByName sets the font specified by keyName to the given object.
func (_cbbf *PdfPageResources )SetFontByName (keyName _bcd .PdfObjectName ,obj _bcd .PdfObject )error {if _cbbf .Font ==nil {_cbbf .Font =_bcd .MakeDict ();};_cdbccb ,_ceeag :=_bcd .TraceToDirectObject (_cbbf .Font ).(*_bcd .PdfObjectDictionary );if !_ceeag {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bcd .TraceToDirectObject (_cbbf .Font ));
return _bcd .ErrTypeError ;};_cdbccb .Set (keyName ,obj );return nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_abda *pdfCIDFontType2 )ToPdfObject ()_bcd .PdfObject {if _abda ._gegcd ==nil {_abda ._gegcd =&_bcd .PdfIndirectObject {};};_gdbc :=_abda .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_abda ._gegcd .PdfObject =_gdbc ;if _abda .CIDSystemInfo !=nil {_gdbc .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_abda .CIDSystemInfo );};if _abda .DW !=nil {_gdbc .Set ("\u0044\u0057",_abda .DW );};if _abda .DW2 !=nil {_gdbc .Set ("\u0044\u0057\u0032",_abda .DW2 );
};if _abda .W !=nil {_gdbc .Set ("\u0057",_abda .W );};if _abda .W2 !=nil {_gdbc .Set ("\u0057\u0032",_abda .W2 );};if _abda .CIDToGIDMap !=nil {_gdbc .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_abda .CIDToGIDMap );};return _abda ._gegcd ;
};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// GetXObjectByName gets XObject by name.
func (_bgbac *PdfPage )GetXObjectByName (name _bcd .PdfObjectName )(_bcd .PdfObject ,bool ){_aagad ,_gaba :=_bgbac .Resources .XObject .(*_bcd .PdfObjectDictionary );if !_gaba {return nil ,false ;};if _acgfc :=_aagad .Get (name );_acgfc !=nil {return _acgfc ,true ;
};return nil ,false ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_adfbaf *CompliancePdfReader )error ;};

// ToPdfObject converts date to a PDF string object.
func (_gabbc *PdfDate )ToPdfObject ()_bcd .PdfObject {_ggbga :=_f .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_gabbc ._ebgb ,_gabbc ._fegfa ,_gabbc ._ffbec ,_gabbc ._fceff ,_gabbc ._bcgfff ,_gabbc ._fgcfe ,_gabbc ._cdbb ,_gabbc ._gdcg ,_gabbc ._gfaed );
return _bcd .MakeString (_ggbga );};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_gfg :=NewPdfAnnotation ();_edaa :=&PdfAnnotationWidget {};_edaa .PdfAnnotation =_gfg ;_gfg .SetContext (_edaa );return _edaa ;};

// ToPdfObject implements interface PdfModel.
func (_fab *PdfActionThread )ToPdfObject ()_bcd .PdfObject {_fab .PdfAction .ToPdfObject ();_bda :=_fab ._fgae ;_dgg :=_bda .PdfObject .(*_bcd .PdfObjectDictionary );_dgg .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeThread )));if _fab .F !=nil {_dgg .Set ("\u0046",_fab .F .ToPdfObject ());
};_dgg .SetIfNotNil ("\u0044",_fab .D );_dgg .SetIfNotNil ("\u0042",_fab .B );return _bda ;};func (_bbag *PdfReader )newPdfOutlineItemFromIndirectObject (_dfdag *_bcd .PdfIndirectObject )(*PdfOutlineItem ,error ){_bfgeb ,_efcga :=_dfdag .PdfObject .(*_bcd .PdfObjectDictionary );
if !_efcga {return nil ,_f .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ggcbce :=NewPdfOutlineItem ();_acdcb :=_bfgeb .Get ("\u0054\u0069\u0074l\u0065");
if _acdcb ==nil {return nil ,_f .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_acbbd ,_feag :=_bcd .GetString (_acdcb );if !_feag {return nil ,_f .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_acdcb );};_ggcbce .Title =_acbbd ;if _edfag :=_bfgeb .Get ("\u0043\u006f\u0075n\u0074");
_edfag !=nil {_dfbfe ,_bbcd :=_edfag .(*_bcd .PdfObjectInteger );if !_bbcd {return nil ,_f .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_edfag );};_fedab :=int64 (*_dfbfe );
_ggcbce .Count =&_fedab ;};if _gfbgg :=_bfgeb .Get ("\u0044\u0065\u0073\u0074");_gfbgg !=nil {_ggcbce .Dest =_bcd .ResolveReference (_gfbgg );if !_bbag ._aacc {_gggeba :=_bbag .traverseObjectData (_ggcbce .Dest );if _gggeba !=nil {return nil ,_gggeba ;
};};};if _beddg :=_bfgeb .Get ("\u0041");_beddg !=nil {_ggcbce .A =_bcd .ResolveReference (_beddg );if !_bbag ._aacc {_aceea :=_bbag .traverseObjectData (_ggcbce .A );if _aceea !=nil {return nil ,_aceea ;};};};if _caaab :=_bfgeb .Get ("\u0053\u0045");_caaab !=nil {_ggcbce .SE =nil ;
};if _feff :=_bfgeb .Get ("\u0043");_feff !=nil {_ggcbce .C =_bcd .ResolveReference (_feff );};if _fgbgb :=_bfgeb .Get ("\u0046");_fgbgb !=nil {_ggcbce .F =_bcd .ResolveReference (_fgbgb );};return _ggcbce ,nil ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_dfag :=PdfColorCalRGB {a ,b ,c };return &_dfag ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_fefeb :=NewPdfAnnotation ();_agcf :=&PdfAnnotationScreen {};_agcf .PdfAnnotation =_fefeb ;_fefeb .SetContext (_agcf );return _agcf ;};

// ToPdfObject implements interface PdfModel.
func (_ffcg *PdfAnnotationPrinterMark )ToPdfObject ()_bcd .PdfObject {_ffcg .PdfAnnotation .ToPdfObject ();_fda :=_ffcg ._dbd ;_dgdc :=_fda .PdfObject .(*_bcd .PdfObjectDictionary );_dgdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_dgdc .SetIfNotNil ("\u004d\u004e",_ffcg .MN );return _fda ;};func (_ddcgg *PdfWriter )writeXRefStreams (_cagae int ,_becbf int64 )error {_gddda :=_cagae +1;_ddcgg ._dfafe [_gddda ]=crossReference {Type :1,ObjectNumber :_gddda ,Offset :_becbf };_baeed :=_ge .NewBuffer (nil );
_bdbecd :=_bcd .MakeArray ();for _fafff :=0;_fafff <=_cagae ;{for ;_fafff <=_cagae ;_fafff ++{_dgfa ,_gafa :=_ddcgg ._dfafe [_fafff ];if _gafa &&(!_ddcgg ._dbcbd ||_ddcgg ._dbcbd &&(_dgfa .Type ==1&&_dgfa .Offset >=_ddcgg ._cbfdd ||_dgfa .Type ==0)){break ;
};};var _bffbd int ;for _bffbd =_fafff +1;_bffbd <=_cagae ;_bffbd ++{_adgeb ,_fbgaa :=_ddcgg ._dfafe [_bffbd ];if _fbgaa &&(!_ddcgg ._dbcbd ||_ddcgg ._dbcbd &&(_adgeb .Type ==1&&_adgeb .Offset > _ddcgg ._cbfdd )){continue ;};break ;};_bdbecd .Append (_bcd .MakeInteger (int64 (_fafff )),_bcd .MakeInteger (int64 (_bffbd -_fafff )));
for _faacba :=_fafff ;_faacba < _bffbd ;_faacba ++{_dgdbgd :=_ddcgg ._dfafe [_faacba ];switch _dgdbgd .Type {case 0:_de .Write (_baeed ,_de .BigEndian ,byte (0));_de .Write (_baeed ,_de .BigEndian ,uint32 (0));_de .Write (_baeed ,_de .BigEndian ,uint16 (0xFFFF));
case 1:_de .Write (_baeed ,_de .BigEndian ,byte (1));_de .Write (_baeed ,_de .BigEndian ,uint32 (_dgdbgd .Offset ));_de .Write (_baeed ,_de .BigEndian ,uint16 (_dgdbgd .Generation ));case 2:_de .Write (_baeed ,_de .BigEndian ,byte (2));_de .Write (_baeed ,_de .BigEndian ,uint32 (_dgdbgd .ObjectNumber ));
_de .Write (_baeed ,_de .BigEndian ,uint16 (_dgdbgd .Index ));};};_fafff =_bffbd +1;};_edecc ,_degca :=_bcd .MakeStream (_baeed .Bytes (),_bcd .NewFlateEncoder ());if _degca !=nil {return _degca ;};_edecc .ObjectNumber =int64 (_gddda );_edecc .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0058\u0052\u0065\u0066"));
_edecc .PdfObjectDictionary .Set ("\u0057",_bcd .MakeArray (_bcd .MakeInteger (1),_bcd .MakeInteger (4),_bcd .MakeInteger (2)));_edecc .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_bdbecd );_edecc .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bcd .MakeInteger (int64 (_gddda +1)));
_edecc .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_ddcgg ._acdbc );_edecc .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_ddcgg ._ageaa );if _ddcgg ._dbcbd &&_ddcgg ._bfcad > 0{_edecc .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bcd .MakeInteger (_ddcgg ._bfcad ));
};if _ddcgg ._bdaag !=nil {_edecc .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ddcgg ._bbbea );};if _ddcgg ._cfgbb ==nil &&_ddcgg ._fbcec !=""&&_ddcgg ._efadda !=""{_ddcgg ._cfgbb =_bcd .MakeArray (_bcd .MakeHexString (_ddcgg ._fbcec ),_bcd .MakeHexString (_ddcgg ._efadda ));
};if _ddcgg ._cfgbb !=nil {_aa .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ddcgg ._cfgbb );_edecc .Set ("\u0049\u0044",_ddcgg ._cfgbb );};_ddcgg .writeObject (int (_edecc .ObjectNumber ),_edecc );return nil ;};func _fgfa (_gadbb []byte )(_cggb ,_dfcac string ,_daadb error ){_aa .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_gadbb ));
_ccgcb :=_caaa .FindIndex (_gadbb );if _ccgcb ==nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_bcd .ErrTypeError ;};_gbbd :=_ccgcb [1];_fadbe :=_fef .Index (string (_gadbb [_gbbd :]),_feac );if _fadbe < 0{_cggb =string (_gadbb [_gbbd :]);return _cggb ,"",nil ;};_aeafb :=_gbbd +_fadbe ;_cggb =string (_gadbb [_gbbd :_aeafb ]);_gegdb :=_aeafb ;
_fadbe =_fef .Index (string (_gadbb [_gegdb :]),_aebfc );if _fadbe < 0{_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_daadb );
return "","",_bcd .ErrTypeError ;};_cdaed :=_gegdb +_fadbe ;_dfcac =string (_gadbb [_gegdb :_cdaed ]);return _cggb ,_dfcac ,nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_gadbg *OutlineItem )Insert (index uint ,item *OutlineItem ){_gagge :=uint (len (_gadbg .Entries ));if index > _gagge {index =_gagge ;};_gadbg .Entries =append (_gadbg .Entries [:index ],append ([]*OutlineItem {item },_gadbg .Entries [index :]...)...);
};

// ColorToRGB converts an Indexed color to an RGB color.
func (_cdac *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cdac .Base ==nil {return nil ,_fcf .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _cdac .Base .ColorToRGB (color );};func (_gcab *PdfReader )newPdfFieldSignatureFromDict (_ddfcb *_bcd .PdfObjectDictionary )(*PdfFieldSignature ,error ){_cfed :=&PdfFieldSignature {};_faefg ,_fgdc :=_bcd .GetIndirect (_ddfcb .Get ("\u0056"));if _fgdc {var _dcgf error ;
_cfed .V ,_dcgf =_gcab .newPdfSignatureFromIndirect (_faefg );if _dcgf !=nil {return nil ,_dcgf ;};};_cfed .Lock ,_ =_bcd .GetIndirect (_ddfcb .Get ("\u004c\u006f\u0063\u006b"));_cfed .SV ,_ =_bcd .GetIndirect (_ddfcb .Get ("\u0053\u0056"));return _cfed ,nil ;
};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_efgc *PdfPage )AddContentStreamByString (contentStr string )error {_cdefg ,_aaabg :=_bcd .MakeStream ([]byte (contentStr ),_bcd .NewFlateEncoder ());if _aaabg !=nil {return _aaabg ;};if _efgc .Contents ==nil {_efgc .Contents =_cdefg ;}else {_bffacf :=_bcd .TraceToDirectObject (_efgc .Contents );
_defga ,_abbdc :=_bffacf .(*_bcd .PdfObjectArray );if !_abbdc {_defga =_bcd .MakeArray (_bffacf );};_defga .Append (_cdefg );_efgc .Contents =_defga ;};return nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_dgecg .Lock ();defer _dgecg .Unlock ();_baaed =creator };

// ToPdfObject returns the PDF representation of the colorspace.
func (_fcce *PdfColorspaceSpecialSeparation )ToPdfObject ()_bcd .PdfObject {_gfbb :=_bcd .MakeArray (_bcd .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_gfbb .Append (_fcce .ColorantName );_gfbb .Append (_fcce .AlternateSpace .ToPdfObject ());
_gfbb .Append (_fcce .TintTransform .ToPdfObject ());if _fcce ._eeae !=nil {_fcce ._eeae .PdfObject =_gfbb ;return _fcce ._eeae ;};return _gfbb ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bcd .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bcd .PdfObject ;A _bcd .PdfObject ;SE _bcd .PdfObject ;C _bcd .PdfObject ;F _bcd .PdfObject ;
_adcb *_bcd .PdfIndirectObject ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );func (_gfa *PdfReader )newPdfAnnotationMarkupFromDict (_ddc *_bcd .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_gab :=&PdfAnnotationMarkup {};if _ebebb :=_ddc .Get ("\u0054");
_ebebb !=nil {_gab .T =_ebebb ;};if _fceb :=_ddc .Get ("\u0050\u006f\u0070u\u0070");_fceb !=nil {_eeg ,_faac :=_fceb .(*_bcd .PdfIndirectObject );if !_faac {if _ ,_gebdb :=_fceb .(*_bcd .PdfObjectNull );!_gebdb {return nil ,_fcf .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_fca ,_cce :=_gfa .newPdfAnnotationFromIndirectObject (_eeg );if _cce !=nil {return nil ,_cce ;};if _fca !=nil {_ggb ,_bac :=_fca ._caf .(*PdfAnnotationPopup );if !_bac {return nil ,_fcf .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_gab .Popup =_ggb ;};};};if _faab :=_ddc .Get ("\u0043\u0041");_faab !=nil {_gab .CA =_faab ;};if _bdfb :=_ddc .Get ("\u0052\u0043");_bdfb !=nil {_gab .RC =_bdfb ;};if _egbg :=_ddc .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_egbg !=nil {_gab .CreationDate =_egbg ;};if _gfga :=_ddc .Get ("\u0049\u0052\u0054");_gfga !=nil {_gab .IRT =_gfga ;};if _fcd :=_ddc .Get ("\u0053\u0075\u0062\u006a");_fcd !=nil {_gab .Subj =_fcd ;};if _cbgb :=_ddc .Get ("\u0052\u0054");_cbgb !=nil {_gab .RT =_cbgb ;
};if _dbfc :=_ddc .Get ("\u0049\u0054");_dbfc !=nil {_gab .IT =_dbfc ;};if _ffa :=_ddc .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_ffa !=nil {_gab .ExData =_ffa ;};return _gab ,nil ;};func (_bbcfg *PdfWriter )writeBytes (_befbe []byte ){if _bbcfg ._ffbff !=nil {return ;
};_bbgcc ,_aggfc :=_bbcfg ._cgeef .Write (_befbe );_bbcfg ._efgfc +=int64 (_bbgcc );_bbcfg ._ffbff =_aggfc ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_geafd *_bcd .PdfObjectDictionary ;Type *_bcd .PdfObjectName ;TransformMethod *_bcd .PdfObjectName ;TransformParams _bcd .PdfObject ;Data _bcd .PdfObject ;DigestMethod *_bcd .PdfObjectName ;};

// ToPdfObject implements interface PdfModel.
func (_egg *PdfActionHide )ToPdfObject ()_bcd .PdfObject {_egg .PdfAction .ToPdfObject ();_ada :=_egg ._fgae ;_aabg :=_ada .PdfObject .(*_bcd .PdfObjectDictionary );_aabg .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeHide )));_aabg .SetIfNotNil ("\u0054",_egg .T );
_aabg .SetIfNotNil ("\u0048",_egg .H );return _ada ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_baadd *Outline )ToPdfObject ()_bcd .PdfObject {return _baadd .ToPdfOutline ().ToPdfObject ()};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_ecca *Image )AlphaMap (mapFunc AlphaMapFunc ){for _fgeda ,_aaggd :=range _ecca ._fafbg {_ecca ._fafbg [_fgeda ]=mapFunc (_aaggd );};};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gbac *PdfAppender )UpdateObject (obj _bcd .PdfObject ){_gbac .replaceObject (obj ,obj );if _ ,_gdfb :=_gbac ._aefb [obj ];!_gdfb {_gbac ._gbbe =append (_gbac ._gbbe ,obj );_gbac ._aefb [obj ]=struct{}{};};};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_agegf *PdfPageResources )GetXObjectFormByName (keyName _bcd .PdfObjectName )(*XObjectForm ,error ){_cbcgg ,_ccbe :=_agegf .GetXObjectByName (keyName );if _cbcgg ==nil {return nil ,nil ;};if _ccbe !=XObjectTypeForm {return nil ,_fcf .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_fgeba ,_eedgd :=NewXObjectFormFromStream (_cbcgg );if _eedgd !=nil {return nil ,_eedgd ;};return _fgeba ,nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_dfbg *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_gebf :=NewPdfAnnotation ();_efe :=&PdfAnnotationStrikeOut {};_efe .PdfAnnotation =_gebf ;_efe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gebf .SetContext (_efe );return _efe ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_bacb PdfModel ;_ebddc *_bcd .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bcd .PdfObjectName ;T *_bcd .PdfObjectString ;TU *_bcd .PdfObjectString ;TM *_bcd .PdfObjectString ;Ff *_bcd .PdfObjectInteger ;
V _bcd .PdfObject ;DV _bcd .PdfObject ;AA _bcd .PdfObject ;VariableText *VariableText ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_fgdf *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fcf .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_bacf ,_bffbc :=_gac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fafbg ,img ._fbccc );if _bffbc !=nil {return img ,_bffbc ;};_feefd ,_bffbc :=_gac .GrayConverter .Convert (_bacf );
if _bffbc !=nil {return img ,_bffbc ;};return _bbbcd (_feefd .Base ()),nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_bdfa *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _bdfa .Range };

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_efagf *pdfFontSimple )SetEncoder (encoder _af .TextEncoder ){_efagf ._gcega =encoder };type fontFile struct{_fcbbc string ;_edgd string ;_fbfa _af .SimpleEncoder ;};type pdfFontType0 struct{fontCommon ;_fgacg *_bcd .PdfIndirectObject ;_ggdfd _af .TextEncoder ;
Encoding _bcd .PdfObject ;DescendantFont *PdfFont ;_fadc *_dca .CMap ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_aaded *_bcd .PdfIndirectObject ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_dgecg .Lock ();defer _dgecg .Unlock ();_ffbef =author };

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};func _cfcb (_fgcee ,_fafec string )string {if _fef .Contains (_fgcee ,"\u002b"){_fcdfd :=_fef .Split (_fgcee ,"\u002b");if len (_fcdfd )==2{_fgcee =_fcdfd [1];};};return _fafec +"\u002b"+_fgcee ;
};

// ToPdfObject convert PdfInfo to pdf object.
func (_agga *PdfInfo )ToPdfObject ()_bcd .PdfObject {_fcfd :=_bcd .MakeDict ();_fcfd .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_agga .Title );_fcfd .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_agga .Author );_fcfd .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_agga .Subject );
_fcfd .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_agga .Keywords );_fcfd .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_agga .Creator );_fcfd .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_agga .Producer );
_fcfd .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_agga .Trapped );if _agga .CreationDate !=nil {_fcfd .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_agga .CreationDate .ToPdfObject ());};if _agga .ModifiedDate !=nil {_fcfd .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_agga .ModifiedDate .ToPdfObject ());
};for _ ,_gcggd :=range _agga ._fdafc .Keys (){_fcfd .SetIfNotNil (_gcggd ,_agga ._fdafc .Get (_gcggd ));};return _fcfd ;};func (_ggca *DSS )add (_dabg *[]*_bcd .PdfObjectStream ,_aagdc map[string ]*_bcd .PdfObjectStream ,_bbcc [][]byte )([]*_bcd .PdfObjectStream ,error ){_edfa :=make ([]*_bcd .PdfObjectStream ,0,len (_bbcc ));
for _ ,_aade :=range _bbcc {_gbbb ,_dbae :=_ecfea (_aade );if _dbae !=nil {return nil ,_dbae ;};_daeg ,_gbcb :=_aagdc [string (_gbbb )];if !_gbcb {_daeg ,_dbae =_bcd .MakeStream (_aade ,_bcd .NewRawEncoder ());if _dbae !=nil {return nil ,_dbae ;};_aagdc [string (_gbbb )]=_daeg ;
*_dabg =append (*_dabg ,_daeg );};_edfa =append (_edfa ,_daeg );};return _edfa ,nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_ddcd *PdfFieldText )ToPdfObject ()_bcd .PdfObject {_ddcd .PdfField .ToPdfObject ();_fggd :=_ddcd ._ebddc ;_bfca :=_fggd .PdfObject .(*_bcd .PdfObjectDictionary );_bfca .Set ("\u0046\u0054",_bcd .MakeName ("\u0054\u0078"));if _ddcd .DA !=nil {_bfca .Set ("\u0044\u0041",_ddcd .DA );
};if _ddcd .Q !=nil {_bfca .Set ("\u0051",_ddcd .Q );};if _ddcd .DS !=nil {_bfca .Set ("\u0044\u0053",_ddcd .DS );};if _ddcd .RV !=nil {_bfca .Set ("\u0052\u0056",_ddcd .RV );};if _ddcd .MaxLen !=nil {_bfca .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_ddcd .MaxLen );
};return _fggd ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bcd .PdfObject ;V _bcd .PdfObject ;};func (_fbggc *PdfWriter )addObject (_ggcgd _bcd .PdfObject )bool {_aacdg :=_fbggc .hasObject (_ggcgd );if !_aacdg {_gbffa :=_bcd .ResolveReferencesDeep (_ggcgd ,_fbggc ._gfedg );
if _gbffa !=nil {_aa .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_gbffa );};_fbggc ._cccfae =append (_fbggc ._cccfae ,_ggcgd );_fbggc ._dgag [_ggcgd ]=struct{}{};return true ;};return false ;
};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_cbae :_bcd .MakeIndirectObject (_bcd .MakeDict ())};};

// Val returns the value of the color.
func (_ggge *PdfColorCalGray )Val ()float64 {return float64 (*_ggge )};func _dddb (_bdgb _bcd .PdfObject )(*PdfFontDescriptor ,error ){_fcea :=&PdfFontDescriptor {};_bdgb =_bcd .ResolveReference (_bdgb );if _abdec ,_ggfg :=_bdgb .(*_bcd .PdfIndirectObject );
_ggfg {_fcea ._bfga =_abdec ;_bdgb =_abdec .PdfObject ;};_cfeg ,_bffbfe :=_bcd .GetDict (_bdgb );if !_bffbfe {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bdgb );
return nil ,_bcd .ErrTypeError ;};if _ebce :=_cfeg .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_ebce !=nil {_fcea .FontName =_ebce ;}else {_aa .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_gfccc ,_ :=_bcd .GetName (_fcea .FontName );if _egeea :=_cfeg .Get ("\u0054\u0079\u0070\u0065");_egeea !=nil {_fcfff ,_cccfd :=_egeea .(*_bcd .PdfObjectName );if !_cccfd ||string (*_fcfff )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_aa .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_egeea ,_gfccc ,_fcea .FontName );
};}else {_aa .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gfccc ,_fcea .FontName );
};_fcea .FontFamily =_cfeg .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_fcea .FontStretch =_cfeg .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_fcea .FontWeight =_cfeg .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_fcea .Flags =_cfeg .Get ("\u0046\u006c\u0061g\u0073");_fcea .FontBBox =_cfeg .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_fcea .ItalicAngle =_cfeg .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_fcea .Ascent =_cfeg .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_fcea .Descent =_cfeg .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_fcea .Leading =_cfeg .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_fcea .CapHeight =_cfeg .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_fcea .XHeight =_cfeg .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_fcea .StemV =_cfeg .Get ("\u0053\u0074\u0065m\u0056");_fcea .StemH =_cfeg .Get ("\u0053\u0074\u0065m\u0048");_fcea .AvgWidth =_cfeg .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_fcea .MaxWidth =_cfeg .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_fcea .MissingWidth =_cfeg .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_fcea .FontFile =_cfeg .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_fcea .FontFile2 =_cfeg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_fcea .FontFile3 =_cfeg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_fcea .CharSet =_cfeg .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_fcea .Style =_cfeg .Get ("\u0053\u0074\u0079l\u0065");_fcea .Lang =_cfeg .Get ("\u004c\u0061\u006e\u0067");
_fcea .FD =_cfeg .Get ("\u0046\u0044");_fcea .CIDSet =_cfeg .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _fcea .Flags !=nil {if _aceag ,_dagd :=_bcd .GetIntVal (_fcea .Flags );_dagd {_fcea ._fabe =_aceag ;};};if _fcea .MissingWidth !=nil {if _aeeac ,_fbdag :=_bcd .GetNumberAsFloat (_fcea .MissingWidth );
_fbdag ==nil {_fcea ._afae =_aeeac ;};};if _fcea .FontFile !=nil {_bcac ,_afgcg :=_bdfc (_fcea .FontFile );if _afgcg !=nil {return _fcea ,_afgcg ;};_aa .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_bcac );_fcea .fontFile =_bcac ;
};if _fcea .FontFile2 !=nil {_fbdeb ,_abefc :=_aab .NewFontFile2FromPdfObject (_fcea .FontFile2 );if _abefc !=nil {return _fcea ,_abefc ;};_aa .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_fbdeb .String ());_fcea ._fcfb =&_fbdeb ;
};return _fcea ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aeeba *PdfAnnotationPolyLine )ToPdfObject ()_bcd .PdfObject {_aeeba .PdfAnnotation .ToPdfObject ();_cbag :=_aeeba ._dbd ;_gcbf :=_cbag .PdfObject .(*_bcd .PdfObjectDictionary );_aeeba .PdfAnnotationMarkup .appendToPdfDictionary (_gcbf );_gcbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_gcbf .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_aeeba .Vertices );_gcbf .SetIfNotNil ("\u004c\u0045",_aeeba .LE );_gcbf .SetIfNotNil ("\u0042\u0053",_aeeba .BS );_gcbf .SetIfNotNil ("\u0049\u0043",_aeeba .IC );_gcbf .SetIfNotNil ("\u0042\u0045",_aeeba .BE );
_gcbf .SetIfNotNil ("\u0049\u0054",_aeeba .IT );_gcbf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_aeeba .Measure );return _cbag ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fbgd *PdfColorspaceDeviceCMYK )ToPdfObject ()_bcd .PdfObject {return _bcd .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// ToPdfObject implements interface PdfModel.
func (_fabd *PdfAnnotationSquare )ToPdfObject ()_bcd .PdfObject {_fabd .PdfAnnotation .ToPdfObject ();_gfd :=_fabd ._dbd ;_dec :=_gfd .PdfObject .(*_bcd .PdfObjectDictionary );if _fabd .PdfAnnotationMarkup !=nil {_fabd .PdfAnnotationMarkup .appendToPdfDictionary (_dec );
};_dec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_dec .SetIfNotNil ("\u0042\u0053",_fabd .BS );_dec .SetIfNotNil ("\u0049\u0043",_fabd .IC );_dec .SetIfNotNil ("\u0042\u0045",_fabd .BE );
_dec .SetIfNotNil ("\u0052\u0044",_fabd .RD );return _gfd ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_feb :=NewPdfAnnotation ();_bcaa :=&PdfAnnotationPopup {};_bcaa .PdfAnnotation =_feb ;_feb .SetContext (_bcaa );return _bcaa ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_bbcgd *modelManager )GetModelFromPrimitive (primitive _bcd .PdfObject )PdfModel {model ,_gggde :=_bbcgd ._begdf [primitive ];if !_gggde {return nil ;};return model ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_aeebfa *PdfPage )ToPdfObject ()_bcd .PdfObject {_bdfdg :=_aeebfa ._bebee ;_aeebfa .GetPageDict ();return _bdfdg ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_cdfed :=&PdfPageResourcesColorspaces {};_cdfed .Names =[]string {};_cdfed .Colorspaces =map[string ]PdfColorspace {};_cdfed ._aaded =&_bcd .PdfIndirectObject {};return _cdfed ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_caad *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_bffab *LTV )buildCertChain (_efbdb ,_fffbd []*_b .Certificate )([]*_b .Certificate ,map[string ]*_b .Certificate ,error ){_abdege :=map[string ]*_b .Certificate {};
for _ ,_bbee :=range _efbdb {_abdege [_bbee .Subject .CommonName ]=_bbee ;};_agbgc :=_efbdb ;for _ ,_begb :=range _fffbd {_gbbaf :=_begb .Subject .CommonName ;if _ ,_cfgce :=_abdege [_gbbaf ];_cfgce {continue ;};_abdege [_gbbaf ]=_begb ;_agbgc =append (_agbgc ,_begb );
};if len (_agbgc )==0{return nil ,nil ,ErrSignNoCertificates ;};var _accdd error ;for _ecdgc :=_agbgc [0];_ecdgc !=nil &&!_bffab .CertClient .IsCA (_ecdgc );{_efcafg ,_gecb :=_abdege [_ecdgc .Issuer .CommonName ];if !_gecb {if _efcafg ,_accdd =_bffab .CertClient .GetIssuer (_ecdgc );
_accdd !=nil {_aa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_accdd );
break ;};_abdege [_ecdgc .Issuer .CommonName ]=_efcafg ;_agbgc =append (_agbgc ,_efcafg );};_ecdgc =_efcafg ;};return _agbgc ,_abdege ,nil ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bcd .PdfObjectString ;Q *_bcd .PdfObjectInteger ;DS *_bcd .PdfObjectString ;RV _bcd .PdfObject ;MaxLen *_bcd .PdfObjectInteger ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_aaa *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fcf .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_fdeb :=field .V ;if _fdeb ==nil {return _fcf .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_ccaf :=pageNum -1;
if _ccaf < 0||_ccaf > len (_aaa ._ebcd )-1{return _f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_gcg :=_aaa .Reader .PageList [_ccaf ];field .P =_gcg .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bcd .MakeString (_f .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_gcg .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _aaa ._dde ==_aaa ._aagg .AcroForm {_aaa ._dde =_aaa .Reader .AcroForm ;};_ebbf :=_aaa ._dde ;if _ebbf ==nil {_ebbf =NewPdfAcroForm ();};_ebbf .SigFlags =_bcd .MakeInteger (3);_ddfcf :=append (_ebbf .AllFields (),field .PdfField );
_ebbf .Fields =&_ddfcf ;_aaa .ReplaceAcroForm (_ebbf );_aaa .UpdatePage (_gcg );_aaa ._ebcd [_ccaf ]=_gcg ;if _ ,_cebe :=field .V .GetDocMDPPermission ();_cebe {_aaa ._gcde =NewPermissions (field .V );};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_gbace *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abdgg :=vals [0];if _abdgg < 0.0||_abdgg > 100.0{_aa .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_abdgg );
return nil ,ErrColorOutOfRange ;};_decga :=vals [1];_gfeb :=float64 (-100);_gegcg :=float64 (100);if len (_gbace .Range )> 1{_gfeb =_gbace .Range [0];_gegcg =_gbace .Range [1];};if _decga < _gfeb ||_decga > _gegcg {_aa .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_decga ,_gfeb ,_gegcg );
return nil ,ErrColorOutOfRange ;};_fgaaee :=vals [2];_aafg :=float64 (-100);_dead :=float64 (100);if len (_gbace .Range )> 3{_aafg =_gbace .Range [2];_dead =_gbace .Range [3];};if _fgaaee < _aafg ||_fgaaee > _dead {_aa .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fgaaee ,_aafg ,_dead );
return nil ,ErrColorOutOfRange ;};_ebdg :=NewPdfColorLab (_abdgg ,_decga ,_fgaaee );return _ebdg ,nil ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_fgfb *PdfPageResources )HasPatternByName (keyName _bcd .PdfObjectName )bool {_ ,_agcbe :=_fgfb .GetPatternByName (keyName );return _agcbe ;};func (_ffab *PdfAcroForm )filteredFields (_gaaag FieldFilterFunc ,_bbfd bool )[]*PdfField {if _ffab ==nil {return nil ;
};return _dgbf (_ffab .Fields ,_gaaag ,_bbfd );};func (_cecee *XObjectImage )getParamsDict ()*_bcd .PdfObjectDictionary {_caeef :=_bcd .MakeDict ();_caeef .Set ("\u0057\u0069\u0064t\u0068",_bcd .MakeInteger (*_cecee .Width ));_caeef .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bcd .MakeInteger (*_cecee .Height ));
_caeef .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bcd .MakeInteger (int64 (_cecee .ColorSpace .GetNumComponents ())));_caeef .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcd .MakeInteger (*_cecee .BitsPerComponent ));
return _caeef ;};func _gbbf (_edffb _bcd .PdfObject ,_adgdc bool )(*PdfFont ,error ){_cddb ,_bedfb ,_bcgfa :=_fedg (_edffb );if _cddb !=nil {_befa (_cddb );};if _bcgfa !=nil {if _bcgfa ==ErrType1CFontNotSupported {_bfbd ,_ccbge :=_aaegad (_cddb ,_bedfb ,nil );
if _ccbge !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bedfb ,_ccbge );
return nil ,_bcgfa ;};return &PdfFont {_fbcb :_bfbd },_bcgfa ;};return nil ,_bcgfa ;};_dgbga :=&PdfFont {};switch _bedfb ._ffaca {case "\u0054\u0079\u0070e\u0030":if !_adgdc {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bedfb );
return nil ,_fcf .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_ddafe ,_ecbce :=_degf (_cddb ,_bedfb );if _ecbce !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bedfb ,_ecbce );
return nil ,_ecbce ;};_dgbga ._fbcb =_ddafe ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _bdcd *pdfFontSimple ;_ddcc ,_cbb :=_aab .NewStdFontByName (_aab .StdFontName (_bedfb ._gagg ));
if _cbb {_gbba :=_ffbdb (_ddcc );_dgbga ._fbcb =&_gbba ;_ceacba :=_bcd .TraceToDirectObject (_gbba .ToPdfObject ());_cegg ,_defd ,_gddac :=_fedg (_ceacba );if _gddac !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bedfb ,_gbba );
return nil ,_gddac ;};for _ ,_eabd :=range _cddb .Keys (){_cegg .Set (_eabd ,_cddb .Get (_eabd ));};_bdcd ,_gddac =_aaegad (_cegg ,_defd ,_gbba ._aeaf );if _gddac !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bedfb ,_gbba );
return nil ,_gddac ;};_bdcd ._ggcdb =_gbba ._ggcdb ;_bdcd ._daeea =_gbba ._daeea ;if _bdcd ._eaba ==nil {_bdcd ._eaba =_gbba ._eaba ;};}else {_bdcd ,_bcgfa =_aaegad (_cddb ,_bedfb ,nil );if _bcgfa !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bedfb ,_bcgfa );
return nil ,_bcgfa ;};};_bcgfa =_bdcd .addEncoding ();if _bcgfa !=nil {return nil ,_bcgfa ;};if _cbb {_bdcd .updateStandard14Font ();};if _cbb &&_bdcd ._gcega ==nil &&_bdcd ._aeaf ==nil {_aa .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bdcd );
_aa .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_ddcc );};if len (_bdcd ._ggcdb )==0{_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_bdcd );};_dgbga ._fbcb =_bdcd ;
case "\u0054\u0079\u0070e\u0033":_dcae ,_gfde :=_dddg (_cddb ,_bedfb );if _gfde !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_gfde );
return nil ,_gfde ;};_dgbga ._fbcb =_dcae ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_gfda ,_gffd :=_bbea (_cddb ,_bedfb );if _gffd !=nil {_aa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_gffd );
return nil ,_gffd ;};_dgbga ._fbcb =_gfda ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_dbafd ,_dbfa :=_dcfa (_cddb ,_bedfb );if _dbfa !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bedfb ,_dbfa );
return nil ,_dbfa ;};_dgbga ._fbcb =_dbafd ;default:_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_bedfb );
return nil ,_f .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bedfb );};return _dgbga ,nil ;};

// String returns a string representation of what flags are set.
func (_afcbg FieldFlag )String ()string {_agabg :="";if _afcbg ==FieldFlagClear {_agabg ="\u0043\u006c\u0065a\u0072";return _agabg ;};if _afcbg &FieldFlagReadOnly > 0{_agabg +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _afcbg &FieldFlagRequired > 0{_agabg +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _afcbg &FieldFlagNoExport > 0{_agabg +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _afcbg &FieldFlagNoToggleToOff > 0{_agabg +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _afcbg &FieldFlagRadio > 0{_agabg +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _afcbg &FieldFlagPushbutton > 0{_agabg +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _afcbg &FieldFlagRadiosInUnision > 0{_agabg +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};
if _afcbg &FieldFlagMultiline > 0{_agabg +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _afcbg &FieldFlagPassword > 0{_agabg +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _afcbg &FieldFlagFileSelect > 0{_agabg +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";
};if _afcbg &FieldFlagDoNotScroll > 0{_agabg +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _afcbg &FieldFlagComb > 0{_agabg +="\u007c\u0043\u006fm\u0062";};if _afcbg &FieldFlagRichText > 0{_agabg +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";
};if _afcbg &FieldFlagDoNotSpellCheck > 0{_agabg +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _afcbg &FieldFlagCombo > 0{_agabg +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _afcbg &FieldFlagEdit > 0{_agabg +="\u007c\u0045\u0064i\u0074";
};if _afcbg &FieldFlagSort > 0{_agabg +="\u007c\u0053\u006fr\u0074";};if _afcbg &FieldFlagMultiSelect > 0{_agabg +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _afcbg &FieldFlagCommitOnSelChange > 0{_agabg +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";
};return _fef .Trim (_agabg ,"\u007c");};func _ebcc (_abbg _bcd .PdfObject )(*PdfColorspaceCalRGB ,error ){_bdgf :=NewPdfColorspaceCalRGB ();if _bcgf ,_ecbf :=_abbg .(*_bcd .PdfIndirectObject );_ecbf {_bdgf ._abag =_bcgf ;};_abbg =_bcd .TraceToDirectObject (_abbg );
_bggg ,_eddg :=_abbg .(*_bcd .PdfObjectArray );if !_eddg {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bggg .Len ()!=2{return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_abbg =_bcd .TraceToDirectObject (_bggg .Get (0));_dcbg ,_eddg :=_abbg .(*_bcd .PdfObjectName );if !_eddg {return nil ,_f .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_dcbg !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_f .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_abbg =_bcd .TraceToDirectObject (_bggg .Get (1));
_cbedc ,_eddg :=_abbg .(*_bcd .PdfObjectDictionary );if !_eddg {return nil ,_f .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_abbg =_cbedc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_abbg =_bcd .TraceToDirectObject (_abbg );_bcdb ,_eddg :=_abbg .(*_bcd .PdfObjectArray );if !_eddg {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _bcdb .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_faed ,_bfea :=_bcdb .GetAsFloat64Slice ();
if _bfea !=nil {return nil ,_bfea ;};_bdgf .WhitePoint =_faed ;_abbg =_cbedc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _abbg !=nil {_abbg =_bcd .TraceToDirectObject (_abbg );_eagc ,_eabe :=_abbg .(*_bcd .PdfObjectArray );
if !_eabe {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _eagc .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_fafg ,_caff :=_eagc .GetAsFloat64Slice ();if _caff !=nil {return nil ,_caff ;};_bdgf .BlackPoint =_fafg ;};_abbg =_cbedc .Get ("\u0047\u0061\u006dm\u0061");if _abbg !=nil {_abbg =_bcd .TraceToDirectObject (_abbg );_eead ,_bedfg :=_abbg .(*_bcd .PdfObjectArray );
if !_bedfg {return nil ,_f .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _eead .Len ()!=3{return nil ,_f .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_bebag ,_dbeb :=_eead .GetAsFloat64Slice ();if _dbeb !=nil {return nil ,_dbeb ;};_bdgf .Gamma =_bebag ;};_abbg =_cbedc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _abbg !=nil {_abbg =_bcd .TraceToDirectObject (_abbg );_bbbg ,_gcga :=_abbg .(*_bcd .PdfObjectArray );
if !_gcga {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _bbbg .Len ()!=9{_aa .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_bbbg .String ());
return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_decgb ,_baaa :=_bbbg .GetAsFloat64Slice ();if _baaa !=nil {return nil ,_baaa ;
};_bdgf .Matrix =_decgb ;};return _bdgf ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_dgbb *PdfRectangle )ToPdfObject ()_bcd .PdfObject {return _bcd .MakeArray (_bcd .MakeFloat (_dgbb .Llx ),_bcd .MakeFloat (_dgbb .Lly ),_bcd .MakeFloat (_dgbb .Urx ),_bcd .MakeFloat (_dgbb .Ury ));};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ec .ReadSeeker )(*PdfFont ,error ){const _cgac =_af .CharCode (32);const _ggcdd =_af .CharCode (255);_faaba ,_acgfe :=_dc .ReadAll (r );if _acgfe !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_acgfe );
return nil ,_acgfe ;};_gggeb ,_acgfe :=_aab .TtfParse (_ge .NewReader (_faaba ));if _acgfe !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_acgfe );
return nil ,_acgfe ;};_acbb :=&pdfFontSimple {_ggcdb :make (map[_af .CharCode ]float64 ),fontCommon :fontCommon {_ffaca :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_acbb ._gcega =_af .NewWinAnsiEncoder ();_acbb ._gagg =_gggeb .PostScriptName ;
_acbb .FirstChar =_bcd .MakeInteger (int64 (_cgac ));_acbb .LastChar =_bcd .MakeInteger (int64 (_ggcdd ));_gbbac :=1000.0/float64 (_gggeb .UnitsPerEm );if len (_gggeb .Widths )<=0{return nil ,_fcf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gefec :=_gbbac *float64 (_gggeb .Widths [0]);_begg :=make ([]float64 ,0,_ggcdd -_cgac +1);for _bcca :=_cgac ;_bcca <=_ggcdd ;_bcca ++{_daadc ,_ffgff :=_acbb .Encoder ().CharcodeToRune (_bcca );if !_ffgff {_aa .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_bcca );
_begg =append (_begg ,_gefec );continue ;};_eaaab ,_afdg :=_gggeb .Chars [_daadc ];if !_afdg {_aa .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_begg =append (_begg ,_gefec );continue ;
};_ffef :=_gbbac *float64 (_gggeb .Widths [_eaaab ]);_begg =append (_begg ,_ffef );};_acbb .Widths =_bcd .MakeIndirectObject (_bcd .MakeArrayFromFloats (_begg ));if len (_begg )< int (_ggcdd -_cgac +1){_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_begg ),255-32+1);
return nil ,_bcd .ErrRangeError ;};for _ccada :=_cgac ;_ccada <=_ggcdd ;_ccada ++{_acbb ._ggcdb [_ccada ]=_begg [_ccada -_cgac ];};_acbb .Encoding =_bcd .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_bfbc :=&PdfFontDescriptor {};
_bfbc .FontName =_bcd .MakeName (_gggeb .PostScriptName );_bfbc .Ascent =_bcd .MakeFloat (_gbbac *float64 (_gggeb .TypoAscender ));_bfbc .Descent =_bcd .MakeFloat (_gbbac *float64 (_gggeb .TypoDescender ));_bfbc .CapHeight =_bcd .MakeFloat (_gbbac *float64 (_gggeb .CapHeight ));
_bfbc .FontBBox =_bcd .MakeArrayFromFloats ([]float64 {_gbbac *float64 (_gggeb .Xmin ),_gbbac *float64 (_gggeb .Ymin ),_gbbac *float64 (_gggeb .Xmax ),_gbbac *float64 (_gggeb .Ymax )});_bfbc .ItalicAngle =_bcd .MakeFloat (_gggeb .ItalicAngle );_bfbc .MissingWidth =_bcd .MakeFloat (_gbbac *float64 (_gggeb .Widths [0]));
_dbbge ,_acgfe :=_bcd .MakeStream (_faaba ,_bcd .NewFlateEncoder ());if _acgfe !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_acgfe );
return nil ,_acgfe ;};_dbbge .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bcd .MakeInteger (int64 (len (_faaba ))));_bfbc .FontFile2 =_dbbge ;if _gggeb .Bold {_bfbc .StemV =_bcd .MakeInteger (120);}else {_bfbc .StemV =_bcd .MakeInteger (70);
};_geagc :=_aaedd ;if _gggeb .IsFixedPitch {_geagc |=_dcebc ;};if _gggeb .ItalicAngle !=0{_geagc |=_cefed ;};_bfbc .Flags =_bcd .MakeInteger (int64 (_geagc ));_acbb ._agda =_bfbc ;_ebagg :=&PdfFont {_fbcb :_acbb };return _ebagg ,nil ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_fga .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _fb .Time ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_fage *PdfPageResources )SetXObjectByName (keyName _bcd .PdfObjectName ,stream *_bcd .PdfObjectStream )error {if _fage .XObject ==nil {_fage .XObject =_bcd .MakeDict ();};_bebb :=_bcd .TraceToDirectObject (_fage .XObject );_badb ,_gfabd :=_bebb .(*_bcd .PdfObjectDictionary );
if !_gfabd {_aa .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_fage .XObject ,_bebb );return _fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_badb .Set (keyName ,stream );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bbgc *PdfAnnotationUnderline )ToPdfObject ()_bcd .PdfObject {_bbgc .PdfAnnotation .ToPdfObject ();_efcd :=_bbgc ._dbd ;_cgb :=_efcd .PdfObject .(*_bcd .PdfObjectDictionary );_bbgc .PdfAnnotationMarkup .appendToPdfDictionary (_cgb );_cgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_cgb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bbgc .QuadPoints );return _efcd ;};func _cagc (_gbeb *_bcd .PdfObjectDictionary )(*PdfFieldText ,error ){_aefcd :=&PdfFieldText {};_aefcd .DA ,_ =_bcd .GetString (_gbeb .Get ("\u0044\u0041"));
_aefcd .Q ,_ =_bcd .GetInt (_gbeb .Get ("\u0051"));_aefcd .DS ,_ =_bcd .GetString (_gbeb .Get ("\u0044\u0053"));_aefcd .RV =_gbeb .Get ("\u0052\u0056");_aefcd .MaxLen ,_ =_bcd .GetInt (_gbeb .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _aefcd ,nil ;
};var _ pdfFont =(*pdfFontSimple )(nil );var ImageHandling ImageHandler =DefaultImageHandler {};func (_agccb *LTV )validateSig (_edeeb *PdfSignature )error {if _edeeb ==nil ||_edeeb .Contents ==nil ||len (_edeeb .Contents .Bytes ())==0{return _f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_edeeb );
};return nil ;};func _bbbcd (_fbcaa *_gac .ImageBase )(_eggac Image ){_eggac .Width =int64 (_fbcaa .Width );_eggac .Height =int64 (_fbcaa .Height );_eggac .BitsPerComponent =int64 (_fbcaa .BitsPerComponent );_eggac .ColorComponents =_fbcaa .ColorComponents ;
_eggac .Data =_fbcaa .Data ;_eggac ._fbccc =_fbcaa .Decode ;_eggac ._fafbg =_fbcaa .Alpha ;return _eggac ;};var (ErrRequiredAttributeMissing =_fcf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fcf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_bfc =_fcf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_fcf .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fcf .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_ca .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bcd .ErrNotSupported );ErrType1CFontNotSupported =_ca .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bcd .ErrNotSupported );
ErrType3FontNotSupported =_ca .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bcd .ErrNotSupported );
ErrTTCmapNotSupported =_ca .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bcd .ErrNotSupported );
ErrSignNotEnoughSpace =_ca .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_ca .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_eaebf *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func (_gfbgf *PdfFont )baseFields ()*fontCommon {if _gfbgf ._fbcb ==nil {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _gfbgf ._fbcb .baseFields ();};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_daefb *PdfPage )GetPageAsIndirectObject ()*_bcd .PdfIndirectObject {return _daefb ._bebee };func (_dabbb *PdfPattern )getDict ()*_bcd .PdfObjectDictionary {if _fdedcc ,_eabea :=_dabbb ._bdfe .(*_bcd .PdfIndirectObject );_eabea {_bdcg ,_fbace :=_fdedcc .PdfObject .(*_bcd .PdfObjectDictionary );
if !_fbace {return nil ;};return _bdcg ;}else if _bcdea ,_cfaa :=_dabbb ._bdfe .(*_bcd .PdfObjectStream );_cfaa {return _bcdea .PdfObjectDictionary ;}else {_aa .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_dabbb ._bdfe );
return nil ;};};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bcd .PdfObject ;BS _bcd .PdfObject ;LE _bcd .PdfObject ;IC _bcd .PdfObject ;LL _bcd .PdfObject ;LLE _bcd .PdfObject ;Cap _bcd .PdfObject ;IT _bcd .PdfObject ;LLO _bcd .PdfObject ;CP _bcd .PdfObject ;
Measure _bcd .PdfObject ;CO _bcd .PdfObject ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bbaa :=PdfWriter {};_bbaa ._dgag =map[_bcd .PdfObject ]struct{}{};_bbaa ._cccfae =[]_bcd .PdfObject {};_bbaa ._egab =map[_bcd .PdfObject ][]*_bcd .PdfObjectDictionary {};_bbaa ._gfedg =map[_bcd .PdfObject ]struct{}{};_bbaa ._cecgb .Major =1;
_bbaa ._cecgb .Minor =3;_bfcca :=_bcd .MakeDict ();_adcdf :=[]struct{_edde _bcd .PdfObjectName ;_afagf string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bbba ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_afbcf ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_decge ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_abadec ()},{"\u0054\u0069\u0074l\u0065",_gaage ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_gdeeg ()}};
for _ ,_dgbfg :=range _adcdf {if _dgbfg ._afagf !=""{_bfcca .Set (_dgbfg ._edde ,_bcd .MakeString (_dgbfg ._afagf ));};};if _ffbfg :=_aafgg ();!_ffbfg .IsZero (){if _bfdc ,_fgdga :=NewPdfDateFromTime (_ffbfg );_fgdga ==nil {_bfcca .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bfdc .ToPdfObject ());
};};if _beced :=_bbeda ();!_beced .IsZero (){if _cbdb ,_agbca :=NewPdfDateFromTime (_beced );_agbca ==nil {_bfcca .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_cbdb .ToPdfObject ());};};_baedgf :=_bcd .PdfIndirectObject {};_baedgf .PdfObject =_bfcca ;
_bbaa ._acdbc =&_baedgf ;_bbaa .addObject (&_baedgf );_bcfd :=_bcd .PdfIndirectObject {};_gedfg :=_bcd .MakeDict ();_gedfg .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_bcfd .PdfObject =_gedfg ;_bbaa ._ageaa =&_bcfd ;
_bbaa .addObject (_bbaa ._ageaa );_aegea ,_dbebf :=_beee ("\u0077");if _dbebf !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbebf );};_bbaa ._ebdbb =_aegea ;_fdbbg :=_bcd .PdfIndirectObject {};_gbab :=_bcd .MakeDict ();_gbab .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0050\u0061\u0067e\u0073"));
_gcecd :=_bcd .PdfObjectArray {};_gbab .Set ("\u004b\u0069\u0064\u0073",&_gcecd );_gbab .Set ("\u0043\u006f\u0075n\u0074",_bcd .MakeInteger (0));_fdbbg .PdfObject =_gbab ;_bbaa ._dbege =&_fdbbg ;_bbaa ._gacdb =map[_bcd .PdfObject ]struct{}{};_bbaa .addObject (_bbaa ._dbege );
_gedfg .Set ("\u0050\u0061\u0067e\u0073",&_fdbbg );_bbaa ._daaaa =_gedfg ;_aa .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_bcfd );return _bbaa ;};func (_edbc *PdfAppender )replaceObject (_fgeeb ,_faga _bcd .PdfObject ){switch _bdbc :=_fgeeb .(type ){case *_bcd .PdfIndirectObject :_edbc ._fedf [_faga ]=_bdbc .ObjectNumber ;
case *_bcd .PdfObjectStream :_edbc ._fedf [_faga ]=_bdbc .ObjectNumber ;};};func _fdeg (_eagge *XObjectForm )(*PdfRectangle ,error ){if _abee ,_fffde :=_eagge .BBox .(*_bcd .PdfObjectArray );_fffde {_abfba ,_dgcbf :=NewPdfRectangle (*_abee );if _dgcbf !=nil {return nil ,_dgcbf ;
};if _dgfc ,_cgbeg :=_eagge .Matrix .(*_bcd .PdfObjectArray );_cgbeg {_gbbg ,_cadc :=_dgfc .ToFloat64Array ();if _cadc !=nil {return nil ,_cadc ;};_febe :=_bca .IdentityMatrix ();if len (_gbbg )==6{_febe =_bca .NewMatrix (_gbbg [0],_gbbg [1],_gbbg [2],_gbbg [3],_gbbg [4],_gbbg [5]);
};_abfba .Transform (_febe );return _abfba ,nil ;};};return nil ,_fcf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_gead *PdfAcroForm )ToPdfObject ()_bcd .PdfObject {_aafb :=_gead ._cbae ;_agbd :=_aafb .PdfObject .(*_bcd .PdfObjectDictionary );if _gead .Fields !=nil {_bdacg :=_bcd .PdfObjectArray {};for _ ,_fdbf :=range *_gead .Fields {_dffb :=_fdbf .GetContext ();
if _dffb !=nil {_bdacg .Append (_dffb .ToPdfObject ());}else {_bdacg .Append (_fdbf .ToPdfObject ());};};_agbd .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_bdacg );};if _gead .NeedAppearances !=nil {_agbd .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_gead .NeedAppearances );
};if _gead .SigFlags !=nil {_agbd .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_gead .SigFlags );};if _gead .CO !=nil {_agbd .Set ("\u0043\u004f",_gead .CO );};if _gead .DR !=nil {_agbd .Set ("\u0044\u0052",_gead .DR .ToPdfObject ());};if _gead .DA !=nil {_agbd .Set ("\u0044\u0041",_gead .DA );
};if _gead .Q !=nil {_agbd .Set ("\u0051",_gead .Q );};if _gead .XFA !=nil {_agbd .Set ("\u0058\u0046\u0041",_gead .XFA );};if _gead .ADBEEchoSign !=nil {_agbd .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_gead .ADBEEchoSign );
};return _aafb ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_cbcgfa *PdfPageResources )GetXObjectImageByName (keyName _bcd .PdfObjectName )(*XObjectImage ,error ){_caegd ,_egeeb :=_cbcgfa .GetXObjectByName (keyName );if _caegd ==nil {return nil ,nil ;};if _egeeb !=XObjectTypeImage {return nil ,_fcf .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_cgdcf ,_ddbaf :=NewXObjectImageFromStream (_caegd );if _ddbaf !=nil {return nil ,_ddbaf ;};return _cgdcf ,nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bcd .PdfObject ;Flags _bcd .PdfObject ;};func (_fbbfa *PdfWriter )hasObject (_ecddd _bcd .PdfObject )bool {_ ,_bccdg :=_fbbfa ._dgag [_ecddd ];return _bccdg ;};

// IsSimple returns true if `font` is a simple font.
func (_fgca *PdfFont )IsSimple ()bool {_ ,_gdca :=_fgca ._fbcb .(*pdfFontSimple );return _gdca };

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bcd .PdfObjectArray ;Domain *_bcd .PdfObjectArray ;Function []PdfFunction ;Extend *_bcd .PdfObjectArray ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bcd .PdfObject )(*PdfFont ,error ){return _gbbf (fontObj ,true )};func (_cebcd *PdfWriter )flushWriter ()error {if _cebcd ._ffbff ==nil {_cebcd ._ffbff =_cebcd ._cgeef .Flush ();};return _cebcd ._ffbff ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_bdabf *PdfColorspaceLab )DecodeArray ()[]float64 {_ecge :=[]float64 {0,100};if _bdabf .Range !=nil &&len (_bdabf .Range )==4{_ecge =append (_ecge ,_bdabf .Range ...);}else {_ecge =append (_ecge ,-100,100,-100,100);};return _ecge ;};func _aadgg (_ggefg *_bcd .PdfObjectStream )(*PdfFunctionType0 ,error ){_acegc :=&PdfFunctionType0 {};
_acegc ._agcce =_ggefg ;_gfade :=_ggefg .PdfObjectDictionary ;_bebgb ,_aedca :=_bcd .TraceToDirectObject (_gfade .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcd .PdfObjectArray );if !_aedca {_aa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fcf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bebgb .Len ()< 0||_bebgb .Len ()%2!=0{_aa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fcf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_acegc .NumInputs =_bebgb .Len ()/2;_abaff ,_afgf :=_bebgb .ToFloat64Array ();if _afgf !=nil {return nil ,_afgf ;};_acegc .Domain =_abaff ;
_bebgb ,_aedca =_bcd .TraceToDirectObject (_gfade .Get ("\u0052\u0061\u006eg\u0065")).(*_bcd .PdfObjectArray );if !_aedca {_aa .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fcf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bebgb .Len ()< 0||_bebgb .Len ()%2!=0{return nil ,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_acegc .NumOutputs =_bebgb .Len ()/2;_dgddd ,_afgf :=_bebgb .ToFloat64Array ();if _afgf !=nil {return nil ,_afgf ;
};_acegc .Range =_dgddd ;_bebgb ,_aedca =_bcd .TraceToDirectObject (_gfade .Get ("\u0053\u0069\u007a\u0065")).(*_bcd .PdfObjectArray );if !_aedca {_aa .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_fcf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eadc ,_afgf :=_bebgb .ToIntegerArray ();
if _afgf !=nil {return nil ,_afgf ;};if len (_eadc )!=_acegc .NumInputs {_aa .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acegc .Size =_eadc ;_fdfc ,_aedca :=_bcd .TraceToDirectObject (_gfade .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bcd .PdfObjectInteger );
if !_aedca {_aa .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fcf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_fdfc !=1&&*_fdfc !=2&&*_fdfc !=4&&*_fdfc !=8&&*_fdfc !=12&&*_fdfc !=16&&*_fdfc !=24&&*_fdfc !=32{_aa .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_fdfc );
return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acegc .BitsPerSample =int (*_fdfc );_acegc .Order =1;_dcdg ,_aedca :=_bcd .TraceToDirectObject (_gfade .Get ("\u004f\u0072\u0064e\u0072")).(*_bcd .PdfObjectInteger );
if _aedca {if *_dcdg !=1&&*_dcdg !=3{_aa .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_dcdg );return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acegc .Order =int (*_dcdg );
};_bebgb ,_aedca =_bcd .TraceToDirectObject (_gfade .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bcd .PdfObjectArray );if _aedca {_cgfcb ,_abaebb :=_bebgb .ToFloat64Array ();if _abaebb !=nil {return nil ,_abaebb ;};_acegc .Encode =_cgfcb ;};_bebgb ,_aedca =_bcd .TraceToDirectObject (_gfade .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bcd .PdfObjectArray );
if _aedca {_gegfa ,_egfbc :=_bebgb .ToFloat64Array ();if _egfbc !=nil {return nil ,_egfbc ;};_acegc .Decode =_gegfa ;};_ggeg ,_afgf :=_bcd .DecodeStream (_ggefg );if _afgf !=nil {return nil ,_afgf ;};_acegc ._fcac =_ggeg ;return _acegc ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_gdaac *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _gdaac .MediaBox !=nil {return _gdaac .MediaBox ,nil ;};_bceg :=_gdaac .Parent ;for _bceg !=nil {_gfegd ,_cebeed :=_bcd .GetDict (_bceg );if !_cebeed {return nil ,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fadg :=_gfegd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_fadg !=nil {_eeddd ,_dbfdd :=_bcd .GetArray (_fadg );if !_dbfdd {return nil ,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_cbgad ,_ggcab :=NewPdfRectangle (*_eeddd );if _ggcab !=nil {return nil ,_ggcab ;};return _cbgad ,nil ;};_bceg =_gfegd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fcf .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// Register registers (caches) a model to primitive object relationship.
func (_dgac *modelManager )Register (primitive _bcd .PdfObject ,model PdfModel ){_dgac ._fbaag [model ]=primitive ;_dgac ._begdf [primitive ]=model ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cfcda *XObjectForm )SetContentStream (content []byte ,encoder _bcd .StreamEncoder )error {_gcafg :=content ;if encoder ==nil {if _cfcda .Filter !=nil {encoder =_cfcda .Filter ;}else {encoder =_bcd .NewRawEncoder ();};};_bcedg ,_fbefc :=encoder .EncodeBytes (_gcafg );
if _fbefc !=nil {return _fbefc ;};_gcafg =_bcedg ;_cfcda .Stream =_gcafg ;_cfcda .Filter =encoder ;return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bbeee *PdfSignatureReference )GetContainingPdfObject ()_bcd .PdfObject {return _bbeee ._geafd };

// GetBorderWidth returns the border style's width.
func (_ggaa *PdfBorderStyle )GetBorderWidth ()float64 {if _ggaa .W ==nil {return 1;};return *_ggaa .W ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bcd .PdfIndirectObject )*PdfOutlineItem {_dddc :=PdfOutlineItem {};_dddc ._gadg =&_dddc ;_dddc .Title =_bcd .MakeString (title );_abeb :=_bcd .MakeArray ();_abeb .Append (page );_abeb .Append (_bcd .MakeName ("\u0046\u0069\u0074"));
_dddc .Dest =_abeb ;return &_dddc ;};func (_fbee *PdfReader )newPdfAnnotationPolygonFromDict (_gfgf *_bcd .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_cbac :=PdfAnnotationPolygon {};_geec ,_gfad :=_fbee .newPdfAnnotationMarkupFromDict (_gfgf );
if _gfad !=nil {return nil ,_gfad ;};_cbac .PdfAnnotationMarkup =_geec ;_cbac .Vertices =_gfgf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cbac .LE =_gfgf .Get ("\u004c\u0045");_cbac .BS =_gfgf .Get ("\u0042\u0053");_cbac .IC =_gfgf .Get ("\u0049\u0043");
_cbac .BE =_gfgf .Get ("\u0042\u0045");_cbac .IT =_gfgf .Get ("\u0049\u0054");_cbac .Measure =_gfgf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cbac ,nil ;};

// GetNumPages returns the number of pages in the document.
func (_gdfbe *PdfReader )GetNumPages ()(int ,error ){if _gdfbe ._aceagb .GetCrypter ()!=nil &&!_gdfbe ._aceagb .IsAuthenticated (){return 0,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_gdfbe ._aaffe ),nil ;};func (_bbgff *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _bbgff ._agda ==nil &&_bbgff .DescendantFont !=nil {return _bbgff .DescendantFont .FontDescriptor ();};return _bbgff ._agda ;};

// String returns a string that describes `font`.
func (_gfdf *PdfFont )String ()string {_egebg :="";if _gfdf ._fbcb .Encoder ()!=nil {_egebg =_gfdf ._fbcb .Encoder ().String ();};return _f .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_gfdf ._fbcb ,_gfdf .baseFields ().coreString (),_egebg );
};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_gdede *_bcd .PdfIndirectObject ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bcd .PdfObjectStream )(*XObjectImage ,error ){_agcd :=&XObjectImage {};_agcd ._baedd =stream ;_bdgeg :=*(stream .PdfObjectDictionary );_gefed ,_faaae :=_bcd .NewEncoderFromStream (stream );if _faaae !=nil {return nil ,_faaae ;
};_agcd .Filter =_gefed ;if _gafff :=_bcd .TraceToDirectObject (_bdgeg .Get ("\u0057\u0069\u0064t\u0068"));_gafff !=nil {_aegab ,_ddagf :=_gafff .(*_bcd .PdfObjectInteger );if !_ddagf {return nil ,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_eeea :=int64 (*_aegab );_agcd .Width =&_eeea ;}else {return nil ,_fcf .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _beeea :=_bcd .TraceToDirectObject (_bdgeg .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_beeea !=nil {_cacbf ,_dgadg :=_beeea .(*_bcd .PdfObjectInteger );if !_dgadg {return nil ,_fcf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bdcbc :=int64 (*_cacbf );
_agcd .Height =&_bdcbc ;}else {return nil ,_fcf .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _cdfgg :=_bcd .TraceToDirectObject (_bdgeg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_cdfgg !=nil {_dagaee ,_gedbe :=NewPdfColorspaceFromPdfObject (_cdfgg );if _gedbe !=nil {return nil ,_gedbe ;};_agcd .ColorSpace =_dagaee ;}else {_aa .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_agcd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _eddge :=_bcd .TraceToDirectObject (_bdgeg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_eddge !=nil {_aedcae ,_adgab :=_eddge .(*_bcd .PdfObjectInteger );
if !_adgab {return nil ,_fcf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_egge :=int64 (*_aedcae );_agcd .BitsPerComponent =&_egge ;};_agcd .Intent =_bdgeg .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_agcd .ImageMask =_bdgeg .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_agcd .Mask =_bdgeg .Get ("\u004d\u0061\u0073\u006b");_agcd .Decode =_bdgeg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_agcd .Interpolate =_bdgeg .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_agcd .Alternatives =_bdgeg .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_agcd .SMask =_bdgeg .Get ("\u0053\u004d\u0061s\u006b");_agcd .SMaskInData =_bdgeg .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_agcd .Matte =_bdgeg .Get ("\u004d\u0061\u0074t\u0065");_agcd .Name =_bdgeg .Get ("\u004e\u0061\u006d\u0065");_agcd .StructParent =_bdgeg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_agcd .ID =_bdgeg .Get ("\u0049\u0044");
_agcd .OPI =_bdgeg .Get ("\u004f\u0050\u0049");_agcd .Metadata =_bdgeg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_agcd .OC =_bdgeg .Get ("\u004f\u0043");_agcd .Stream =stream .Stream ;return _agcd ,nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_cfdbb *PdfReader )Inspect ()(map[string ]int ,error ){return _cfdbb ._aceagb .Inspect ()};

// IsEncrypted returns true if the PDF file is encrypted.
func (_bcbfg *PdfReader )IsEncrypted ()(bool ,error ){return _bcbfg ._aceagb .IsEncrypted ()};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_bcd .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_gdfbg *_bcd .PdfIndirectObject ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcd .PdfObject ;IC _bcd .PdfObject ;RO _bcd .PdfObject ;OverlayText _bcd .PdfObject ;Repeat _bcd .PdfObject ;DA _bcd .PdfObject ;Q _bcd .PdfObject ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_egcec *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _egcec ._gccae !=nil {return _egcec ._gccae ,nil ;};if _egcec .Annots ==nil {_egcec ._gccae =[]*PdfAnnotation {};return nil ,nil ;};if _egcec ._gadef ==nil {_egcec ._gccae =[]*PdfAnnotation {};
return nil ,nil ;};_eddgf ,_ddeba :=_egcec ._gadef .loadAnnotations (_egcec .Annots );if _ddeba !=nil {return nil ,_ddeba ;};if _eddgf ==nil {_egcec ._gccae =[]*PdfAnnotation {};};_egcec ._gccae =_eddgf ;return _egcec ._gccae ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_dbabe *PdfShadingPattern )ToPdfObject ()_bcd .PdfObject {_dbabe .PdfPattern .ToPdfObject ();_ddgdge :=_dbabe .getDict ();if _dbabe .Shading !=nil {_ddgdge .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dbabe .Shading .ToPdfObject ());};if _dbabe .Matrix !=nil {_ddgdge .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dbabe .Matrix );
};if _dbabe .ExtGState !=nil {_ddgdge .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dbabe .ExtGState );};return _dbabe ._bdfe ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_ageaa *_bcd .PdfIndirectObject ;_dbege *_bcd .PdfIndirectObject ;_gacdb map[_bcd .PdfObject ]struct{};_cccfae []_bcd .PdfObject ;_dgag map[_bcd .PdfObject ]struct{};_cdegd []*_bcd .PdfIndirectObject ;_fbcgef *PdfOutlineTreeNode ;
_daaaa *_bcd .PdfObjectDictionary ;_cfcca []_bcd .PdfObject ;_acdbc *_bcd .PdfIndirectObject ;_cgeef *_fe .Writer ;_efgfc int64 ;_ffbff error ;_bdaag *_bcd .PdfCrypt ;_agece *_bcd .PdfObjectDictionary ;_bbbea *_bcd .PdfIndirectObject ;_cfgbb *_bcd .PdfObjectArray ;
_cecgb _bcd .Version ;_dcfad *bool ;_egab map[_bcd .PdfObject ][]*_bcd .PdfObjectDictionary ;_bebef *PdfAcroForm ;_effd Optimizer ;_dfea StandardApplier ;_dfafe map[int ]crossReference ;_bcafc int64 ;ObjNumOffset int ;_dbcbd bool ;_gdfed _bcd .XrefTable ;
_bfcad int64 ;_cbfdd int64 ;_ddce map[_bcd .PdfObject ]int64 ;_gfedg map[_bcd .PdfObject ]struct{};_ebdbb string ;_ecbbc []*PdfOutputIntent ;_bedbc bool ;_fbcec ,_efadda string ;};

// Encoder returns the font's text encoder.
func (_dfca *pdfFontSimple )Encoder ()_af .TextEncoder {if _dfca ._gcega !=nil {return _dfca ._gcega ;};if _dfca ._aeaf !=nil {return _dfca ._aeaf ;};_adce ,_ :=_af .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _adce ;};func _eafb (_acfc _bcd .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_gefeeb :=&PdfColorspaceDeviceNAttributes {};var _cbfb *_bcd .PdfObjectDictionary ;switch _feaf :=_acfc .(type ){case *_bcd .PdfIndirectObject :_gefeeb ._fbgad =_feaf ;
var _geed bool ;_cbfb ,_geed =_feaf .PdfObject .(*_bcd .PdfObjectDictionary );if !_geed {_aa .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fcf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_bcd .PdfObjectDictionary :_cbfb =_feaf ;case *_bcd .PdfObjectReference :_dfbe :=_feaf .Resolve ();return _eafb (_dfbe );default:_aa .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fcf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dgce :=_cbfb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dgce !=nil {_dccac ,_aceb :=_bcd .TraceToDirectObject (_dgce ).(*_bcd .PdfObjectName );if !_aceb {_aa .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_fcf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gefeeb .Subtype =_dccac ;};if _cdgd :=_cbfb .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_cdgd !=nil {_gefeeb .Colorants =_cdgd ;};if _acce :=_cbfb .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_acce !=nil {_gefeeb .Process =_acce ;};if _afdeb :=_cbfb .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_afdeb !=nil {_gefeeb .MixingHints =_afdeb ;};return _gefeeb ,nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bcd .PdfObject ;FS _bcd .PdfObject ;F _bcd .PdfObject ;UF _bcd .PdfObject ;DOS _bcd .PdfObject ;Mac _bcd .PdfObject ;Unix _bcd .PdfObject ;ID _bcd .PdfObject ;V _bcd .PdfObject ;EF _bcd .PdfObject ;RF _bcd .PdfObject ;Desc _bcd .PdfObject ;
CI _bcd .PdfObject ;_dgfe _bcd .PdfObject ;};func (_gfea *PdfReader )newPdfActionNamedFromDict (_dbf *_bcd .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_dbf .Get ("\u004e")},nil ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_fgaea :=&PdfAnnotation {};_fgaea ._dbd =_bcd .MakeIndirectObject (_bcd .MakeDict ());return _fgaea ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bcd .PdfObjectInteger ;TilingType *_bcd .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bcd .PdfObjectFloat ;YStep *_bcd .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bcd .PdfObjectArray ;};


// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_caegg *PdfPageResources )GetExtGState (keyName _bcd .PdfObjectName )(_bcd .PdfObject ,bool ){if _caegg .ExtGState ==nil {return nil ,false ;};_bcacb ,_gbgad :=_bcd .TraceToDirectObject (_caegg .ExtGState ).(*_bcd .PdfObjectDictionary );if !_gbgad {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_caegg .ExtGState );
return nil ,false ;};if _gabb :=_bcacb .Get (keyName );_gabb !=nil {return _gabb ,true ;};return nil ,false ;};

// AddWatermarkImage adds a watermark to the page.
func (_gcfed *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_ecda ,_fgfab :=_gcfed .GetMediaBox ();if _fgfab !=nil {return _fgfab ;};_bebcd :=_ecda .Urx -_ecda .Llx ;_bfba :=_ecda .Ury -_ecda .Lly ;_ebbb :=float64 (*ximg .Width );
_cccecg :=(_bebcd -_ebbb )/2;if opt .FitToWidth {_ebbb =_bebcd ;_cccecg =0;};_bdaeb :=_bfba ;_fbce :=float64 (0);if opt .PreserveAspectRatio {_bdaeb =_ebbb *float64 (*ximg .Height )/float64 (*ximg .Width );_fbce =(_bfba -_bdaeb )/2;};if _gcfed .Resources ==nil {_gcfed .Resources =NewPdfPageResources ();
};_beefb :=0;_dgebdc :=_bcd .PdfObjectName (_f .Sprintf ("\u0049\u006d\u0077%\u0064",_beefb ));for _gcfed .Resources .HasXObjectByName (_dgebdc ){_beefb ++;_dgebdc =_bcd .PdfObjectName (_f .Sprintf ("\u0049\u006d\u0077%\u0064",_beefb ));};_fgfab =_gcfed .AddImageResource (_dgebdc ,ximg );
if _fgfab !=nil {return _fgfab ;};_beefb =0;_cdfdg :=_bcd .PdfObjectName (_f .Sprintf ("\u0047\u0053\u0025\u0064",_beefb ));for _gcfed .HasExtGState (_cdfdg ){_beefb ++;_cdfdg =_bcd .PdfObjectName (_f .Sprintf ("\u0047\u0053\u0025\u0064",_beefb ));};_ecggf :=_bcd .MakeDict ();
_ecggf .Set ("\u0042\u004d",_bcd .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_ecggf .Set ("\u0043\u0041",_bcd .MakeFloat (opt .Alpha ));_ecggf .Set ("\u0063\u0061",_bcd .MakeFloat (opt .Alpha ));_fgfab =_gcfed .AddExtGState (_cdfdg ,_ecggf );if _fgfab !=nil {return _fgfab ;
};_dfbag :=_f .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_cdfdg ,_ebbb ,_bdaeb ,_cccecg ,_fbce ,_dgebdc );
_gcfed .AddContentStreamByString (_dfbag );return nil ;};func (_efb *PdfReader )newPdfActionSubmitFormFromDict (_fdfb *_bcd .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_efa ,_ddf :=_cdag (_fdfb .Get ("\u0046"));if _ddf !=nil {return nil ,_ddf ;
};return &PdfActionSubmitForm {F :_efa ,Fields :_fdfb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fdfb .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_gaffb *PdfPageResources )HasExtGState (keyName _bcd .PdfObjectName )bool {_ ,_ebfgg :=_gaffb .GetFontByName (keyName );return _ebfgg ;};func (_gfcf *DSS )generateHashMaps ()error {_fbcfd ,_egeb :=_gfcf .generateHashMap (_gfcf .Certs );if _egeb !=nil {return _egeb ;
};_bafd ,_egeb :=_gfcf .generateHashMap (_gfcf .OCSPs );if _egeb !=nil {return _egeb ;};_efeaee ,_egeb :=_gfcf .generateHashMap (_gfcf .CRLs );if _egeb !=nil {return _egeb ;};_gfcf ._fcad =_fbcfd ;_gfcf ._beca =_bafd ;_gfcf ._gfbge =_efeaee ;return nil ;
};func _decge ()string {_dgecg .Lock ();defer _dgecg .Unlock ();return _ffbef };func (_cgc *PdfReader )newPdfAnnotationSquareFromDict (_gbgg *_bcd .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_ageb :=PdfAnnotationSquare {};_dacb ,_ced :=_cgc .newPdfAnnotationMarkupFromDict (_gbgg );
if _ced !=nil {return nil ,_ced ;};_ageb .PdfAnnotationMarkup =_dacb ;_ageb .BS =_gbgg .Get ("\u0042\u0053");_ageb .IC =_gbgg .Get ("\u0049\u0043");_ageb .BE =_gbgg .Get ("\u0042\u0045");_ageb .RD =_gbgg .Get ("\u0052\u0044");return &_ageb ,nil ;};

// ToInteger convert to an integer format.
func (_dcee *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_aadb :=_cc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_aadb *_dcee .A ()),uint32 (_aadb *_dcee .B ()),uint32 (_aadb *_dcee .C ())};};const (BorderEffectNoEffect BorderEffect =iota ;
BorderEffectCloudy BorderEffect =iota ;);func (_dacf *PdfWriter )seekByName (_bbafe _bcd .PdfObject ,_aebcb []string ,_bcaag string )([]_bcd .PdfObject ,error ){_aa .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bbafe );
var _gaacc []_bcd .PdfObject ;if _bdbea ,_efbca :=_bbafe .(*_bcd .PdfIndirectObject );_efbca {return _dacf .seekByName (_bdbea .PdfObject ,_aebcb ,_bcaag );};if _dfbgb ,_eddgd :=_bbafe .(*_bcd .PdfObjectStream );_eddgd {return _dacf .seekByName (_dfbgb .PdfObjectDictionary ,_aebcb ,_bcaag );
};if _gagf ,_efggg :=_bbafe .(*_bcd .PdfObjectDictionary );_efggg {_aa .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_fgdecc :=range _gagf .Keys (){_edfc :=_gagf .Get (_fgdecc );if string (_fgdecc )==_bcaag {_gaacc =append (_gaacc ,_edfc );};for _ ,_cfab :=range _aebcb {if string (_fgdecc )==_cfab {_aa .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_cfab );
_bbbcg ,_adfd :=_dacf .seekByName (_edfc ,_aebcb ,_bcaag );if _adfd !=nil {return _gaacc ,_adfd ;};_gaacc =append (_gaacc ,_bbbcg ...);break ;};};};return _gaacc ,nil ;};return _gaacc ,nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_fcgc *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bcd .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fcf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_fedfa :=&PdfColorPattern {};_ffge ,_eeac :=objects [len (objects )-1].(*_bcd .PdfObjectName );if !_eeac {_aa .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_fedfa .PatternName =*_ffge ;if len (objects )> 1{_ggdf :=objects [0:len (objects )-1];if _fcgc .UnderlyingCS ==nil {_aa .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_fcf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_becee ,_bace :=_fcgc .UnderlyingCS .ColorFromPdfObjects (_ggdf );if _bace !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_bace );
return nil ,_bace ;};_fedfa .Color =_becee ;};return _fedfa ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bcd .PdfObject ,error );};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_gade *PdfOutlineTreeNode )GetContainingPdfObject ()_bcd .PdfObject {return _gade .GetContext ().GetContainingPdfObject ();};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_eaff *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agebb :=vals [0];if _agebb < 0.0||_agebb > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_agebb );
return nil ,ErrColorOutOfRange ;};_agefe :=vals [1];if _agefe < 0.0||_agefe > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_agefe );return nil ,ErrColorOutOfRange ;
};_decc :=vals [2];if _decc < 0.0||_decc > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_decc );return nil ,ErrColorOutOfRange ;};_gegaf :=vals [3];
if _gegaf < 0.0||_gegaf > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gegaf );return nil ,ErrColorOutOfRange ;};_ddbg :=NewPdfColorDeviceCMYK (_agebb ,_agefe ,_decc ,_gegaf );
return _ddbg ,nil ;};

// SetAlpha sets the alpha layer for the image.
func (_gcece *Image )SetAlpha (alpha []byte ){_gcece ._fafbg =alpha };

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bcd .PdfObject ;MK _bcd .PdfObject ;A _bcd .PdfObject ;AA _bcd .PdfObject ;BS _bcd .PdfObject ;Parent _bcd .PdfObject ;_gge *PdfField ;_beaf bool ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bcd .PdfObjectStream ;Data []byte ;_fead *_bcd .PdfIndirectObject ;_bdbce *_bcd .PdfObjectStream ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_aafdd *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _aafdd .flattenFieldsWithOpts (allannots ,appgen ,nil );};func _dcgg (_abfaa _bcd .PdfObject )(*PdfFunctionType3 ,error ){_cebfc :=&PdfFunctionType3 {};
var _fegc *_bcd .PdfObjectDictionary ;if _cdca ,_cbeaf :=_abfaa .(*_bcd .PdfIndirectObject );_cbeaf {_decf ,_fggcb :=_cdca .PdfObject .(*_bcd .PdfObjectDictionary );if !_fggcb {return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cebfc ._efeaf =_cdca ;_fegc =_decf ;}else if _degbg ,_gcbgbb :=_abfaa .(*_bcd .PdfObjectDictionary );_gcbgbb {_fegc =_degbg ;}else {return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aedee ,_dbfdgc :=_bcd .TraceToDirectObject (_fegc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcd .PdfObjectArray );
if !_dbfdgc {_aa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fcf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _aedee .Len ()!=2{_aa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fcf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_efcgc ,_cabgd :=_aedee .ToFloat64Array ();
if _cabgd !=nil {return nil ,_cabgd ;};_cebfc .Domain =_efcgc ;_aedee ,_dbfdgc =_bcd .TraceToDirectObject (_fegc .Get ("\u0052\u0061\u006eg\u0065")).(*_bcd .PdfObjectArray );if _dbfdgc {if _aedee .Len ()< 0||_aedee .Len ()%2!=0{return nil ,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cafeda ,_dcaeca :=_aedee .ToFloat64Array ();if _dcaeca !=nil {return nil ,_dcaeca ;};_cebfc .Range =_cafeda ;};_aedee ,_dbfdgc =_bcd .TraceToDirectObject (_fegc .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bcd .PdfObjectArray );if !_dbfdgc {_aa .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_fcf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cebfc .Functions =[]PdfFunction {};
for _ ,_ffaf :=range _aedee .Elements (){_dbaed ,_gaggb :=_bggfc (_ffaf );if _gaggb !=nil {return nil ,_gaggb ;};_cebfc .Functions =append (_cebfc .Functions ,_dbaed );};_aedee ,_dbfdgc =_bcd .TraceToDirectObject (_fegc .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bcd .PdfObjectArray );
if !_dbfdgc {_aa .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fcf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_cfbc ,_cabgd :=_aedee .ToFloat64Array ();if _cabgd !=nil {return nil ,_cabgd ;};_cebfc .Bounds =_cfbc ;if len (_cebfc .Bounds )!=len (_cebfc .Functions )-1{_aa .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_cebfc .Bounds ),len (_cebfc .Functions ));
return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aedee ,_dbfdgc =_bcd .TraceToDirectObject (_fegc .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bcd .PdfObjectArray );if !_dbfdgc {_aa .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fcf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ddge ,_cabgd :=_aedee .ToFloat64Array ();
if _cabgd !=nil {return nil ,_cabgd ;};_cebfc .Encode =_ddge ;if len (_cebfc .Encode )!=2*len (_cebfc .Functions ){_aa .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_cebfc .Encode ),len (_cebfc .Functions ));
return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _cebfc ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_aaeg *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edgg :=vals [0];if _edgg < 0.0||_edgg > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_edgg );
return nil ,ErrColorOutOfRange ;};_afaa :=NewPdfColorCalGray (_edgg );return _afaa ,nil ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_dgecg .Lock ();defer _dgecg .Unlock ();_efeg =keywords };func (_agbg *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_fge :=NewPdfAnnotation ();_geag :=&PdfAnnotationPolygon {};_geag .PdfAnnotation =_fge ;_geag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fge .SetContext (_geag );return _geag ;};

// HasFontByName checks if has font resource by name.
func (_cbdg *PdfPage )HasFontByName (name _bcd .PdfObjectName )bool {_gdbcf ,_gcfec :=_cbdg .Resources .Font .(*_bcd .PdfObjectDictionary );if !_gcfec {return false ;};if _egeab :=_gdbcf .Get (name );_egeab !=nil {return true ;};return false ;};func _fggc (_bebg *PdfField ,_gdeg _bcd .PdfObject )error {switch _bebg .GetContext ().(type ){case *PdfFieldText :switch _bcfee :=_gdeg .(type ){case *_bcd .PdfObjectName :_cdaab :=_bcfee ;
_aa .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_cdaab .String ());
_bebg .V =_bcd .MakeEncodedString (_bcfee .String (),true );case *_bcd .PdfObjectString :_bebg .V =_bcd .MakeEncodedString (_bcfee .String (),true );default:_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_bcfee ,_bcfee );
};case *PdfFieldButton :switch _gdeg .(type ){case *_bcd .PdfObjectName :if len (_gdeg .String ())> 0{_bebg .V =_gdeg ;_bfdac (_bebg ,_gdeg );};case *_bcd .PdfObjectString :if len (_gdeg .String ())> 0{_bebg .V =_bcd .MakeName (_gdeg .String ());_bfdac (_bebg ,_bebg .V );
};default:_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bebg .PartialName (),_gdeg );_bebg .V =_gdeg ;};case *PdfFieldChoice :switch _gdeg .(type ){case *_bcd .PdfObjectName :if len (_gdeg .String ())> 0{_bebg .V =_bcd .MakeString (_gdeg .String ());
_bfdac (_bebg ,_gdeg );};case *_bcd .PdfObjectString :if len (_gdeg .String ())> 0{_bebg .V =_gdeg ;_bfdac (_bebg ,_bcd .MakeName (_gdeg .String ()));};default:_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bebg .PartialName (),_gdeg );
_bebg .V =_gdeg ;};case *PdfFieldSignature :_aa .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_bebg .PartialName (),_gdeg );
};return nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_dgdd *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_gddae :=_gea .NewReader (img .getBase ());_eaeb :=_gac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fbag :=_gea .NewWriter (_eaeb );
_fegd :=_cc .Pow (2,float64 (img .BitsPerComponent ))-1;_becf :=make ([]uint32 ,3);var (_eeeb error ;_ebbe ,_abbe ,_abbb ,_degg ,_cbec ,_eaaa float64 ;);for {_eeeb =_gddae .ReadSamples (_becf );if _eeeb ==_ec .EOF {break ;}else if _eeeb !=nil {return img ,_eeeb ;
};_ebbe =float64 (_becf [0])/_fegd ;_abbe =float64 (_becf [1])/_fegd ;_abbb =float64 (_becf [2])/_fegd ;_degg =_dgdd .Matrix [0]*_cc .Pow (_ebbe ,_dgdd .Gamma [0])+_dgdd .Matrix [3]*_cc .Pow (_abbe ,_dgdd .Gamma [1])+_dgdd .Matrix [6]*_cc .Pow (_abbb ,_dgdd .Gamma [2]);
_cbec =_dgdd .Matrix [1]*_cc .Pow (_ebbe ,_dgdd .Gamma [0])+_dgdd .Matrix [4]*_cc .Pow (_abbe ,_dgdd .Gamma [1])+_dgdd .Matrix [7]*_cc .Pow (_abbb ,_dgdd .Gamma [2]);_eaaa =_dgdd .Matrix [2]*_cc .Pow (_ebbe ,_dgdd .Gamma [0])+_dgdd .Matrix [5]*_cc .Pow (_abbe ,_dgdd .Gamma [1])+_dgdd .Matrix [8]*_cc .Pow (_abbb ,_dgdd .Gamma [2]);
_ebbe =3.240479*_degg +-1.537150*_cbec +-0.498535*_eaaa ;_abbe =-0.969256*_degg +1.875992*_cbec +0.041556*_eaaa ;_abbb =0.055648*_degg +-0.204043*_cbec +1.057311*_eaaa ;_ebbe =_cc .Min (_cc .Max (_ebbe ,0),1.0);_abbe =_cc .Min (_cc .Max (_abbe ,0),1.0);
_abbb =_cc .Min (_cc .Max (_abbb ,0),1.0);_becf [0]=uint32 (_ebbe *_fegd );_becf [1]=uint32 (_abbe *_fegd );_becf [2]=uint32 (_abbb *_fegd );if _eeeb =_fbag .WriteSamples (_becf );_eeeb !=nil {return img ,_eeeb ;};};return _bbbcd (&_eaeb ),nil ;};func (_gdfe *PdfReader )newPdfAnnotation3DFromDict (_efdc *_bcd .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_daa :=PdfAnnotation3D {};
_daa .T3DD =_efdc .Get ("\u0033\u0044\u0044");_daa .T3DV =_efdc .Get ("\u0033\u0044\u0056");_daa .T3DA =_efdc .Get ("\u0033\u0044\u0041");_daa .T3DI =_efdc .Get ("\u0033\u0044\u0049");_daa .T3DB =_efdc .Get ("\u0033\u0044\u0042");return &_daa ,nil ;};func _bbea (_efaaf *_bcd .PdfObjectDictionary ,_gcee *fontCommon )(*pdfCIDFontType0 ,error ){if _gcee ._ffaca !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_aa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gcee );
return nil ,_bcd .ErrRangeError ;};_fddfb :=_dfbad (_gcee );_gdcd ,_egec :=_bcd .GetDict (_efaaf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_egec {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gcee );
return nil ,ErrRequiredAttributeMissing ;};_fddfb .CIDSystemInfo =_gdcd ;_fddfb .DW =_efaaf .Get ("\u0044\u0057");_fddfb .W =_efaaf .Get ("\u0057");_fddfb .DW2 =_efaaf .Get ("\u0044\u0057\u0032");_fddfb .W2 =_efaaf .Get ("\u0057\u0032");_fddfb ._gcaba =1000.0;
if _ceef ,_ebfd :=_bcd .GetNumberAsFloat (_fddfb .DW );_ebfd ==nil {_fddfb ._gcaba =_ceef ;};_dacbg ,_debc :=_dadc (_fddfb .W );if _debc !=nil {return nil ,_debc ;};if _dacbg ==nil {_dacbg =map[_af .CharCode ]float64 {};};_fddfb ._adgbe =_dacbg ;return _fddfb ,nil ;
};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bdffb *PdfPageResources )GetPatternByName (keyName _bcd .PdfObjectName )(*PdfPattern ,bool ){if _bdffb .Pattern ==nil {return nil ,false ;};_ffadfd ,_cacag :=_bcd .TraceToDirectObject (_bdffb .Pattern ).(*_bcd .PdfObjectDictionary );if !_cacag {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdffb .Pattern );
return nil ,false ;};if _eecae :=_ffadfd .Get (keyName );_eecae !=nil {_abdbd ,_bcgff :=_daebd (_eecae );if _bcgff !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_bcgff );
return nil ,false ;};return _abdbd ,true ;};return nil ,false ;};func (_dbefc *PdfReader )buildPageList (_dgdcb *_bcd .PdfIndirectObject ,_adacf *_bcd .PdfIndirectObject ,_aagce map[_bcd .PdfObject ]struct{})error {if _dgdcb ==nil {return nil ;};if _ ,_bgeed :=_aagce [_dgdcb ];
_bgeed {_aa .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_dgdcb .ObjectNumber );return nil ;};_aagce [_dgdcb ]=struct{}{};
_geecf ,_cfde :=_dgdcb .PdfObject .(*_bcd .PdfObjectDictionary );if !_cfde {return _fcf .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_cagdc ,_cfde :=(*_geecf ).Get ("\u0054\u0079\u0070\u0065").(*_bcd .PdfObjectName );
if !_cfde {if _geecf .Get ("\u004b\u0069\u0064\u0073")==nil {return _fcf .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_aa .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_cagdc =_bcd .MakeName ("\u0050\u0061\u0067e\u0073");_geecf .Set ("\u0054\u0079\u0070\u0065",_cagdc );};_aa .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_cagdc ,_dgdcb );
if *_cagdc =="\u0050\u0061\u0067\u0065"{_ggcfb ,_aafda :=_dbefc .newPdfPageFromDict (_geecf );if _aafda !=nil {return _aafda ;};_ggcfb .setContainer (_dgdcb );if _adacf !=nil {_geecf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_adacf );};_dbefc ._aaffe =append (_dbefc ._aaffe ,_dgdcb );
_dbefc .PageList =append (_dbefc .PageList ,_ggcfb );return nil ;};if *_cagdc !="\u0050\u0061\u0067e\u0073"{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_cagdc );
return _fcf .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _adacf !=nil {_geecf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_adacf );};if !_dbefc ._aacc {_dcbeb :=_dbefc .traverseObjectData (_dgdcb );if _dcbeb !=nil {return _dcbeb ;};};_fafbge ,_cfbfe :=_dbefc ._aceagb .Resolve (_geecf .Get ("\u004b\u0069\u0064\u0073"));
if _cfbfe !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _cfbfe ;};var _ddgdgd *_bcd .PdfObjectArray ;
_ddgdgd ,_cfde =_fafbge .(*_bcd .PdfObjectArray );if !_cfde {_dcaa ,_adbbf :=_fafbge .(*_bcd .PdfIndirectObject );if !_adbbf {return _fcf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_ddgdgd ,_cfde =_dcaa .PdfObject .(*_bcd .PdfObjectArray );if !_cfde {return _fcf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_aa .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ddgdgd );
for _fcfbb ,_gbcgf :=range _ddgdgd .Elements (){_ecgag ,_dedbg :=_bcd .GetIndirect (_gbcgf );if !_dedbg {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_ecgag );
return _fcf .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ddgdgd .Set (_fcfbb ,_ecgag );_cfbfe =_dbefc .buildPageList (_ecgag ,_dgdcb ,_aagce );if _cfbfe !=nil {return _cfbfe ;
};};return nil ;};

// SetContext set the sub annotation (context).
func (_aefcfg *PdfShading )SetContext (ctx PdfModel ){_aefcfg ._ecdfcf =ctx };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_ffde *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// Items returns all children outline items.
func (_dgfdd *Outline )Items ()[]*OutlineItem {return _dgfdd .Entries };func (_gafcg *pdfCIDFontType0 )baseFields ()*fontCommon {return &_gafcg .fontCommon };

// HasXObjectByName checks if has XObject resource by name.
func (_dafcg *PdfPage )HasXObjectByName (name _bcd .PdfObjectName )bool {_ebafc ,_adgfb :=_dafcg .Resources .XObject .(*_bcd .PdfObjectDictionary );if !_adgfb {return false ;};if _dcefg :=_ebafc .Get (name );_dcefg !=nil {return true ;};return false ;};


// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_facdc :=&XObjectImage {};_gcadf :=&_bcd .PdfObjectStream {};_gcadf .PdfObjectDictionary =_bcd .MakeDict ();_facdc ._baedd =_gcadf ;return _facdc ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func (_bgb *PdfReader )newPdfActionMovieFromDict (_cebg *_bcd .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_cebg .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_cebg .Get ("\u0054"),Operation :_cebg .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// G returns the value of the green component of the color.
func (_beae *PdfColorDeviceRGB )G ()float64 {return _beae [1]};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_cfe :=NewPdfAnnotation ();_bfd :=&PdfAnnotationLine {};_bfd .PdfAnnotation =_cfe ;_bfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfe .SetContext (_bfd );return _bfd ;};func _dcfa (_gfecg *_bcd .PdfObjectDictionary ,_fbdaa *fontCommon )(*pdfCIDFontType2 ,error ){if _fbdaa ._ffaca !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_aa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fbdaa );
return nil ,_bcd .ErrRangeError ;};_gefge :=_bcedcf (_fbdaa );_fggdg ,_gdfeb :=_bcd .GetDict (_gfecg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gdfeb {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fbdaa );
return nil ,ErrRequiredAttributeMissing ;};_gefge .CIDSystemInfo =_fggdg ;_gefge .DW =_gfecg .Get ("\u0044\u0057");_gefge .W =_gfecg .Get ("\u0057");_gefge .DW2 =_gfecg .Get ("\u0044\u0057\u0032");_gefge .W2 =_gfecg .Get ("\u0057\u0032");_gefge .CIDToGIDMap =_gfecg .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_gefge ._cafed =1000.0;if _ecdeb ,_ddbb :=_bcd .GetNumberAsFloat (_gefge .DW );_ddbb ==nil {_gefge ._cafed =_ecdeb ;};_dgaf ,_bagf :=_dadc (_gefge .W );if _bagf !=nil {return nil ,_bagf ;};if _dgaf ==nil {_dgaf =map[_af .CharCode ]float64 {};};_gefge ._dbabb =_dgaf ;
return _gefge ,nil ;};func (_ebbeb fontCommon )isCIDFont ()bool {if _ebbeb ._ffaca ==""{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ebbeb );
};_fffe :=false ;switch _ebbeb ._ffaca {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fffe =true ;};_aa .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_fffe ,_ebbeb );
return _fffe ;};func (_ccbbc SignatureValidationResult )String ()string {var _aaec _ge .Buffer ;_aaec .WriteString (_f .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_ccbbc .Name ));if _ccbbc .Date ._ebgb > 0{_aaec .WriteString (_f .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_ccbbc .Date .ToGoTime ().String ()));
}else {_aaec .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_ccbbc .Reason )> 0{_aaec .WriteString (_f .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ccbbc .Reason ));
}else {_aaec .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_ccbbc .Location )> 0{_aaec .WriteString (_f .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ccbbc .Location ));
}else {_aaec .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_ccbbc .ContactInfo )> 0{_aaec .WriteString (_f .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_ccbbc .ContactInfo ));
}else {_aaec .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_aaec .WriteString (_f .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_ccbbc .Fields )));
if _ccbbc .IsSigned {_aaec .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_aaec .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _ccbbc .IsVerified {_aaec .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_aaec .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _ccbbc .IsTrusted {_aaec .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_aaec .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_ccbbc .GeneralizedTime .IsZero (){_aaec .WriteString (_f .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_ccbbc .GeneralizedTime .String ()));};if _ccbbc .DiffResults !=nil {_aaec .WriteString (_f .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_ccbbc .DiffResults .IsPermitted ()));
if len (_ccbbc .DiffResults .Warnings )> 0{_aaec .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");for _ ,_cfac :=range _ccbbc .DiffResults .Warnings {_aaec .WriteString (_f .Sprintf ("\u0009\u0025\u0073\u000a",_cfac ));
};};if len (_ccbbc .DiffResults .Errors )> 0{_aaec .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");for _ ,_feefdb :=range _ccbbc .DiffResults .Errors {_aaec .WriteString (_f .Sprintf ("\u0009\u0025\u0073\u000a",_feefdb ));
};};};return _aaec .String ();};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_debfed *PdfPageResources )HasShadingByName (keyName _bcd .PdfObjectName )bool {_ ,_bdge :=_debfed .GetShadingByName (keyName );return _bdge ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bcd .PdfObject ;RichMediaContent _bcd .PdfObject ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bcd .PdfObject ;Mac _bcd .PdfObject ;Unix _bcd .PdfObject ;NewWindow _bcd .PdfObject ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_aceaeb *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_cbgfc ,_dgee :=_bcd .GetDict (_aceaeb ._daaaa .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_dgee {_cbgfc =_bcd .MakeDict ();_aceaeb ._daaaa .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_cbgfc );
};_gcade ,_dgee :=_bcd .GetDict (_cbgfc .Get (_bcd .PdfObjectName (extName )));if !_dgee {_gcade =_bcd .MakeDict ();_cbgfc .Set (_bcd .PdfObjectName (extName ),_gcade );};if _agbcb ,_ :=_bcd .GetNameVal (_gcade .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_agbcb !=baseVersion {_gcade .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_bcd .MakeName (baseVersion ));};if _cbacg ,_ :=_bcd .GetIntVal (_gcade .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_cbacg !=extLevel {_gcade .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_bcd .MakeInteger (int64 (extLevel )));};};

// ColorToRGB converts a CalGray color to an RGB color.
func (_fad *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_ccdgc ,_dccg :=color .(*PdfColorCalGray );if !_dccg {_aa .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_ccdgc .Val ();X :=_fad .WhitePoint [0]*_cc .Pow (ANorm ,_fad .Gamma );Y :=_fad .WhitePoint [1]*_cc .Pow (ANorm ,_fad .Gamma );Z :=_fad .WhitePoint [2]*_cc .Pow (ANorm ,_fad .Gamma );
_cffgc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gfgd :=-0.969256*X +1.875992*Y +0.041556*Z ;_ccg :=0.055648*X +-0.204043*Y +1.057311*Z ;_cffgc =_cc .Min (_cc .Max (_cffgc ,0),1.0);_gfgd =_cc .Min (_cc .Max (_gfgd ,0),1.0);_ccg =_cc .Min (_cc .Max (_ccg ,0),1.0);
return NewPdfColorDeviceRGB (_cffgc ,_gfgd ,_ccg ),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_abfag *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bcd .PdfObject )(PdfColor ,error ){if len (objects )!=_abfag .GetNumComponents (){return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gecg ,_bdea :=_bcd .GetNumbersAsFloat (objects );
if _bdea !=nil {return nil ,_bdea ;};return _abfag .ColorFromFloats (_gecg );};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_gagb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gagb .AlternateSpace ==nil {return nil ,_fcf .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _gagb .AlternateSpace .ColorToRGB (color );};func (_caced *PdfWriter )optimize ()error {if _caced ._effd ==nil {return nil ;};var _cebdf error ;_caced ._cccfae ,_cebdf =_caced ._effd .Optimize (_caced ._cccfae );if _cebdf !=nil {return _cebdf ;
};_bccfa :=make (map[_bcd .PdfObject ]struct{},len (_caced ._cccfae ));for _ ,_cebbed :=range _caced ._cccfae {_bccfa [_cebbed ]=struct{}{};};_caced ._dgag =_bccfa ;return nil ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_cfcd *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_eeeg :=_cfcd .actualFont ();if _eeeg ==nil {_aa .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_cfcd ._fbcb );
return _aab .CharMetrics {},false ;};if _gaadc ,_eccdg :=_eeeg .GetRuneMetrics (r );_eccdg {return _gaadc ,true ;};if _eagef ,_eeebf :=_cfcd .GetFontDescriptor ();_eeebf ==nil &&_eagef !=nil {return _aab .CharMetrics {Wx :_eagef ._afae },true ;};_aa .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cfcd );
return _aab .CharMetrics {},false ;};func (_gbga *PdfReader )newPdfActionHideFromDict (_aef *_bcd .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_aef .Get ("\u0054"),H :_aef .Get ("\u0048")},nil ;};

// Encoder returns the font's text encoder.
func (_agbb pdfFontType3 )Encoder ()_af .TextEncoder {return _agbb ._efefb };

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_cdeb *Outline )Insert (index uint ,item *OutlineItem ){_fefa :=uint (len (_cdeb .Entries ));if index > _fefa {index =_fefa ;};_cdeb .Entries =append (_cdeb .Entries [:index ],append ([]*OutlineItem {item },_cdeb .Entries [index :]...)...);};func _bdfc (_fdega _bcd .PdfObject )(*fontFile ,error ){_aa .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_fdega );
_edee :=&fontFile {};_fdega =_bcd .TraceToDirectObject (_fdega );_ccee ,_fddg :=_fdega .(*_bcd .PdfObjectStream );if !_fddg {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_fdega );
return nil ,_bcd .ErrTypeError ;};_ccafa :=_ccee .PdfObjectDictionary ;_efebf ,_baaad :=_bcd .DecodeStream (_ccee );if _baaad !=nil {return nil ,_baaad ;};_dcceg ,_fddg :=_bcd .GetNameVal (_ccafa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fddg {_edee ._edgd =_dcceg ;
if _dcceg =="\u0054\u0079\u0070\u0065\u0031\u0043"{_aa .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_dffg ,_ :=_bcd .GetIntVal (_ccafa .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_fbgdg ,_ :=_bcd .GetIntVal (_ccafa .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _dffg > len (_efebf ){_dffg =len (_efebf );
};if _dffg +_fbgdg > len (_efebf ){_fbgdg =len (_efebf )-_dffg ;};_acabf :=_efebf [:_dffg ];var _daga []byte ;if _fbgdg > 0{_daga =_efebf [_dffg :_dffg +_fbgdg ];};if _dffg > 0&&_fbgdg > 0{_cgfec :=_edee .loadFromSegments (_acabf ,_daga );if _cgfec !=nil {return nil ,_cgfec ;
};};return _edee ,nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_bc .PSProgram ;_eagbc *_bc .PSExecutor ;_dedec []byte ;_gagab *_bcd .PdfObjectStream ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ccfba *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bcd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbbgc ,_abbc :=_bcd .GetNumbersAsFloat (objects );
if _abbc !=nil {return nil ,_abbc ;};return _ccfba .ColorFromFloats (_dbbgc );};func _gfgb (_adega *_bcd .PdfObjectDictionary )bool {for _ ,_cfdac :=range _adega .Keys (){if _ ,_bcebe :=_dcbf [_cfdac .String ()];_bcebe {return true ;};};return false ;};
func (_babf *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// ToPdfObject implements interface PdfModel.
func (_cf *PdfAction )ToPdfObject ()_bcd .PdfObject {_aag :=_cf ._fgae ;_fdb :=_aag .PdfObject .(*_bcd .PdfObjectDictionary );_fdb .Clear ();_fdb .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_fdb .SetIfNotNil ("\u0053",_cf .S );
_fdb .SetIfNotNil ("\u004e\u0065\u0078\u0074",_cf .Next );return _aag ;};func (_bfeee *LTV )getCRLs (_ecdbb []*_b .Certificate )([][]byte ,error ){_eddfb :=make ([][]byte ,0,len (_ecdbb ));for _ ,_fdfga :=range _ecdbb {for _ ,_dbef :=range _fdfga .CRLDistributionPoints {if _bfeee .CertClient .IsCA (_fdfga ){continue ;
};_gefecd ,_ccfda :=_bfeee .CRLClient .MakeRequest (_dbef ,_fdfga );if _ccfda !=nil {_aa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_ccfda );continue ;
};_eddfb =append (_eddfb ,_gefecd );};};return _eddfb ,nil ;};

// SetBorderWidth sets the style's border width.
func (_ccbb *PdfBorderStyle )SetBorderWidth (width float64 ){_ccbb .W =&width };

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_gfffb DefaultImageHandler )NewGrayImageFromGoImage (goimg _ga .Image )(*Image ,error ){_fcgg :=goimg .Bounds ();_daefc :=&Image {Width :int64 (_fcgg .Dx ()),Height :int64 (_fcgg .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _cbcbd :=goimg .(type ){case *_ga .Gray :if len (_cbcbd .Pix )!=_fcgg .Dx ()*_fcgg .Dy (){_cadcd ,_afdf :=_gac .GrayConverter .Convert (goimg );
if _afdf !=nil {return nil ,_afdf ;};_daefc .Data =_cadcd .Pix ();}else {_daefc .Data =_cbcbd .Pix ;};case *_ga .Gray16 :_daefc .BitsPerComponent =16;if len (_cbcbd .Pix )!=_fcgg .Dx ()*_fcgg .Dy ()*2{_abegc ,_cccbe :=_gac .Gray16Converter .Convert (goimg );
if _cccbe !=nil {return nil ,_cccbe ;};_daefc .Data =_abegc .Pix ();}else {_daefc .Data =_cbcbd .Pix ;};case _gac .Image :_ddfa :=_cbcbd .Base ();if _ddfa .ColorComponents ==1{_daefc .BitsPerComponent =int64 (_ddfa .BitsPerComponent );_daefc .Data =_ddfa .Data ;
return _daefc ,nil ;};_bgee ,_gddbb :=_gac .GrayConverter .Convert (goimg );if _gddbb !=nil {return nil ,_gddbb ;};_daefc .Data =_bgee .Pix ();default:_ggabg ,_adfe :=_gac .GrayConverter .Convert (goimg );if _adfe !=nil {return nil ,_adfe ;};_daefc .Data =_ggabg .Pix ();
};return _daefc ,nil ;};func _ecfea (_edcgg []byte )([]byte ,error ){_cebfe :=_a .New ();if _ ,_baab :=_ec .Copy (_cebfe ,_ge .NewReader (_edcgg ));_baab !=nil {return nil ,_baab ;};return _cebfe .Sum (nil ),nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cdcg *PdfPageResourcesColorspaces )ToPdfObject ()_bcd .PdfObject {_ecada :=_bcd .MakeDict ();for _ ,_befe :=range _cdcg .Names {_ecada .Set (_bcd .PdfObjectName (_befe ),_cdcg .Colorspaces [_befe ].ToPdfObject ());};if _cdcg ._aaded !=nil {_cdcg ._aaded .PdfObject =_ecada ;
return _cdcg ._aaded ;};return _ecada ;};func _abbd (_dbafa *PdfField )[]*PdfField {_cgaf :=[]*PdfField {_dbafa };for _ ,_caggc :=range _dbafa .Kids {_cgaf =append (_cgaf ,_abbd (_caggc )...);};return _cgaf ;};func (_ffeda *PdfReader )buildOutlineTree (_accea _bcd .PdfObject ,_gccfca *PdfOutlineTreeNode ,_dafef *PdfOutlineTreeNode ,_gadgb map[_bcd .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gadgb ==nil {_gadgb =map[_bcd .PdfObject ]struct{}{};
};_gadgb [_accea ]=struct{}{};_aefdd ,_agcbc :=_accea .(*_bcd .PdfIndirectObject );if !_agcbc {return nil ,nil ,_f .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_accea );
};_adbd ,_ccgbc :=_aefdd .PdfObject .(*_bcd .PdfObjectDictionary );if !_ccgbc {return nil ,nil ,_fcf .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_aa .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_adbd ,_aefdd ,_aefdd );
if _dbbdg :=_adbd .Get ("\u0054\u0069\u0074l\u0065");_dbbdg !=nil {_cgef ,_fggg :=_ffeda .newPdfOutlineItemFromIndirectObject (_aefdd );if _fggg !=nil {return nil ,nil ,_fggg ;};_cgef .Parent =_gccfca ;_cgef .Prev =_dafef ;_ffcff :=_bcd .ResolveReference (_adbd .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_cebcf :=_gadgb [_ffcff ];_ffcff !=nil &&_ffcff !=_aefdd &&!_cebcf {if !_bcd .IsNullObject (_ffcff ){_bgaf ,_cdbff ,_abdba :=_ffeda .buildOutlineTree (_ffcff ,&_cgef .PdfOutlineTreeNode ,nil ,_gadgb );if _abdba !=nil {_aa .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_abdba );
}else {_cgef .First =_bgaf ;_cgef .Last =_cdbff ;};};};_ccff :=_bcd .ResolveReference (_adbd .Get ("\u004e\u0065\u0078\u0074"));if _ ,_dbafc :=_gadgb [_ccff ];_ccff !=nil &&_ccff !=_aefdd &&!_dbafc {if !_bcd .IsNullObject (_ccff ){_adfbg ,_efbdc ,_debb :=_ffeda .buildOutlineTree (_ccff ,_gccfca ,&_cgef .PdfOutlineTreeNode ,_gadgb );
if _debb !=nil {_aa .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_debb );
}else {_cgef .Next =_adfbg ;return &_cgef .PdfOutlineTreeNode ,_efbdc ,nil ;};};};return &_cgef .PdfOutlineTreeNode ,&_cgef .PdfOutlineTreeNode ,nil ;};_fgda ,_gcgbb :=_adffc (_aefdd );if _gcgbb !=nil {return nil ,nil ,_gcgbb ;};_fgda .Parent =_gccfca ;
if _bgaae :=_adbd .Get ("\u0046\u0069\u0072s\u0074");_bgaae !=nil {_bgaae =_bcd .ResolveReference (_bgaae );if _ ,_cbfff :=_gadgb [_bgaae ];_bgaae !=nil &&_bgaae !=_aefdd &&!_cbfff {_ecdge :=_bcd .TraceToDirectObject (_bgaae );if _ ,_bfffb :=_ecdge .(*_bcd .PdfObjectNull );
!_bfffb &&_ecdge !=nil {_bbde ,_gafda ,_gdbb :=_ffeda .buildOutlineTree (_bgaae ,&_fgda .PdfOutlineTreeNode ,nil ,_gadgb );if _gdbb !=nil {_aa .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_gdbb );
}else {_fgda .First =_bbde ;_fgda .Last =_gafda ;};};};};return &_fgda .PdfOutlineTreeNode ,&_fgda .PdfOutlineTreeNode ,nil ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_gffef *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _gffef ._dabac .(*PdfShadingPattern );};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _bcd .PdfObjectName ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_bgbba *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _bcd .GetNumberAsFloat (_bgbba .XHeight );};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_aceagb *_bcd .PdfParser ;_ddbad _bcd .PdfObject ;_eaac *_bcd .PdfIndirectObject ;_cgbec *_bcd .PdfObjectDictionary ;_aaffe []*_bcd .PdfIndirectObject ;PageList []*PdfPage ;_ccga int ;_babac *_bcd .PdfObjectDictionary ;_dfcadg *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_gdba *Permissions ;_edge map[*PdfReader ]*PdfReader ;_dbacf []*PdfReader ;_gaafcb *modelManager ;_aacc bool ;_ecgb map[_bcd .PdfObject ]struct{};_accdg _ec .ReadSeeker ;_gefca string ;_eddgg bool ;_fcbgb *ReaderOpts ;
_bbbcde bool ;};func (_degd *PdfReader )newPdfFieldFromIndirectObject (_cefdg *_bcd .PdfIndirectObject ,_affa *PdfField )(*PdfField ,error ){if _ceed ,_befdg :=_degd ._gaafcb .GetModelFromPrimitive (_cefdg ).(*PdfField );_befdg {return _ceed ,nil ;};_fgea ,_ggda :=_bcd .GetDict (_cefdg );
if !_ggda {return nil ,_f .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cgfgf :=NewPdfField ();_cgfgf ._ebddc =_cefdg ;_cgfgf ._ebddc .PdfObject =_fgea ;if _dfgcb ,_effa :=_bcd .GetName (_fgea .Get ("\u0046\u0054"));_effa {_cgfgf .FT =_dfgcb ;};if _affa !=nil {_cgfgf .Parent =_affa ;};_cgfgf .T ,_ =_fgea .Get ("\u0054").(*_bcd .PdfObjectString );
_cgfgf .TU ,_ =_fgea .Get ("\u0054\u0055").(*_bcd .PdfObjectString );_cgfgf .TM ,_ =_fgea .Get ("\u0054\u004d").(*_bcd .PdfObjectString );_cgfgf .Ff ,_ =_fgea .Get ("\u0046\u0066").(*_bcd .PdfObjectInteger );_cgfgf .V =_fgea .Get ("\u0056");_cgfgf .DV =_fgea .Get ("\u0044\u0056");
_cgfgf .AA =_fgea .Get ("\u0041\u0041");if DA :=_fgea .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_bcd .GetString (DA );_cgfgf .VariableText =&VariableText {DA :DA };Q ,_ :=_fgea .Get ("\u0051").(*_bcd .PdfObjectInteger );DS ,_ :=_fgea .Get ("\u0044\u0053").(*_bcd .PdfObjectString );
RV :=_fgea .Get ("\u0052\u0056");_cgfgf .VariableText .Q =Q ;_cgfgf .VariableText .DS =DS ;_cgfgf .VariableText .RV =RV ;};_dbfdg :=_cgfgf .FT ;if _dbfdg ==nil &&_affa !=nil {_dbfdg =_affa .FT ;};if _dbfdg !=nil {switch *_dbfdg {case "\u0054\u0078":_afgd ,_dafdf :=_cagc (_fgea );
if _dafdf !=nil {return nil ,_dafdf ;};_afgd .PdfField =_cgfgf ;_cgfgf ._bacb =_afgd ;case "\u0043\u0068":_gbfgb ,_eebbd :=_eddc (_fgea );if _eebbd !=nil {return nil ,_eebbd ;};_gbfgb .PdfField =_cgfgf ;_cgfgf ._bacb =_gbfgb ;case "\u0042\u0074\u006e":_ceedg ,_egdc :=_bdgac (_fgea );
if _egdc !=nil {return nil ,_egdc ;};_ceedg .PdfField =_cgfgf ;_cgfgf ._bacb =_ceedg ;case "\u0053\u0069\u0067":_fbcd ,_ddee :=_degd .newPdfFieldSignatureFromDict (_fgea );if _ddee !=nil {return nil ,_ddee ;};_fbcd .PdfField =_cgfgf ;_cgfgf ._bacb =_fbcd ;
default:_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_cgfgf .FT );return nil ,_fcf .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _ddbff ,_eedab :=_bcd .GetName (_fgea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_eedab {if *_ddbff =="\u0057\u0069\u0064\u0067\u0065\u0074"{_fbad ,_ceeec :=_degd .newPdfAnnotationFromIndirectObject (_cefdg );if _ceeec !=nil {return nil ,_ceeec ;
};_ggfb ,_bbac :=_fbad .GetContext ().(*PdfAnnotationWidget );if !_bbac {return nil ,_fcf .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_ggfb ._gge =_cgfgf ;_ggfb .Parent =_cgfgf ._ebddc ;
_cgfgf .Annotations =append (_cgfgf .Annotations ,_ggfb );return _cgfgf ,nil ;};};_gcfda :=true ;if _cccec ,_egbgc :=_bcd .GetArray (_fgea .Get ("\u004b\u0069\u0064\u0073"));_egbgc {_eaadc :=make ([]*_bcd .PdfIndirectObject ,0,_cccec .Len ());for _ ,_defac :=range _cccec .Elements (){_abfd ,_ebee :=_bcd .GetIndirect (_defac );
if !_ebee {_edbf ,_bbgg :=_bcd .GetStream (_defac );if _bbgg &&_edbf .PdfObjectDictionary !=nil {_fcff ,_deca :=_bcd .GetNameVal (_edbf .Get ("\u0054\u0079\u0070\u0065"));if _deca &&_fcff =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_aa .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_fcf .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_efce ,_cccfa :=_bcd .GetDict (_abfd );
if !_cccfa {return nil ,ErrTypeCheck ;};if _gcfda {_gcfda =!_gfgb (_efce );};_eaadc =append (_eaadc ,_abfd );};for _ ,_egfe :=range _eaadc {if _gcfda {_cafce ,_egce :=_degd .newPdfAnnotationFromIndirectObject (_egfe );if _egce !=nil {_aa .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_egce );
return nil ,_egce ;};_fadf ,_cffb :=_cafce ._caf .(*PdfAnnotationWidget );if !_cffb {return nil ,ErrTypeCheck ;};_fadf ._gge =_cgfgf ;_cgfgf .Annotations =append (_cgfgf .Annotations ,_fadf );}else {_gdfec ,_gfdca :=_degd .newPdfFieldFromIndirectObject (_egfe ,_cgfgf );
if _gfdca !=nil {_aa .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_gfdca );return nil ,_gfdca ;};_cgfgf .Kids =append (_cgfgf .Kids ,_gdfec );
};};};return _cgfgf ,nil ;};func (_bdebg *LTV )generateVRIKey (_bdbaf *PdfSignature )(string ,error ){_cgdca ,_gfaeg :=_ecfea (_bdbaf .Contents .Bytes ());if _gfaeg !=nil {return "",_gfaeg ;};return _fef .ToUpper (_dg .EncodeToString (_cgdca )),nil ;};


// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_ccbfa *PdfFieldButton )IsCheckbox ()bool {return _ccbfa .GetType ()==ButtonTypeCheckbox };func _feed (_cfad _bcd .PdfObject )(*PdfBorderStyle ,error ){_gba :=&PdfBorderStyle {};_gba ._cgeg =_cfad ;var _dcbc *_bcd .PdfObjectDictionary ;_cfad =_bcd .TraceToDirectObject (_cfad );
_dcbc ,_afcb :=_cfad .(*_bcd .PdfObjectDictionary );if !_afcb {return nil ,_fcf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _dbce :=_dcbc .Get ("\u0054\u0079\u0070\u0065");_dbce !=nil {_gfbd ,_aaf :=_dbce .(*_bcd .PdfObjectName );
if !_aaf {_aa .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_dbce );
}else {if *_gfbd !="\u0042\u006f\u0072\u0064\u0065\u0072"{_aa .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_gfbd );};};};if _feebb :=_dcbc .Get ("\u0057");
_feebb !=nil {_dfed ,_gefee :=_bcd .GetNumberAsFloat (_feebb );if _gefee !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_gefee );return nil ,_gefee ;};_gba .W =&_dfed ;
};if _aabdc :=_dcbc .Get ("\u0053");_aabdc !=nil {_ecdf ,_dbda :=_aabdc .(*_bcd .PdfObjectName );if !_dbda {return nil ,_fcf .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _cefe BorderStyle ;switch *_ecdf {case "\u0053":_cefe =BorderStyleSolid ;case "\u0044":_cefe =BorderStyleDashed ;case "\u0042":_cefe =BorderStyleBeveled ;case "\u0049":_cefe =BorderStyleInset ;case "\u0055":_cefe =BorderStyleUnderline ;default:_aa .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_ecdf );
return nil ,_fcf .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_gba .S =&_cefe ;};if _gdc :=_dcbc .Get ("\u0044");_gdc !=nil {_ggbb ,_dff :=_gdc .(*_bcd .PdfObjectArray );
if !_dff {_aa .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_gdc );return nil ,_fcf .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_cfgc ,_fdce :=_ggbb .ToIntegerArray ();if _fdce !=nil {_aa .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_fdce );
return nil ,_fdce ;};_gba .D =&_cfgc ;};return _gba ,nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;
);

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_geggd int ,_ecegge *PdfPage )error ;func (_ebgbc *PdfWriter )writeDocumentVersion (){if _ebgbc ._dbcbd {_ebgbc .writeString ("\u000a");}else {_ebgbc .writeString (_f .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_ebgbc ._cecgb .Major ,_ebgbc ._cecgb .Minor ));
_ebgbc .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};func (_bgdeb *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _bgdeb ._agda };

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func _deee (_deab _bcd .PdfObject )(*PdfColorspaceICCBased ,error ){_gfffa :=&PdfColorspaceICCBased {};if _dgecc ,_gdea :=_deab .(*_bcd .PdfIndirectObject );_gdea {_gfffa ._fead =_dgecc ;};_deab =_bcd .TraceToDirectObject (_deab );
_adgdf ,_cegf :=_deab .(*_bcd .PdfObjectArray );if !_cegf {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _adgdf .Len ()!=2{return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_deab =_bcd .TraceToDirectObject (_adgdf .Get (0));_ebec ,_cegf :=_deab .(*_bcd .PdfObjectName );if !_cegf {return nil ,_f .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ebec !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_f .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_deab =_adgdf .Get (1);
_bfeb ,_cegf :=_bcd .GetStream (_deab );if !_cegf {_aa .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_deab );
return nil ,_f .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_fdefc :=_bfeb .PdfObjectDictionary ;_acge ,_cegf :=_fdefc .Get ("\u004e").(*_bcd .PdfObjectInteger );
if !_cegf {return nil ,_f .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_acge !=1&&*_acge !=3&&*_acge !=4{return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_gfffa .N =int (*_acge );if _agag :=_fdefc .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_agag !=nil {_gggaf ,_ffag :=NewPdfColorspaceFromPdfObject (_agag );if _ffag !=nil {return nil ,_ffag ;};_gfffa .Alternate =_gggaf ;};if _ddde :=_fdefc .Get ("\u0052\u0061\u006eg\u0065");
_ddde !=nil {_ddde =_bcd .TraceToDirectObject (_ddde );_gadf ,_aadcb :=_ddde .(*_bcd .PdfObjectArray );if !_aadcb {return nil ,_f .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _gadf .Len ()!=2*_gfffa .N {return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_egcdf ,_dbdab :=_gadf .GetAsFloat64Slice ();if _dbdab !=nil {return nil ,_dbdab ;};_gfffa .Range =_egcdf ;}else {_gfffa .Range =make ([]float64 ,2*_gfffa .N );for _ccgd :=0;_ccgd < _gfffa .N ;_ccgd ++{_gfffa .Range [2*_ccgd ]=0.0;_gfffa .Range [2*_ccgd +1]=1.0;
};};if _cfgcf :=_fdefc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cfgcf !=nil {_afg ,_adeb :=_cfgcf .(*_bcd .PdfObjectStream );if !_adeb {return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_gfffa .Metadata =_afg ;};_faaec ,_cbgge :=_bcd .DecodeStream (_bfeb );if _cbgge !=nil {return nil ,_cbgge ;};_gfffa .Data =_faaec ;_gfffa ._bdbce =_bfeb ;return _gfffa ,nil ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_agdbg *Image )GetParamsDict ()*_bcd .PdfObjectDictionary {_ccdaf :=_bcd .MakeDict ();_ccdaf .Set ("\u0057\u0069\u0064t\u0068",_bcd .MakeInteger (_agdbg .Width ));_ccdaf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bcd .MakeInteger (_agdbg .Height ));
_ccdaf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bcd .MakeInteger (int64 (_agdbg .ColorComponents )));_ccdaf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcd .MakeInteger (_agdbg .BitsPerComponent ));
return _ccdaf ;};func _aafgg ()_fb .Time {_dgecg .Lock ();defer _dgecg .Unlock ();return _bcgeb };

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_gebb *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bcd .PdfObject {_gdbe :=_bcd .MakeDict ();if _gebb .Subtype !=nil {_gdbe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gebb .Subtype );};_gdbe .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_gebb .Colorants );
_gdbe .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_gebb .Process );_gdbe .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_gebb .MixingHints );if _gebb ._fbgad !=nil {_gebb ._fbgad .PdfObject =_gdbe ;return _gebb ._fbgad ;
};return _gdbe ;};

// SetContext sets the sub annotation (context).
func (_gbd *PdfAnnotation )SetContext (ctx PdfModel ){_gbd ._caf =ctx };

// M returns the value of the magenta component of the color.
func (_eddd *PdfColorDeviceCMYK )M ()float64 {return _eddd [1]};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_ggec *PdfField )SetContext (ctx PdfModel ){_ggec ._bacb =ctx };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_gfdgf *XObjectImage )ToImage ()(*Image ,error ){_ebege :=&Image {};if _gfdgf .Height ==nil {return nil ,_fcf .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_ebege .Height =*_gfdgf .Height ;if _gfdgf .Width ==nil {return nil ,_fcf .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ebege .Width =*_gfdgf .Width ;if _gfdgf .BitsPerComponent ==nil {switch _gfdgf .Filter .(type ){case *_bcd .CCITTFaxEncoder ,*_bcd .JBIG2Encoder :_ebege .BitsPerComponent =1;
case *_bcd .LZWEncoder ,*_bcd .RunLengthEncoder :_ebege .BitsPerComponent =8;default:return nil ,_fcf .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_ebege .BitsPerComponent =*_gfdgf .BitsPerComponent ;};_ebege .ColorComponents =_gfdgf .ColorSpace .GetNumComponents ();_gfdgf ._baedd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bcd .MakeInteger (int64 (_ebege .ColorComponents )));
_acged ,_gafdg :=_bcd .DecodeStream (_gfdgf ._baedd );if _gafdg !=nil {return nil ,_gafdg ;};_ebege .Data =_acged ;if _gfdgf .Decode !=nil {_bacbe ,_dced :=_gfdgf .Decode .(*_bcd .PdfObjectArray );if !_dced {_aa .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_fcf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_ceggc ,_abccf :=_bacbe .ToFloat64Array ();if _abccf !=nil {return nil ,_abccf ;};switch _gfdgf .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_edeee :=_gfdgf .ColorSpace .DecodeArray ();
if _edeee [0]==_ceggc [0]&&_edeee [1]==_ceggc [1]&&_edeee [2]==_ceggc [2]&&_edeee [3]==_ceggc [3]{_ebege ._fbccc =_ceggc ;};default:_ebege ._fbccc =_ceggc ;};};return _ebege ,nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_dfec *PdfPageResources )SetXObjectFormByName (keyName _bcd .PdfObjectName ,xform *XObjectForm )error {_gcegfe :=xform .ToPdfObject ().(*_bcd .PdfObjectStream );_bbbe :=_dfec .SetXObjectByName (keyName ,_gcegfe );return _bbbe ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_daed :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_daed ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bafeg *PdfColorspaceCalRGB )ToPdfObject ()_bcd .PdfObject {_fabb :=&_bcd .PdfObjectArray {};_fabb .Append (_bcd .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_cgdf :=_bcd .MakeDict ();if _bafeg .WhitePoint !=nil {_ffgfe :=_bcd .MakeArray (_bcd .MakeFloat (_bafeg .WhitePoint [0]),_bcd .MakeFloat (_bafeg .WhitePoint [1]),_bcd .MakeFloat (_bafeg .WhitePoint [2]));
_cgdf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ffgfe );}else {_aa .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _bafeg .BlackPoint !=nil {_bdgc :=_bcd .MakeArray (_bcd .MakeFloat (_bafeg .BlackPoint [0]),_bcd .MakeFloat (_bafeg .BlackPoint [1]),_bcd .MakeFloat (_bafeg .BlackPoint [2]));_cgdf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bdgc );
};if _bafeg .Gamma !=nil {_fbfd :=_bcd .MakeArray (_bcd .MakeFloat (_bafeg .Gamma [0]),_bcd .MakeFloat (_bafeg .Gamma [1]),_bcd .MakeFloat (_bafeg .Gamma [2]));_cgdf .Set ("\u0047\u0061\u006dm\u0061",_fbfd );};if _bafeg .Matrix !=nil {_ceacg :=_bcd .MakeArray (_bcd .MakeFloat (_bafeg .Matrix [0]),_bcd .MakeFloat (_bafeg .Matrix [1]),_bcd .MakeFloat (_bafeg .Matrix [2]),_bcd .MakeFloat (_bafeg .Matrix [3]),_bcd .MakeFloat (_bafeg .Matrix [4]),_bcd .MakeFloat (_bafeg .Matrix [5]),_bcd .MakeFloat (_bafeg .Matrix [6]),_bcd .MakeFloat (_bafeg .Matrix [7]),_bcd .MakeFloat (_bafeg .Matrix [8]));
_cgdf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ceacg );};_fabb .Append (_cgdf );if _bafeg ._abag !=nil {_bafeg ._abag .PdfObject =_fabb ;return _bafeg ._abag ;};return _fabb ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_cbfefc :=&PdfShadingPatternType2 {};_cbfefc .Matrix =_bcd .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_cbfefc .PdfPattern =&PdfPattern {};_cbfefc .PdfPattern .PatternType =int64 (*_bcd .MakeInteger (2));
_cbfefc .PdfPattern ._dabac =_cbfefc ;_cbfefc .PdfPattern ._bdfe =_bcd .MakeIndirectObject (_bcd .MakeDict ());return _cbfefc ;};func (_gefc *PdfReader )newPdfAnnotationPolyLineFromDict (_deb *_bcd .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_ffc :=PdfAnnotationPolyLine {};
_fgaa ,_eec :=_gefc .newPdfAnnotationMarkupFromDict (_deb );if _eec !=nil {return nil ,_eec ;};_ffc .PdfAnnotationMarkup =_fgaa ;_ffc .Vertices =_deb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_ffc .LE =_deb .Get ("\u004c\u0045");_ffc .BS =_deb .Get ("\u0042\u0053");
_ffc .IC =_deb .Get ("\u0049\u0043");_ffc .BE =_deb .Get ("\u0042\u0045");_ffc .IT =_deb .Get ("\u0049\u0054");_ffc .Measure =_deb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_ffc ,nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bcd .PdfObject ;Name _bcd .PdfObject ;State _bcd .PdfObject ;StateModel _bcd .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gegfc *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_gegfc .Base .GetNumComponents ();_fbdd :=int (vals [0])*N ;
if _fbdd < 0||(_fbdd +N -1)>=len (_gegfc ._fbga ){_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fbdd );return nil ,ErrColorOutOfRange ;};_abdef :=_gegfc ._fbga [_fbdd :_fbdd +N ];
var _dbbda []float64 ;for _ ,_ccedg :=range _abdef {_dbbda =append (_dbbda ,float64 (_ccedg )/255.0);};_bbbfg ,_gbbc :=_gegfc .Base .ColorFromFloats (_dbbda );if _gbbc !=nil {return nil ,_gbbc ;};return _bbbfg ,nil ;};

// GetAction returns the PDF action for the annotation link.
func (_cafb *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _cafb ._ded !=nil {return _cafb ._ded ,nil ;};if _cafb .A ==nil {return nil ,nil ;};if _cafb ._cdd ==nil {return nil ,nil ;};_dac ,_bcc :=_cafb ._cdd .loadAction (_cafb .A );if _bcc !=nil {return nil ,_bcc ;
};_cafb ._ded =_dac ;return _cafb ._ded ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_bae *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cede :=func (_egeg float64 )float64 {if _egeg >=6.0/29{return _egeg *_egeg *_egeg ;};return 108.0/841*(_egeg -4.0/29.0);};_dfdg ,_eefg :=color .(*PdfColorLab );if !_eefg {_aa .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_dfdg .L ();AStar :=_dfdg .A ();BStar :=_dfdg .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_bae .WhitePoint [0]*_cede (L );Y :=_bae .WhitePoint [1]*_cede (M );Z :=_bae .WhitePoint [2]*_cede (N );_gfgdg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dabed :=-0.969256*X +1.875992*Y +0.041556*Z ;_dcfgc :=0.055648*X +-0.204043*Y +1.057311*Z ;_gfgdg =_cc .Min (_cc .Max (_gfgdg ,0),1.0);
_dabed =_cc .Min (_cc .Max (_dabed ,0),1.0);_dcfgc =_cc .Min (_cc .Max (_dcfgc ,0),1.0);return NewPdfColorDeviceRGB (_gfgdg ,_dabed ,_dcfgc ),nil ;};func (_eegd fontCommon )coreString ()string {_aafe :="";if _eegd ._agda !=nil {_aafe =_eegd ._agda .String ();
};return _f .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_eegd ._ffaca ,_eegd ._gagg ,_eegd ._acacg ,_eegd ._aadcbf ,_eegd ._cdgf !=nil ,_eegd .fontFlags (),_aafe );
};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_bdac *PdfFieldChoice )ToPdfObject ()_bcd .PdfObject {_bdac .PdfField .ToPdfObject ();_gffe :=_bdac ._ebddc ;_cgbb :=_gffe .PdfObject .(*_bcd .PdfObjectDictionary );_cgbb .Set ("\u0046\u0054",_bcd .MakeName ("\u0043\u0068"));if _bdac .Opt !=nil {_cgbb .Set ("\u004f\u0070\u0074",_bdac .Opt );
};if _bdac .TI !=nil {_cgbb .Set ("\u0054\u0049",_bdac .TI );};if _bdac .I !=nil {_cgbb .Set ("\u0049",_bdac .I );};return _gffe ;};func (_efaab *PdfReader )traverseObjectData (_gcfaea _bcd .PdfObject )error {return _bcd .ResolveReferencesDeep (_gcfaea ,_efaab ._ecgb );
};func (_fcbf *Image )samplesAddPadding (_dcfdb []uint32 )[]uint32 {_ffbc :=_gac .BytesPerLine (int (_fcbf .Width ),int (_fcbf .BitsPerComponent ),_fcbf .ColorComponents )*(8/int (_fcbf .BitsPerComponent ));_cceb :=_ffbc *int (_fcbf .Height );if len (_dcfdb )==_cceb {return _dcfdb ;
};_befde :=make ([]uint32 ,_cceb );_bgecc :=int (_fcbf .Width )*_fcbf .ColorComponents ;for _eaab :=0;_eaab < int (_fcbf .Height );_eaab ++{_efadc :=_eaab *int (_fcbf .Width );_fbef :=_eaab *_ffbc ;for _adcgc :=0;_adcgc < _bgecc ;_adcgc ++{_befde [_fbef +_adcgc ]=_dcfdb [_efadc +_adcgc ];
};};return _befde ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_gabg *PdfPageResources )HasColorspaceByName (keyName _bcd .PdfObjectName )bool {_bfgc ,_ggcac :=_gabg .GetColorspaces ();if _ggcac !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ggcac );
return false ;};if _bfgc ==nil {return false ;};_ ,_efbda :=_bfgc .Colorspaces [string (keyName )];return _efbda ;};func _afga ()*modelManager {_gcegf :=modelManager {};_gcegf ._fbaag =map[PdfModel ]_bcd .PdfObject {};_gcegf ._begdf =map[_bcd .PdfObject ]PdfModel {};
return &_gcegf ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fcega *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_aa .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_aaegb :=[]float64 {0.0};if _fcega .C0 !=nil {_aaegb =_fcega .C0 ;};_eeee :=[]float64 {1.0};if _fcega .C1 !=nil {_eeee =_fcega .C1 ;};var _gfag []float64 ;for _edgba :=0;_edgba < len (_aaegb );_edgba ++{_cgge :=_aaegb [_edgba ]+_cc .Pow (x [0],_fcega .N )*(_eeee [_edgba ]-_aaegb [_edgba ]);
_gfag =append (_gfag ,_cgge );};return _gfag ,nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_ddfg *PdfOutputIntent )ToPdfObject ()_bcd .PdfObject {if _ddfg ._dcggb ==nil {_ddfg ._dcggb =_bcd .MakeDict ();};_afgag :=_ddfg ._dcggb ;if _ddfg .Type !=""{_afgag .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName (_ddfg .Type ));};_afgag .Set ("\u0053",_bcd .MakeName (_ddfg .S .String ()));
if _ddfg .OutputCondition !=""{_afgag .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_bcd .MakeString (_ddfg .OutputCondition ));};_afgag .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_bcd .MakeString (_ddfg .OutputConditionIdentifier ));
_afgag .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_bcd .MakeString (_ddfg .RegistryName ));if _ddfg .Info !=""{_afgag .Set ("\u0049\u006e\u0066\u006f",_bcd .MakeString (_ddfg .Info ));};if len (_ddfg .DestOutputProfile )!=0{_fbbeb ,_cdegba :=_bcd .MakeStream (_ddfg .DestOutputProfile ,_bcd .NewFlateEncoder ());
if _cdegba !=nil {_aa .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cdegba );
};_fbbeb .PdfObjectDictionary .Set ("\u004e",_bcd .MakeInteger (int64 (_ddfg .ColorComponents )));_gdff :=make ([]float64 ,_ddfg .ColorComponents *2);for _afdff :=0;_afdff < _ddfg .ColorComponents *2;_afdff ++{_aceeg :=0.0;if _afdff %2!=0{_aceeg =1.0;};
_gdff [_afdff ]=_aceeg ;};_fbbeb .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_bcd .MakeArrayFromFloats (_gdff ));_afgag .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_fbbeb );};return _afgag ;
};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_fbff *LTV )EnableChain (chain []*_b .Certificate )error {return _fbff .enable (nil ,chain ,"")};func (_fcaf *PdfReader )newPdfSignatureFromIndirect (_ffgef *_bcd .PdfIndirectObject )(*PdfSignature ,error ){_ebbcfd ,_abbeg :=_ffgef .PdfObject .(*_bcd .PdfObjectDictionary );
if !_abbeg {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _cdce ,_fgfag :=_fcaf ._gaafcb .GetModelFromPrimitive (_ffgef ).(*PdfSignature );_fgfag {return _cdce ,nil ;};_adceb :=&PdfSignature {};_adceb ._ebafa =_ffgef ;_adceb .Type ,_ =_bcd .GetName (_ebbcfd .Get ("\u0054\u0079\u0070\u0065"));
_adceb .Filter ,_abbeg =_bcd .GetName (_ebbcfd .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_abbeg {_aa .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_adceb .SubFilter ,_ =_bcd .GetName (_ebbcfd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_adceb .Contents ,_abbeg =_bcd .GetString (_ebbcfd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_abbeg {_aa .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _babgb ,_edgaf :=_bcd .GetArray (_ebbcfd .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_edgaf {_adceb .Reference =_bcd .MakeArray ();for _ ,_gcccda :=range _babgb .Elements (){_baddc ,_gfgec :=_bcd .GetDict (_gcccda );
if !_gfgec {_aa .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_affe ,_fbcge :=_fcaf .newPdfSignatureReferenceFromDict (_baddc );if _fbcge !=nil {return nil ,_fbcge ;};_adceb .Reference .Append (_affe .ToPdfObject ());};};_adceb .Cert =_ebbcfd .Get ("\u0043\u0065\u0072\u0074");_adceb .ByteRange ,_ =_bcd .GetArray (_ebbcfd .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_adceb .Changes ,_ =_bcd .GetArray (_ebbcfd .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_adceb .Name ,_ =_bcd .GetString (_ebbcfd .Get ("\u004e\u0061\u006d\u0065"));_adceb .M ,_ =_bcd .GetString (_ebbcfd .Get ("\u004d"));_adceb .Location ,_ =_bcd .GetString (_ebbcfd .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_adceb .Reason ,_ =_bcd .GetString (_ebbcfd .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_adceb .ContactInfo ,_ =_bcd .GetString (_ebbcfd .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_adceb .R ,_ =_bcd .GetInt (_ebbcfd .Get ("\u0052"));
_adceb .V ,_ =_bcd .GetInt (_ebbcfd .Get ("\u0056"));_adceb .PropBuild ,_ =_bcd .GetDict (_ebbcfd .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_adceb .PropAuthTime ,_ =_bcd .GetInt (_ebbcfd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_adceb .PropAuthType ,_ =_bcd .GetName (_ebbcfd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_fcaf ._gaafcb .Register (_ffgef ,_adceb );return _adceb ,nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_aebf *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _aebf .RunesToCharcodeBytes ([]rune (str ));};func (_gcbga *pdfFontType0 )subsetRegistered ()error {_eecagg ,_bbcga :=_gcbga .DescendantFont ._fbcb .(*pdfCIDFontType2 );if !_bbcga {_aa .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_gcbga .DescendantFont );
return nil ;};if _eecagg ==nil {return nil ;};if _eecagg ._agda ==nil {_aa .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _gcbga ._ggdfd ==nil {_aa .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_bcgd ,_bbcga :=_bcd .GetStream (_eecagg ._agda .FontFile2 );if !_bbcga {_aa .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _fcf .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cfgcff ,_bdaac :=_bcd .DecodeStream (_bcgd );if _bdaac !=nil {_aa .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bdaac );
return _bdaac ;};_gaaac ,_bdaac :=_fee .Parse (_ge .NewReader (_cfgcff ));if _bdaac !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_bcgd .Stream ));
return _bdaac ;};var _caedf []rune ;var _ccca *_fee .Font ;switch _ccda :=_gcbga ._ggdfd .(type ){case *_af .TrueTypeFontEncoder :_caedf =_ccda .RegisteredRunes ();_ccca ,_bdaac =_gaaac .SubsetKeepRunes (_caedf );if _bdaac !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdaac );
return _bdaac ;};_ccda .SubsetRegistered ();case *_af .IdentityEncoder :_caedf =_ccda .RegisteredRunes ();_egfee :=make ([]_fee .GlyphIndex ,len (_caedf ));for _facf ,_dedef :=range _caedf {_egfee [_facf ]=_fee .GlyphIndex (_dedef );};_ccca ,_bdaac =_gaaac .SubsetKeepIndices (_egfee );
if _bdaac !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdaac );return _bdaac ;};case _af .SimpleEncoder :_acfcf :=_ccda .Charcodes ();for _ ,_acee :=range _acfcf {_ddcg ,_bafa :=_ccda .CharcodeToRune (_acee );if !_bafa {_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_acee );
continue ;};_caedf =append (_caedf ,_ddcg );};default:return _f .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_gcbga ._ggdfd );
};var _bcge _ge .Buffer ;_bdaac =_ccca .Write (&_bcge );if _bdaac !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdaac );return _bdaac ;};if _gcbga ._fbfb !=nil {_ggea :=make (map[_dca .CharCode ]rune ,len (_caedf ));for _ ,_caggga :=range _caedf {_dbegd ,_fbbe :=_gcbga ._ggdfd .RuneToCharcode (_caggga );
if !_fbbe {continue ;};_ggea [_dca .CharCode (_dbegd )]=_caggga ;};_gcbga ._fbfb =_dca .NewToUnicodeCMap (_ggea );};_bcgd ,_bdaac =_bcd .MakeStream (_bcge .Bytes (),_bcd .NewFlateEncoder ());if _bdaac !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdaac );
return _bdaac ;};_bcgd .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bcd .MakeInteger (int64 (_bcge .Len ())));if _cagdg ,_fbae :=_bcd .GetStream (_eecagg ._agda .FontFile2 );_fbae {*_cagdg =*_bcgd ;}else {_eecagg ._agda .FontFile2 =_bcgd ;};_ggdg :=_fedae ();
if len (_gcbga ._gagg )> 0{_gcbga ._gagg =_cfcb (_gcbga ._gagg ,_ggdg );};if len (_eecagg ._gagg )> 0{_eecagg ._gagg =_cfcb (_eecagg ._gagg ,_ggdg );};if len (_gcbga ._acacg )> 0{_gcbga ._acacg =_cfcb (_gcbga ._acacg ,_ggdg );};if _eecagg ._agda !=nil {_gfbf ,_gfbbc :=_bcd .GetName (_eecagg ._agda .FontName );
if _gfbbc &&len (_gfbf .String ())> 0{_agade :=_cfcb (_gfbf .String (),_ggdg );_eecagg ._agda .FontName =_bcd .MakeName (_agade );};};return nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_cbefg *PdfAcroForm )GetContainingPdfObject ()_bcd .PdfObject {return _cbefg ._cbae };

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcd .PdfObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_feafg pdfFontType0 )GetRuneMetrics (r rune )(_aab .CharMetrics ,bool ){if _feafg .DescendantFont ==nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_feafg );
return _aab .CharMetrics {},false ;};return _feafg .DescendantFont .GetRuneMetrics (r );};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_geee *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _geee .Alternate ==nil {_aa .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _geee .N ==1{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_bcaf :=NewPdfColorspaceDeviceGray ();return _bcaf .ImageToRGB (img );}else if _geee .N ==3{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _geee .N ==4{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_cggf :=NewPdfColorspaceDeviceCMYK ();return _cggf .ImageToRGB (img );}else {return img ,_fcf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_aa .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_geee );
_edgab ,_gcca :=_geee .Alternate .ImageToRGB (img );_aa .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_aa .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_edgab );
return _edgab ,_gcca ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_bcd .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_bcd .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_ebaf :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_ebaf .N =N ;return _ebaf ,nil ;};const (_dcebc =0x00001;_feca =0x00002;_fdae =0x00004;_cfcea =0x00008;_aaedd =0x00020;_cefed =0x00040;_cebfd =0x10000;_gceab =0x20000;_dbcbc =0x40000;);

// UpdatePage updates the `page` in the new revision if it has changed.
func (_dbbb *PdfAppender )UpdatePage (page *PdfPage ){_dbbb .updateObjectsDeep (page .ToPdfObject (),nil )};func (_dcca *PdfAppender )mergeResources (_bebe ,_ecea _bcd .PdfObject ,_cafc map[_bcd .PdfObjectName ]_bcd .PdfObjectName )_bcd .PdfObject {if _ecea ==nil &&_bebe ==nil {return nil ;
};if _ecea ==nil {return _bebe ;};_acfg ,_dabe :=_bcd .GetDict (_ecea );if !_dabe {return _bebe ;};if _bebe ==nil {_efeb :=_bcd .MakeDict ();_efeb .Merge (_acfg );return _ecea ;};_gacd ,_dabe :=_bcd .GetDict (_bebe );if !_dabe {_aa .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_gacd =_bcd .MakeDict ();};for _ ,_gacgda :=range _acfg .Keys (){if _gbgb ,_cccf :=_cafc [_gacgda ];_cccf {_gacd .Set (_gbgb ,_acfg .Get (_gacgda ));}else {_gacd .Set (_gacgda ,_acfg .Get (_gacgda ));};};return _gacd ;};

// SetContext sets the sub action (context).
func (_db *PdfAction )SetContext (ctx PdfModel ){_db ._gc =ctx };

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_faag *PdfFont )GetCharMetrics (code _af .CharCode )(CharMetrics ,bool ){var _caed _aab .CharMetrics ;switch _gfeag :=_faag ._fbcb .(type ){case *pdfFontSimple :if _efcaa ,_acgb :=_gfeag .GetCharMetrics (code );_acgb {return _efcaa ,_acgb ;};case *pdfFontType0 :if _cebdg ,_bdaed :=_gfeag .GetCharMetrics (code );
_bdaed {return _cebdg ,_bdaed ;};case *pdfCIDFontType0 :if _aegg ,_aafc :=_gfeag .GetCharMetrics (code );_aafc {return _aegg ,_aafc ;};case *pdfCIDFontType2 :if _egfg ,_eefgg :=_gfeag .GetCharMetrics (code );_eefgg {return _egfg ,_eefgg ;};case *pdfFontType3 :if _dbgb ,_abad :=_gfeag .GetCharMetrics (code );
_abad {return _dbgb ,_abad ;};default:_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_faag ._fbcb );
return _caed ,false ;};if _cdgg ,_dfba :=_faag .GetFontDescriptor ();_dfba ==nil &&_cdgg !=nil {return _aab .CharMetrics {Wx :_cdgg ._afae },true ;};_aa .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_faag );
return _caed ,false ;};

// WriteToFile writes the output PDF to file.
func (_acdba *PdfWriter )WriteToFile (outputFilePath string )error {_efaac ,_gaab :=_gae .Create (outputFilePath );if _gaab !=nil {return _gaab ;};defer _efaac .Close ();return _acdba .Write (_efaac );};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_gcadc :=appender .Reader .DSS ;if _gcadc ==nil {_gcadc =NewDSS ();};if _badg :=_gcadc .generateHashMaps ();_badg !=nil {return nil ,_badg ;};return &LTV {CertClient :_ed .NewCertClient (),OCSPClient :_ed .NewOCSPClient (),CRLClient :_ed .NewCRLClient (),SkipExisting :true ,_dadd :appender ,_fabg :_gcadc },nil ;
};func _gecfe (_cbggb StdFontName )(pdfFontSimple ,error ){_ccfg ,_gggb :=_aab .NewStdFontByName (_cbggb );if !_gggb {return pdfFontSimple {},ErrFontNotSupported ;};_aacf :=_ffbdb (_ccfg );return _aacf ,nil ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_aceff *PdfPage )Size ()(float64 ,float64 ,error ){_bgbfec ,_adged :=_aceff .GetMediaBox ();if _adged !=nil {return 0,0,_adged ;};_bfgec ,_egdff :=_bgbfec .Width (),_bgbfec .Height ();_gcdfa ,_adged :=_aceff .GetRotate ();if _adged !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_adged .Error ());
};if _ffabf :=_gcdfa ;_ffabf %360!=0&&_ffabf %90==0{if _defeb :=(360+_ffabf %360)%360;_defeb ==90||_defeb ==270{_bfgec ,_egdff =_egdff ,_bfgec ;};};return _bfgec ,_egdff ,nil ;};func _faaa (_eded _bcd .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_egdb :=NewPdfColorspaceSpecialSeparation ();
if _dfge ,_eebd :=_eded .(*_bcd .PdfIndirectObject );_eebd {_egdb ._eeae =_dfge ;};_eded =_bcd .TraceToDirectObject (_eded );_edadd ,_gagc :=_eded .(*_bcd .PdfObjectArray );if !_gagc {return nil ,_f .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _edadd .Len ()!=4{return nil ,_f .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_eded =_edadd .Get (0);
_bgca ,_gagc :=_eded .(*_bcd .PdfObjectName );if !_gagc {return nil ,_f .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bgca !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_f .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_eded =_edadd .Get (1);_bgca ,_gagc =_eded .(*_bcd .PdfObjectName );if !_gagc {return nil ,_f .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_egdb .ColorantName =_bgca ;_eded =_edadd .Get (2);_acac ,_gbfcg :=NewPdfColorspaceFromPdfObject (_eded );if _gbfcg !=nil {return nil ,_gbfcg ;};_egdb .AlternateSpace =_acac ;_ceee ,_gbfcg :=_bggfc (_edadd .Get (3));if _gbfcg !=nil {return nil ,_gbfcg ;
};_egdb .TintTransform =_ceee ;return _egdb ,nil ;};

// ToPdfObject returns a stream object.
func (_abggg *XObjectForm )ToPdfObject ()_bcd .PdfObject {_bdbfge :=_abggg ._bcgbb ;_affbaa :=_bdbfge .PdfObjectDictionary ;if _abggg .Filter !=nil {_affbaa =_abggg .Filter .MakeStreamDict ();_bdbfge .PdfObjectDictionary =_affbaa ;};_affbaa .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_affbaa .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0046\u006f\u0072\u006d"));_affbaa .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_abggg .FormType );_affbaa .SetIfNotNil ("\u0042\u0042\u006f\u0078",_abggg .BBox );
_affbaa .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_abggg .Matrix );if _abggg .Resources !=nil {_affbaa .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_abggg .Resources .ToPdfObject ());};_affbaa .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_abggg .Group );
_affbaa .SetIfNotNil ("\u0052\u0065\u0066",_abggg .Ref );_affbaa .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_abggg .MetaData );_affbaa .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_abggg .PieceInfo );_affbaa .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_abggg .LastModified );
_affbaa .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_abggg .StructParent );_affbaa .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_abggg .StructParents );_affbaa .SetIfNotNil ("\u004f\u0050\u0049",_abggg .OPI );
_affbaa .SetIfNotNil ("\u004f\u0043",_abggg .OC );_affbaa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_abggg .Name );_affbaa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcd .MakeInteger (int64 (len (_abggg .Stream ))));_bdbfge .Stream =_abggg .Stream ;return _bdbfge ;
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_eebb *PdfColorspaceCalGray )GetNumComponents ()int {return 1};var _ pdfFont =(*pdfFontType3 )(nil );func _ffgaa (_dfeg _bcd .PdfObject )(*PdfShading ,error ){_ebddb :=&PdfShading {};var _afccd *_bcd .PdfObjectDictionary ;if _bbbec ,_edbag :=_bcd .GetIndirect (_dfeg );
_edbag {_ebddb ._gggef =_bbbec ;_afdae ,_cecgf :=_bbbec .PdfObject .(*_bcd .PdfObjectDictionary );if !_cecgf {_aa .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_bcd .ErrTypeError ;};_afccd =_afdae ;}else if _ecdffb ,_cdada :=_bcd .GetStream (_dfeg );_cdada {_ebddb ._gggef =_ecdffb ;_afccd =_ecdffb .PdfObjectDictionary ;}else if _fegfd ,_dded :=_bcd .GetDict (_dfeg );_dded {_ebddb ._gggef =_fegfd ;
_afccd =_fegfd ;}else {_aa .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_dfeg );return nil ,_bcd .ErrTypeError ;};if _afccd ==nil {_aa .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fcf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_dfeg =_afccd .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _dfeg ==nil {_aa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dfeg =_bcd .TraceToDirectObject (_dfeg );_afdd ,_ebbbb :=_dfeg .(*_bcd .PdfObjectInteger );if !_ebbbb {_aa .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_dfeg );
return nil ,_bcd .ErrTypeError ;};if *_afdd < 1||*_afdd > 7{_aa .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_afdd );
return nil ,_bcd .ErrTypeError ;};_ebddb .ShadingType =_afdd ;_dfeg =_afccd .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _dfeg ==nil {_aa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cceec ,_ggaba :=NewPdfColorspaceFromPdfObject (_dfeg );if _ggaba !=nil {_aa .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_ggaba );
return nil ,_ggaba ;};_ebddb .ColorSpace =_cceec ;_dfeg =_afccd .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _dfeg !=nil {_dfeg =_bcd .TraceToDirectObject (_dfeg );_bcda ,_cdec :=_dfeg .(*_bcd .PdfObjectArray );if !_cdec {_aa .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dfeg );
return nil ,_bcd .ErrTypeError ;};_ebddb .Background =_bcda ;};_dfeg =_afccd .Get ("\u0042\u0042\u006f\u0078");if _dfeg !=nil {_dfeg =_bcd .TraceToDirectObject (_dfeg );_afgee ,_deegd :=_dfeg .(*_bcd .PdfObjectArray );if !_deegd {_aa .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dfeg );
return nil ,_bcd .ErrTypeError ;};_edcf ,_accdfa :=NewPdfRectangle (*_afgee );if _accdfa !=nil {_aa .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_accdfa );return nil ,_accdfa ;};_ebddb .BBox =_edcf ;};_dfeg =_afccd .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _dfeg !=nil {_dfeg =_bcd .TraceToDirectObject (_dfeg );_becga ,_faaad :=_dfeg .(*_bcd .PdfObjectBool );if !_faaad {_aa .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfeg );
return nil ,_bcd .ErrTypeError ;};_ebddb .AntiAlias =_becga ;};switch *_afdd {case 1:_adgef ,_bddgg :=_edgaa (_afccd );if _bddgg !=nil {return nil ,_bddgg ;};_adgef .PdfShading =_ebddb ;_ebddb ._ecdfcf =_adgef ;return _ebddb ,nil ;case 2:_acggf ,_eebfe :=_geegc (_afccd );
if _eebfe !=nil {return nil ,_eebfe ;};_acggf .PdfShading =_ebddb ;_ebddb ._ecdfcf =_acggf ;return _ebddb ,nil ;case 3:_dbbc ,_bgaaa :=_ddbbc (_afccd );if _bgaaa !=nil {return nil ,_bgaaa ;};_dbbc .PdfShading =_ebddb ;_ebddb ._ecdfcf =_dbbc ;return _ebddb ,nil ;
case 4:_efdcf ,_bagcg :=_ffgdc (_afccd );if _bagcg !=nil {return nil ,_bagcg ;};_efdcf .PdfShading =_ebddb ;_ebddb ._ecdfcf =_efdcf ;return _ebddb ,nil ;case 5:_gdedg ,_gfcgg :=_aeffg (_afccd );if _gfcgg !=nil {return nil ,_gfcgg ;};_gdedg .PdfShading =_ebddb ;
_ebddb ._ecdfcf =_gdedg ;return _ebddb ,nil ;case 6:_eace ,_dbdaf :=_aeef (_afccd );if _dbdaf !=nil {return nil ,_dbdaf ;};_eace .PdfShading =_ebddb ;_ebddb ._ecdfcf =_eace ;return _ebddb ,nil ;case 7:_ffabd ,_edcbb :=_gbcbb (_afccd );if _edcbb !=nil {return nil ,_edcbb ;
};_ffabd .PdfShading =_ebddb ;_ebddb ._ecdfcf =_ffabd ;return _ebddb ,nil ;};return nil ,_fcf .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func (_fedd fontCommon )fontFlags ()int {if _fedd ._agda ==nil {return 0;
};return _fedd ._agda ._fabe ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_fcbg :=NewPdfAnnotation ();_gbf :=&PdfAnnotationFileAttachment {};_gbf .PdfAnnotation =_fcbg ;_gbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcbg .SetContext (_gbf );return _gbf ;
};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dbefb *PdfReader )CheckAccessRights (password []byte )(bool ,_fcg .Permissions ,error ){return _dbefb ._aceagb .CheckAccessRights (password );};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_def :=NewPdfAction ();_gbc :=&PdfActionGoToE {};_gbc .PdfAction =_def ;_def .SetContext (_gbc );return _gbc ;};

// ToPdfObject implements interface PdfModel.
func (_gf *PdfActionGoToE )ToPdfObject ()_bcd .PdfObject {_gf .PdfAction .ToPdfObject ();_beb :=_gf ._fgae ;_fcfa :=_beb .PdfObject .(*_bcd .PdfObjectDictionary );_fcfa .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeGoToE )));if _gf .F !=nil {_fcfa .Set ("\u0046",_gf .F .ToPdfObject ());
};_fcfa .SetIfNotNil ("\u0044",_gf .D );_fcfa .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gf .NewWindow );_fcfa .SetIfNotNil ("\u0054",_gf .T );return _beb ;};func (_cff *PdfReader )newPdfActionGotoFromDict (_ff *_bcd .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_ff .Get ("\u0044")},nil ;
};func _gbcfg (_bcae *PdfPage ){_dgfdf :=_fd .GetLicenseKey ();if _dgfdf !=nil &&_dgfdf .IsLicensed (){return ;};_gebda :=_bcd .PdfObjectName ("\u0055\u0046\u0031");if !_bcae .Resources .HasFontByName (_gebda ){_bcae .Resources .SetFontByName (_gebda ,DefaultFont ().ToPdfObject ());
};var _cfdde []string ;_cfdde =append (_cfdde ,"\u0071");_cfdde =append (_cfdde ,"\u0042\u0054");_cfdde =append (_cfdde ,_f .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_gebda .String ()));_cfdde =append (_cfdde ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_cfdde =append (_cfdde ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_fcgbb :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_cfdde =append (_cfdde ,_f .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_fcgbb ));_cfdde =append (_cfdde ,"\u0045\u0054");_cfdde =append (_cfdde ,"\u0051");_dfdadb :=_fef .Join (_cfdde ,"\u000a");_bcae .AddContentStreamByString (_dfdadb );_bcae .ToPdfObject ();
};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bcd .PdfObjectArray ;_dfab *Image ;};

// ToPdfObject converts the font to a PDF representation.
func (_ggbgc *pdfFontType3 )ToPdfObject ()_bcd .PdfObject {if _ggbgc ._bedgb ==nil {_ggbgc ._bedgb =&_bcd .PdfIndirectObject {};};_bgge :=_ggbgc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_ggbgc ._bedgb .PdfObject =_bgge ;if _ggbgc .FirstChar !=nil {_bgge .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ggbgc .FirstChar );
};if _ggbgc .LastChar !=nil {_bgge .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ggbgc .LastChar );};if _ggbgc .Widths !=nil {_bgge .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ggbgc .Widths );};if _ggbgc .Encoding !=nil {_bgge .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ggbgc .Encoding );
}else if _ggbgc ._efefb !=nil {_fddfe :=_ggbgc ._efefb .ToPdfObject ();if _fddfe !=nil {_bgge .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fddfe );};};if _ggbgc .FontBBox !=nil {_bgge .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ggbgc .FontBBox );
};if _ggbgc .FontMatrix !=nil {_bgge .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_ggbgc .FontMatrix );};if _ggbgc .CharProcs !=nil {_bgge .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_ggbgc .CharProcs );};if _ggbgc .Resources !=nil {_bgge .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ggbgc .Resources );
};return _ggbgc ._bedgb ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_deed :=&PdfColorspaceDeviceN {};return _deed };

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_dbfg *PdfField )IsTerminal ()bool {return len (_dbfg .Kids )==0};func (_aaeb *PdfReader )newPdfAnnotationRichMediaFromDict (_dcfb *_bcd .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_efdd :=&PdfAnnotationRichMedia {};_efdd .RichMediaSettings =_dcfb .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_efdd .RichMediaContent =_dcfb .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _efdd ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_bfee PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _bfee ._fbcb .getFontDescriptor (),nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_fcaa *PdfPage )AppendContentStream (contentStr string )error {_bfcg ,_dddeb :=_fcaa .GetContentStreams ();if _dddeb !=nil {return _dddeb ;};if len (_bfcg )==0{_bfcg =[]string {contentStr };return _fcaa .SetContentStreams (_bfcg ,_bcd .NewFlateEncoder ());
};var _fddde _ge .Buffer ;_fddde .WriteString (_bfcg [len (_bfcg )-1]);_fddde .WriteString ("\u000a");_fddde .WriteString (contentStr );_bfcg [len (_bfcg )-1]=_fddde .String ();return _fcaa .SetContentStreams (_bfcg ,_bcd .NewFlateEncoder ());};func _fedae ()string {_ccbbb :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _ggedf _ge .Buffer ;for _gagda :=0;_gagda < 6;_gagda ++{_ggedf .WriteRune (rune (_ccbbb [_bbc .Intn (len (_ccbbb ))]));};return _ggedf .String ();};func _ffbdb (_dgef _aab .StdFont )pdfFontSimple {_adac :=_dgef .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_ffaca :"\u0054\u0079\u0070e\u0031",_gagg :_dgef .Name ()},_daeea :_dgef .GetMetricsTable (),_eaba :&PdfFontDescriptor {FontName :_bcd .MakeName (string (_adac .Name )),FontFamily :_bcd .MakeName (_adac .Family ),FontWeight :_bcd .MakeFloat (float64 (_adac .Weight )),Flags :_bcd .MakeInteger (int64 (_adac .Flags )),FontBBox :_bcd .MakeArrayFromFloats (_adac .BBox [:]),ItalicAngle :_bcd .MakeFloat (_adac .ItalicAngle ),Ascent :_bcd .MakeFloat (_adac .Ascent ),Descent :_bcd .MakeFloat (_adac .Descent ),CapHeight :_bcd .MakeFloat (_adac .CapHeight ),XHeight :_bcd .MakeFloat (_adac .XHeight ),StemV :_bcd .MakeFloat (_adac .StemV ),StemH :_bcd .MakeFloat (_adac .StemH )},_aeaf :_dgef .Encoder ()};
};func (_cfag *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_cdde *PdfAnnotationWidget )Field ()*PdfField {return _cdde ._gge };

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_fdge *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _fdge .flattenFieldsWithOpts (false ,appgen ,opts );};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_deedd *XObjectForm )GetContainingPdfObject ()_bcd .PdfObject {return _deedd ._bcgbb };

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_cfea *Image )ConvertToBinary ()error {if _cfea .ColorComponents ==1&&_cfea .BitsPerComponent ==1{return nil ;};_aaeda ,_gfdac :=_cfea .ToGoImage ();if _gfdac !=nil {return _gfdac ;};_fbdf ,_gfdac :=_gac .MonochromeConverter .Convert (_aaeda );if _gfdac !=nil {return _gfdac ;
};_cfea .Data =_fbdf .Base ().Data ;_cfea ._fafbg ,_gfdac =_gac .ScaleAlphaToMonochrome (_cfea ._fafbg ,int (_cfea .Width ),int (_cfea .Height ));if _gfdac !=nil {return _gfdac ;};_cfea .BitsPerComponent =1;_cfea .ColorComponents =1;_cfea ._fbccc =nil ;
return nil ;};func (_edfd *PdfReader )newPdfActionGoTo3DViewFromDict (_gfc *_bcd .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_gfc .Get ("\u0054\u0041"),V :_gfc .Get ("\u0056")},nil ;};type fontCommon struct{_gagg string ;
_ffaca string ;_acacg string ;_cdgf _bcd .PdfObject ;_fbfb *_dca .CMap ;_agda *PdfFontDescriptor ;_aadcbf int64 ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_bead DefaultImageHandler )Read (reader _ec .Reader )(*Image ,error ){_gbcf ,_ ,_ffeaf :=_ga .Decode (reader );if _ffeaf !=nil {_aa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ffeaf );
return nil ,_ffeaf ;};return _bead .NewImageFromGoImage (_gbcf );};

// WriteString outputs the object as it is to be written to file.
func (_baedg *pdfSignDictionary )WriteString ()string {_baedg ._bcgdfg =0;_baedg ._bcbga =0;_baedg ._ddffe =0;_baedg ._ebefg =0;_ecggff :=_ge .NewBuffer (nil );_ecggff .WriteString ("\u003c\u003c");for _ ,_fgdef :=range _baedg .Keys (){_gdeac :=_baedg .Get (_fgdef );
switch _fgdef {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_ecggff .WriteString (_fgdef .WriteString ());_ecggff .WriteString ("\u0020");_baedg ._ddffe =_ecggff .Len ();_ecggff .WriteString (_gdeac .WriteString ());_ecggff .WriteString ("\u0020");
_baedg ._ebefg =_ecggff .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_ecggff .WriteString (_fgdef .WriteString ());_ecggff .WriteString ("\u0020");_baedg ._bcgdfg =_ecggff .Len ();_ecggff .WriteString (_gdeac .WriteString ());_ecggff .WriteString ("\u0020");
_baedg ._bcbga =_ecggff .Len ()-1;default:_ecggff .WriteString (_fgdef .WriteString ());_ecggff .WriteString ("\u0020");_ecggff .WriteString (_gdeac .WriteString ());};};_ecggff .WriteString ("\u003e\u003e");return _ecggff .String ();};func (_gfeca *LTV )getCerts (_befag []*_b .Certificate )([][]byte ,error ){_dfcada :=make ([][]byte ,0,len (_befag ));
for _ ,_abcg :=range _befag {_dfcada =append (_dfcada ,_abcg .Raw );};return _dfcada ,nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_afde *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_afde .GetNumComponents (){return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_becg ,_agadb :=_afde .TintTransform .Evaluate (vals );
if _agadb !=nil {return nil ,_agadb ;};_aeee ,_agadb :=_afde .AlternateSpace .ColorFromFloats (_becg );if _agadb !=nil {return nil ,_agadb ;};return _aeee ,nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_dcfd *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_agea ,_ ,_gegd :=_dcfd .CharcodesToUnicodeWithStats (_dcfd .BytesToCharcodes (data ));_dcac :=_af .ExpandLigatures (_agea );return _dcac ,_gg .RuneCountInString (_dcac ),_gegd ;
};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_cadbg *Image )ToGoImage ()(_ga .Image ,error ){_aa .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_eaadcf ,_dbaba :=_gac .NewImage (int (_cadbg .Width ),int (_cadbg .Height ),int (_cadbg .BitsPerComponent ),_cadbg .ColorComponents ,_cadbg .Data ,_cadbg ._fafbg ,_cadbg ._fbccc );
if _dbaba !=nil {return nil ,_dbaba ;};return _eaadcf ,nil ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_cdgeb *PdfTransformParamsDocMDP )String ()string {return _f .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_cdgeb .Type ,_cdgeb .P ,_cdgeb .V );};

// Add appends a top level outline item to the outline.
func (_gdcde *Outline )Add (item *OutlineItem ){_gdcde .Entries =append (_gdcde .Entries ,item )};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_agabd *DSS )GetContainingPdfObject ()_bcd .PdfObject {return _agabd ._efdee };func (_geagca *PdfReader )resolveReference (_abaga *_bcd .PdfObjectReference )(_bcd .PdfObject ,bool ,error ){_eeec ,_feec :=_geagca ._aceagb .ObjCache [int (_abaga .ObjectNumber )];
if !_feec {_aa .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_abaga );_dgace ,_gdcag :=_geagca ._aceagb .LookupByReference (*_abaga );if _gdcag !=nil {return nil ,false ,_gdcag ;};_geagca ._aceagb .ObjCache [int (_abaga .ObjectNumber )]=_dgace ;
return _dgace ,false ,nil ;};return _eeec ,true ,nil ;};func (_eeaea *pdfCIDFontType2 )baseFields ()*fontCommon {return &_eeaea .fontCommon };

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ToPdfObject implements interface PdfModel.
func (_dag *PdfActionJavaScript )ToPdfObject ()_bcd .PdfObject {_dag .PdfAction .ToPdfObject ();_fcfg :=_dag ._fgae ;_cfa :=_fcfg .PdfObject .(*_bcd .PdfObjectDictionary );_cfa .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeJavaScript )));_cfa .SetIfNotNil ("\u004a\u0053",_dag .JS );
return _fcfg ;};func (_ebd *PdfReader )newPdfAnnotationFreeTextFromDict (_bbfbg *_bcd .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_ggcb :=PdfAnnotationFreeText {};_abcd ,_dfbf :=_ebd .newPdfAnnotationMarkupFromDict (_bbfbg );if _dfbf !=nil {return nil ,_dfbf ;
};_ggcb .PdfAnnotationMarkup =_abcd ;_ggcb .DA =_bbfbg .Get ("\u0044\u0041");_ggcb .Q =_bbfbg .Get ("\u0051");_ggcb .RC =_bbfbg .Get ("\u0052\u0043");_ggcb .DS =_bbfbg .Get ("\u0044\u0053");_ggcb .CL =_bbfbg .Get ("\u0043\u004c");_ggcb .IT =_bbfbg .Get ("\u0049\u0054");
_ggcb .BE =_bbfbg .Get ("\u0042\u0045");_ggcb .RD =_bbfbg .Get ("\u0052\u0044");_ggcb .BS =_bbfbg .Get ("\u0042\u0053");_ggcb .LE =_bbfbg .Get ("\u004c\u0045");return &_ggcb ,nil ;};func _begdc (_febec string )map[string ]string {_fcaecf :=_cebee .Split (_febec ,-1);
_eedde :=map[string ]string {};for _ ,_caccf :=range _fcaecf {_ccbdd :=_ddbec .FindStringSubmatch (_caccf );if _ccbdd ==nil {continue ;};_cgcfb ,_faeda :=_ccbdd [1],_ccbdd [2];_eedde [_cgcfb ]=_faeda ;};return _eedde ;};

// B returns the value of the blue component of the color.
func (_ccbg *PdfColorDeviceRGB )B ()float64 {return _ccbg [2]};func _dgbf (_dbfge *[]*PdfField ,_gcded FieldFilterFunc ,_bgece bool )[]*PdfField {if _dbfge ==nil {return nil ;};_bdfgb :=*_dbfge ;if len (*_dbfge )==0{return nil ;};_cgdgd :=_bdfgb [:0];if _gcded ==nil {_gcded =func (*PdfField )bool {return true };
};var _ccddc []*PdfField ;for _ ,_defde :=range _bdfgb {_gabec :=_gcded (_defde );if _gabec {_ccddc =append (_ccddc ,_defde );if len (_defde .Kids )> 0{_ccddc =append (_ccddc ,_dgbf (&_defde .Kids ,_gcded ,_bgece )...);};};if !_bgece ||!_gabec ||len (_defde .Kids )> 0{_cgdgd =append (_cgdgd ,_defde );
};};*_dbfge =_cgdgd ;return _ccddc ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bcd .PdfObject ;B _bcd .PdfObject ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_dgec :=NewPdfAnnotation ();_eadd :=&PdfAnnotationMovie {};_eadd .PdfAnnotation =_dgec ;_dgec .SetContext (_eadd );return _eadd ;};var (_dgecg _d .Mutex ;_ffbef ="";_bcgeb _fb .Time ;_baaed ="";_efeg ="";
_feegg _fb .Time ;_ceggd ="";_dbdf ="";_gagae ="";);func (_eedbd *Image )resampleLowBits (_eaadcd []uint32 ){_faaee :=_gac .BytesPerLine (int (_eedbd .Width ),int (_eedbd .BitsPerComponent ),_eedbd .ColorComponents );_fffc :=make ([]byte ,_eedbd .ColorComponents *_faaee *int (_eedbd .Height ));
_bbfgdg :=int (_eedbd .BitsPerComponent )*_eedbd .ColorComponents *int (_eedbd .Width );_ggaae :=uint8 (8);var (_bggeg ,_gbfdf int ;_bdabfa uint32 ;);for _befce :=0;_befce < int (_eedbd .Height );_befce ++{_gbfdf =_befce *_faaee ;for _bebfc :=0;_bebfc < _bbfgdg ;
_bebfc ++{_bdabfa =_eaadcd [_bggeg ];_ggaae -=uint8 (_eedbd .BitsPerComponent );_fffc [_gbfdf ]|=byte (_bdabfa )<<_ggaae ;if _ggaae ==0{_ggaae =8;_gbfdf ++;};_bggeg ++;};};_eedbd .Data =_fffc ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cdgfc *PdfPageResources )GetShadingByName (keyName _bcd .PdfObjectName )(*PdfShading ,bool ){if _cdgfc .Shading ==nil {return nil ,false ;};_addd ,_dcdgb :=_bcd .TraceToDirectObject (_cdgfc .Shading ).(*_bcd .PdfObjectDictionary );if !_dcdgb {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdgfc .Shading );
return nil ,false ;};if _ebbcf :=_addd .Get (keyName );_ebbcf !=nil {_agbfd ,_bdfdd :=_ffgaa (_ebbcf );if _bdfdd !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_bdfdd );
return nil ,false ;};return _agbfd ,true ;};return nil ,false ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ggcf :=NewPdfAnnotation ();_fff :=&PdfAnnotationProjection {};_fff .PdfAnnotation =_ggcf ;_fff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggcf .SetContext (_fff );return _fff ;};func (_ffbgg *PdfWriter )writeOutlines ()error {if _ffbgg ._fbcgef ==nil {return nil ;
};_aa .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_ffbgg ._fbcgef );_dadbe :=_ffbgg ._fbcgef .ToPdfObject ();_aa .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_dadbe ,_dadbe ,_dadbe );
_ffbgg ._daaaa .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_dadbe );_dagcc :=_ffbgg .addObjects (_dadbe );if _dagcc !=nil {return _dagcc ;};return nil ;};func _cbfec (_ccdef map[_aab .GID ]int ,_bggdg uint16 )*_bcd .PdfObjectArray {_gdgf :=&_bcd .PdfObjectArray {};
_bcdc :=_aab .GID (_bggdg );for _bcbf :=_aab .GID (0);_bcbf < _bcdc ;{_bfgaf ,_dgfg :=_ccdef [_bcbf ];if !_dgfg {_bcbf ++;continue ;};_cdccd :=_bcbf ;for _gfcbf :=_cdccd +1;_gfcbf < _bcdc ;_gfcbf ++{if _bgbg ,_fafc :=_ccdef [_gfcbf ];!_fafc ||_bfgaf !=_bgbg {break ;
};_cdccd =_gfcbf ;};_gdgf .Append (_bcd .MakeInteger (int64 (_bcbf )));_gdgf .Append (_bcd .MakeInteger (int64 (_cdccd )));_gdgf .Append (_bcd .MakeInteger (int64 (_bfgaf )));_bcbf =_cdccd +1;};return _gdgf ;};

// Transform rectangle with the supplied matrix.
func (_egdg *PdfRectangle )Transform (transformMatrix _bca .Matrix ){_egdg .Llx ,_egdg .Lly =transformMatrix .Transform (_egdg .Llx ,_egdg .Lly );_egdg .Urx ,_egdg .Ury =transformMatrix .Transform (_egdg .Urx ,_egdg .Ury );_egdg .Normalize ();};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_gec :=NewPdfAction ();_be :=&PdfActionGoToR {};_be .PdfAction =_gec ;_gec .SetContext (_be );return _be ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_fgfad *PdfPage )GetRotate ()(int64 ,error ){if _fgfad .Rotate !=nil {return *_fgfad .Rotate ,nil ;};_dbbbbf :=_fgfad .Parent ;for _dbbbbf !=nil {_ddff ,_dbaedb :=_bcd .GetDict (_dbbbbf );if !_dbaedb {return 0,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _gaaage :=_ddff .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gaaage !=nil {_bfccf ,_ecfd :=_bcd .GetInt (_gaaage );if !_ecfd {return 0,_fcf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");
};if _bfccf !=nil {return int64 (*_bfccf ),nil ;};return 0,_fcf .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_dbbbbf =_ddff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_fcf .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// Items returns all children outline items.
func (_cfba *OutlineItem )Items ()[]*OutlineItem {return _cfba .Entries };

// MergePageWith appends page content to source Pdf file page content.
func (_efff *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_edae :=pageNum -1;var _bec *PdfPage ;for _egca ,_efgbe :=range _efff ._ebcd {if _egca ==_edae {_bec =_efgbe ;};};if _bec ==nil {return _f .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _bec ._bebee !=nil &&_bec ._bebee .GetParser ()==_efff ._aagg ._aceagb {_bec =_bec .Duplicate ();_efff ._ebcd [_edae ]=_bec ;};page =page .Duplicate ();_gbcfg (page );_ceca :=_ebebg (_bec );_fbeb :=_ebebg (page );_bbef :=make (map[_bcd .PdfObjectName ]_bcd .PdfObjectName );
for _dedb :=range _fbeb {if _ ,_bdde :=_ceca [_dedb ];_bdde {for _cffa :=1;true ;_cffa ++{_bffe :=_bcd .PdfObjectName (string (_dedb )+_gb .Itoa (_cffa ));if _ ,_babb :=_ceca [_bffe ];!_babb {_bbef [_dedb ]=_bffe ;break ;};};};};_ebfc ,_deaa :=page .GetContentStreams ();
if _deaa !=nil {return _deaa ;};_eecbe ,_deaa :=_bec .GetContentStreams ();if _deaa !=nil {return _deaa ;};for _ebef ,_cgde :=range _ebfc {for _dce ,_cgcf :=range _bbef {_cgde =_fef .Replace (_cgde ,"\u002f"+string (_dce ),"\u002f"+string (_cgcf ),-1);
};_ebfc [_ebef ]=_cgde ;};_eecbe =append (_eecbe ,_ebfc ...);if _bdc :=_bec .SetContentStreams (_eecbe ,_bcd .NewFlateEncoder ());_bdc !=nil {return _bdc ;};_bec ._gccae =append (_bec ._gccae ,page ._gccae ...);if _bec .Resources ==nil {_bec .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_bec .Resources .Font =_efff .mergeResources (_bec .Resources .Font ,page .Resources .Font ,_bbef );_bec .Resources .XObject =_efff .mergeResources (_bec .Resources .XObject ,page .Resources .XObject ,_bbef );_bec .Resources .Properties =_efff .mergeResources (_bec .Resources .Properties ,page .Resources .Properties ,_bbef );
if _bec .Resources .ProcSet ==nil {_bec .Resources .ProcSet =page .Resources .ProcSet ;};_bec .Resources .Shading =_efff .mergeResources (_bec .Resources .Shading ,page .Resources .Shading ,_bbef );_bec .Resources .ExtGState =_efff .mergeResources (_bec .Resources .ExtGState ,page .Resources .ExtGState ,_bbef );
};_daad ,_deaa :=_bec .GetMediaBox ();if _deaa !=nil {return _deaa ;};_ddfcd ,_deaa :=page .GetMediaBox ();if _deaa !=nil {return _deaa ;};var _caeg bool ;if _daad .Llx > _ddfcd .Llx {_daad .Llx =_ddfcd .Llx ;_caeg =true ;};if _daad .Lly > _ddfcd .Lly {_daad .Lly =_ddfcd .Lly ;
_caeg =true ;};if _daad .Urx < _ddfcd .Urx {_daad .Urx =_ddfcd .Urx ;_caeg =true ;};if _daad .Ury < _ddfcd .Ury {_daad .Ury =_ddfcd .Ury ;_caeg =true ;};if _caeg {_bec .MediaBox =_daad ;};return nil ;};func _cdfba (_abgb *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_abgb }};


// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_efeaf *_bcd .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eecfc *PdfShadingType4 )ToPdfObject ()_bcd .PdfObject {_eecfc .PdfShading .ToPdfObject ();_eeebb ,_bdcag :=_eecfc .getShadingDict ();if _bdcag !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _eecfc .BitsPerCoordinate !=nil {_eeebb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_eecfc .BitsPerCoordinate );};if _eecfc .BitsPerComponent !=nil {_eeebb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eecfc .BitsPerComponent );
};if _eecfc .BitsPerFlag !=nil {_eeebb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_eecfc .BitsPerFlag );};if _eecfc .Decode !=nil {_eeebb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_eecfc .Decode );};if _eecfc .Function !=nil {if len (_eecfc .Function )==1{_eeebb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eecfc .Function [0].ToPdfObject ());
}else {_bgcca :=_bcd .MakeArray ();for _ ,_fcadc :=range _eecfc .Function {_bgcca .Append (_fcadc .ToPdfObject ());};_eeebb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bgcca );};};return _eecfc ._gggef ;};func (_dcdfb *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _dcdfb ._agda };
func _fedda (_dcbcg _ec .ReadSeeker ,_ddbffa *ReaderOpts ,_cfbgg bool ,_aage string )(*PdfReader ,error ){if _ddbffa ==nil {_ddbffa =NewReaderOpts ();};_fefg :=*_ddbffa ;_bdaaa :=&PdfReader {_accdg :_dcbcg ,_ecgb :map[_bcd .PdfObject ]struct{}{},_gaafcb :_afga (),_aacc :_ddbffa .LazyLoad ,_eddgg :_ddbffa .ComplianceMode ,_bbbcde :_cfbgg ,_fcbgb :&_fefg };
_gadcd ,_dafga :=_beee ("\u0072");if _dafga !=nil {return nil ,_dafga ;};_dafga =_fd .Track (_gadcd ,_aage );if _dafga !=nil {return nil ,_dafga ;};_bdaaa ._gefca =_gadcd ;var _dceg *_bcd .PdfParser ;if !_bdaaa ._eddgg {_dceg ,_dafga =_bcd .NewParser (_dcbcg );
}else {_dceg ,_dafga =_bcd .NewCompliancePdfParser (_dcbcg );};if _dafga !=nil {return nil ,_dafga ;};_bdaaa ._aceagb =_dceg ;_cagfag ,_dafga :=_bdaaa .IsEncrypted ();if _dafga !=nil {return nil ,_dafga ;};if !_cagfag {_dafga =_bdaaa .loadStructure ();
if _dafga !=nil {return nil ,_dafga ;};}else if _cfbgg {_cbbg ,_bgcge :=_bdaaa .Decrypt ([]byte (_ddbffa .Password ));if _bgcge !=nil {return nil ,_bgcge ;};if !_cbbg {return nil ,_fcf .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_bdaaa ._edge =make (map[*PdfReader ]*PdfReader );_bdaaa ._dbacf =make ([]*PdfReader ,_dceg .GetRevisionNumber ());return _bdaaa ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ggged *PdfFilespec )GetContainingPdfObject ()_bcd .PdfObject {return _ggged ._dgfe };

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_ffb :=NewPdfAnnotation ();_gef :=&PdfAnnotationTrapNet {};_gef .PdfAnnotation =_ffb ;_ffb .SetContext (_gef );return _gef ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func _beee (_agccg string )(string ,error ){var _badc _ge .Buffer ;_badc .WriteString (_agccg );_eeebe :=make ([]byte ,8+16);_bgfed :=_fb .Now ().UTC ().UnixNano ();_de .BigEndian .PutUint64 (_eeebe ,uint64 (_bgfed ));
_ ,_eaabc :=_bf .Read (_eeebe [8:]);if _eaabc !=nil {return "",_eaabc ;};_badc .WriteString (_dg .EncodeToString (_eeebe ));return _badc .String (),nil ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_gaafc FieldFlag )Has (fl FieldFlag )bool {return (_gaafc .Mask ()&fl .Mask ())> 0};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_bcfcf :=&PdfSignature {Type :_bcd .MakeName ("\u0053\u0069\u0067"),Handler :handler };_fgcg :=&pdfSignDictionary {PdfObjectDictionary :_bcd .MakeDict (),_geef :&handler ,_eadde :_bcfcf };_bcfcf ._ebafa =_bcd .MakeIndirectObject (_fgcg );
return _bcfcf ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_bbfda *PdfReader )loadDSS ()(*DSS ,error ){if _bbfda ._aceagb .GetCrypter ()!=nil &&!_bbfda ._aceagb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fgegf :=_bbfda ._babac .Get ("\u0044\u0053\u0053");if _fgegf ==nil {return nil ,nil ;};_afbc ,_ :=_bcd .GetIndirect (_fgegf );_fgegf =_bcd .TraceToDirectObject (_fgegf );switch _feagf :=_fgegf .(type ){case *_bcd .PdfObjectNull :return nil ,nil ;case *_bcd .PdfObjectDictionary :return _fgeec (_afbc ,_feagf );
};return nil ,_f .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_fgegf );};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gbaca *PdfFont )ToUnicode ()string {if _gbaca .baseFields ()._fbfb ==nil {return "";};return _gbaca .baseFields ()._fbfb .Name ();};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_ebefe *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_ccafae *PdfSignature ,_aeda Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_deabd *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_ccge *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_fagfcf *PdfSignature ,_bebdbc Hasher )error ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bcd .StreamEncoder ;FormType _bcd .PdfObject ;BBox _bcd .PdfObject ;Matrix _bcd .PdfObject ;Resources *PdfPageResources ;Group _bcd .PdfObject ;Ref _bcd .PdfObject ;MetaData _bcd .PdfObject ;PieceInfo _bcd .PdfObject ;LastModified _bcd .PdfObject ;
StructParent _bcd .PdfObject ;StructParents _bcd .PdfObject ;OPI _bcd .PdfObject ;OC _bcd .PdfObject ;Name _bcd .PdfObject ;

// Stream data.
Stream []byte ;_bcgbb *_bcd .PdfObjectStream ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_eecag *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_bcgb :=_gea .NewReader (img .getBase ());_cgbed :=_gac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._fafbg ,img ._fbccc );
_gffb :=_gea .NewWriter (_cgbed );_ecfe :=_cc .Pow (2,float64 (img .BitsPerComponent ))-1;_addg :=_eecag .GetNumComponents ();_gffc :=make ([]uint32 ,_addg );_bcedc :=make ([]float64 ,_addg );for {_cgfbe :=_bcgb .ReadSamples (_gffc );if _cgfbe ==_ec .EOF {break ;
}else if _cgfbe !=nil {return img ,_cgfbe ;};for _caee :=0;_caee < _addg ;_caee ++{_gcec :=float64 (_gffc [_caee ])/_ecfe ;_bcedc [_caee ]=_gcec ;};_fccdd ,_cgfbe :=_eecag .TintTransform .Evaluate (_bcedc );if _cgfbe !=nil {return img ,_cgfbe ;};for _ ,_afgc :=range _fccdd {_afgc =_cc .Min (_cc .Max (0,_afgc ),1.0);
if _cgfbe =_gffb .WriteSample (uint32 (_afgc *_ecfe ));_cgfbe !=nil {return img ,_cgfbe ;};};};return _eecag .AlternateSpace .ImageToRGB (_bbbcd (&_cgbed ));};

// ToPdfObject returns a PDF object representation of the outline item.
func (_cbcbf *OutlineItem )ToPdfObject ()_bcd .PdfObject {_bgeb ,_ :=_cbcbf .ToPdfOutlineItem ();return _bgeb .ToPdfObject ();};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_ecac *_bcd .PdfIndirectObject ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_abd :=NewPdfAction ();_cdg :=&PdfActionRendition {};_cdg .PdfAction =_abd ;_abd .SetContext (_cdg );return _cdg ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_gfcaa :=&PdfAppender {_ceac :reader ._accdg ,Reader :reader ,_dafd :reader ._aceagb ,_affd :reader ._ecgb };_acf ,_acdg :=_gfcaa ._ceac .Seek (0,_ec .SeekEnd );
if _acdg !=nil {return nil ,_acdg ;};_gfcaa ._edaag =_acf ;if _ ,_acdg =_gfcaa ._ceac .Seek (0,_ec .SeekStart );_acdg !=nil {return nil ,_acdg ;};_gfcaa ._aagg ,_acdg =NewPdfReaderWithOpts (_gfcaa ._ceac ,opts );if _acdg !=nil {return nil ,_acdg ;};for _ ,_bdb :=range _gfcaa .Reader .GetObjectNums (){if _gfcaa ._eafe < _bdb {_gfcaa ._eafe =_bdb ;
};};_gfcaa ._fegef =_gfcaa ._dafd .GetXrefTable ();_gfcaa ._deae =_gfcaa ._dafd .GetXrefOffset ();_gfcaa ._ebcd =append (_gfcaa ._ebcd ,_gfcaa ._aagg .PageList ...);_gfcaa ._aefb =make (map[_bcd .PdfObject ]struct{});_gfcaa ._fedf =make (map[_bcd .PdfObject ]int64 );
_gfcaa ._aeaa =make (map[_bcd .PdfObject ]struct{});_gfcaa ._dde =_gfcaa ._aagg .AcroForm ;_gfcaa ._baf =_gfcaa ._aagg .DSS ;if opts !=nil {_gfcaa ._geead =opts .Password ;};if encryptOptions !=nil {_gfcaa ._fdag =encryptOptions ;};return _gfcaa ,nil ;
};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_egcgb *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bcd .PdfObject ;ColorSpace _bcd .PdfObject ;Pattern _bcd .PdfObject ;Shading _bcd .PdfObject ;XObject _bcd .PdfObject ;Font _bcd .PdfObject ;ProcSet _bcd .PdfObject ;Properties _bcd .PdfObject ;_ecbbg *_bcd .PdfObjectDictionary ;
_fcdb *PdfPageResourcesColorspaces ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_bedcc :=Permissions {};_bedcc .DocMDP =docMdp ;_efecf :=_bcd .MakeDict ();_efecf .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_bedcc ._caccc =_efecf ;return &_bedcc ;};

// Encoder returns the font's text encoder.
func (_ffba pdfFontType0 )Encoder ()_af .TextEncoder {return _ffba ._ggdfd };func (_ffe *PdfReader )newPdfActionJavaScriptFromDict (_fcfgg *_bcd .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_fcfgg .Get ("\u004a\u0053")},nil ;
};func (_bga *PdfReader )newPdfAnnotationPopupFromDict (_dgae *_bcd .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_gabd :=PdfAnnotationPopup {};_gabd .Parent =_dgae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_gabd .Open =_dgae .Get ("\u004f\u0070\u0065\u006e");
return &_gabd ,nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_cba :=NewPdfAnnotation ();_aged :=&PdfAnnotationStamp {};_aged .PdfAnnotation =_cba ;_aged .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cba .SetContext (_aged );return _aged ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_dccacb *PdfReader )GetOutlines ()(*Outline ,error ){if _dccacb ==nil {return nil ,_fcf .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_ccaba :=_dccacb .GetOutlineTree ();if _ccaba ==nil {return nil ,_fcf .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _bdcad func (_ebagb *PdfOutlineTreeNode ,_dcgb *[]*OutlineItem );_bdcad =func (_cgdb *PdfOutlineTreeNode ,_aagff *[]*OutlineItem ){if _cgdb ==nil {return ;};if _cgdb ._gadg ==nil {_aa .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _egef *OutlineItem ;if _ebcfc ,_aeab :=_cgdb ._gadg .(*PdfOutlineItem );_aeab {_fecdb :=_ebcfc .Dest ;if (_fecdb ==nil ||_bcd .IsNullObject (_fecdb ))&&_ebcfc .A !=nil {if _bdce ,_egda :=_bcd .GetDict (_ebcfc .A );_egda {if _bcbd ,_edbeb :=_bcd .GetArray (_bdce .Get ("\u0044"));
_edbeb {_fecdb =_bcbd ;}else {_dffec ,_aegde :=_bcd .GetString (_bdce .Get ("\u0044"));if !_aegde {return ;};_beabc ,_aegde :=_dccacb ._babac .Get ("\u004e\u0061\u006de\u0073").(*_bcd .PdfObjectReference );if !_aegde {return ;};_gcaga ,_bcbe :=_dccacb ._aceagb .LookupByReference (*_beabc );
if _bcbe !=nil {_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_bcbe .Error ());
return ;};_cdcca ,_aegde :=_gcaga .(*_bcd .PdfIndirectObject );if !_aegde {return ;};_becc :=map[_bcd .PdfObject ]struct{}{};_bcbe =_dccacb .buildNameNodes (_cdcca ,_becc );if _bcbe !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_bcbe .Error ());
return ;};for _dadeb :=range _becc {_bccab ,_fgdgd :=_bcd .GetDict (_dadeb );if !_fgdgd {continue ;};_bgcce ,_fgdgd :=_bcd .GetArray (_bccab .Get ("\u004e\u0061\u006de\u0073"));if !_fgdgd {continue ;};for _daafa ,_aafeb :=range _bgcce .Elements (){switch _aafeb .(type ){case *_bcd .PdfObjectString :if _aafeb .String ()==_dffec .String (){if _fgedaa :=_bgcce .Get (_daafa +1);
_fgedaa !=nil {if _bgedc ,_cfggd :=_bcd .GetDict (_fgedaa );_cfggd {_fecdb =_bgedc .Get ("\u0044");break ;};};};};};};};};};var _dffcdd OutlineDest ;if _fecdb !=nil &&!_bcd .IsNullObject (_fecdb ){if _fgec ,_abgg :=_gaggc (_fecdb ,_dccacb );_abgg ==nil {_dffcdd =*_fgec ;
}else {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_fecdb ,_abgg );
};};_egef =NewOutlineItem (_ebcfc .Title .Decoded (),_dffcdd );*_aagff =append (*_aagff ,_egef );if _ebcfc .Next !=nil {_bdcad (_ebcfc .Next ,_aagff );};};if _cgdb .First !=nil {if _egef !=nil {_aagff =&_egef .Entries ;};_bdcad (_cgdb .First ,_aagff );
};};_cbbeg :=NewOutline ();_bdcad (_ccaba ,&_cbbeg .Entries );return _cbbeg ,nil ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_fdbe :=&PdfColorPatternType2 {};return _fdbe };

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_egegd *PdfFont )CharcodesToStrings (charcodes []_af .CharCode )([]string ,int ,int ){_ddbe :=_egegd .baseFields ();_afbf :=make ([]string ,0,len (charcodes ));_cafgb :=0;_dade :=_egegd .Encoder ();_abef :=_ddbe ._fbfb !=nil &&_egegd .IsSimple ()&&_egegd .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_fef .Contains (_ddbe ._fbfb .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_abef &&_dade !=nil {switch _fcaec :=_dade .(type ){case _af .SimpleEncoder :_fdgf :=_fcaec .BaseName ();if _ ,_fbadb :=_edfdd [_fdgf ];_fbadb {for _ ,_gbag :=range charcodes {if _dabde ,_afdc :=_dade .CharcodeToRune (_gbag );_afdc {_afbf =append (_afbf ,string (_dabde ));
}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gbag ,charcodes ,_ddbe .isCIDFont (),_egegd ,_dade );
_cafgb ++;_afbf =append (_afbf ,_dca .MissingCodeString );};};return _afbf ,len (_afbf ),_cafgb ;};};};for _ ,_caac :=range charcodes {if _ddbe ._fbfb !=nil {if _cbeef ,_feade :=_ddbe ._fbfb .CharcodeToUnicode (_dca .CharCode (_caac ));_feade {_afbf =append (_afbf ,_cbeef );
continue ;};};if _dade !=nil {if _fgfd ,_ebeg :=_dade .CharcodeToRune (_caac );_ebeg {_afbf =append (_afbf ,string (_fgfd ));continue ;};};_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_caac ,charcodes ,_ddbe .isCIDFont (),_egegd ,_dade );
_cafgb ++;_afbf =append (_afbf ,_dca .MissingCodeString );};if _cafgb !=0{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_cafgb ,_egegd );
};return _afbf ,len (_afbf ),_cafgb ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_fefd *PdfOutlineItem )GetContainingPdfObject ()_bcd .PdfObject {return _fefd ._adcb };

// ValidateSignatures validates digital signatures in the document.
func (_cadg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _cadg .AcroForm ==nil {return nil ,nil ;};if _cadg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_abfdc *PdfSignature ;
_ddgae *PdfField ;_eecbf SignatureHandler ;};var _cecdd []*sigFieldPair ;for _ ,_afef :=range _cadg .AcroForm .AllFields (){if _afef .V ==nil {continue ;};if _fdegg ,_dabbg :=_bcd .GetDict (_afef .V );_dabbg {if _abdfc ,_bgege :=_bcd .GetNameVal (_fdegg .Get ("\u0054\u0079\u0070\u0065"));
_bgege &&_abdfc =="\u0053\u0069\u0067"{_caecf ,_bgfg :=_bcd .GetIndirect (_afef .V );if !_bgfg {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_gcfee ,_affgf :=_cadg .newPdfSignatureFromIndirect (_caecf );if _affgf !=nil {return nil ,_affgf ;};var _ffbba SignatureHandler ;for _ ,_bgcac :=range handlers {if _bgcac .IsApplicable (_gcfee ){_ffbba =_bgcac ;break ;};};_cecdd =append (_cecdd ,&sigFieldPair {_abfdc :_gcfee ,_ddgae :_afef ,_eecbf :_ffbba });
};};};var _dggad []SignatureValidationResult ;for _ ,_fdbfa :=range _cecdd {_cgcfc :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_fdbfa ._ddgae }};if _fdbfa ._eecbf ==nil {_cgcfc .Errors =append (_cgcfc .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_dggad =append (_dggad ,_cgcfc );continue ;};_egdaf ,_dagg :=_fdbfa ._eecbf .NewDigest (_fdbfa ._abfdc );if _dagg !=nil {_cgcfc .Errors =append (_cgcfc .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_dagg .Error ());_dggad =append (_dggad ,_cgcfc );
continue ;};_eaadcfd :=_fdbfa ._abfdc .ByteRange ;if _eaadcfd ==nil {_cgcfc .Errors =append (_cgcfc .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_dggad =append (_dggad ,_cgcfc );continue ;
};for _fgbc :=0;_fgbc < _eaadcfd .Len ();_fgbc =_fgbc +2{_aagee ,_ :=_bcd .GetNumberAsInt64 (_eaadcfd .Get (_fgbc ));_aafae ,_ :=_bcd .GetIntVal (_eaadcfd .Get (_fgbc +1));if _ ,_bebae :=_cadg ._accdg .Seek (_aagee ,_ec .SeekStart );_bebae !=nil {return nil ,_bebae ;
};_cefbd :=make ([]byte ,_aafae );if _ ,_cgeb :=_cadg ._accdg .Read (_cefbd );_cgeb !=nil {return nil ,_cgeb ;};_egdaf .Write (_cefbd );};var _cabe SignatureValidationResult ;if _dffgc ,_gfded :=_fdbfa ._eecbf .(SignatureHandlerDocMDP );_gfded {_cabe ,_dagg =_dffgc .ValidateWithOpts (_fdbfa ._abfdc ,_egdaf ,SignatureHandlerDocMDPParams {Parser :_cadg ._aceagb });
}else {_cabe ,_dagg =_fdbfa ._eecbf .Validate (_fdbfa ._abfdc ,_egdaf );};if _dagg !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_dagg ,_fdbfa ._eecbf );_cabe .Errors =append (_cabe .Errors ,_dagg .Error ());
};_cabe .Name =_fdbfa ._abfdc .Name .Decoded ();_cabe .Reason =_fdbfa ._abfdc .Reason .Decoded ();if _fdbfa ._abfdc .M !=nil {_eedaf ,_gccg :=NewPdfDate (_fdbfa ._abfdc .M .String ());if _gccg !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gccg );
_cabe .Errors =append (_cabe .Errors ,_gccg .Error ());continue ;};_cabe .Date =_eedaf ;};_cabe .ContactInfo =_fdbfa ._abfdc .ContactInfo .Decoded ();_cabe .Location =_fdbfa ._abfdc .Location .Decoded ();_cabe .Fields =_cgcfc .Fields ;_dggad =append (_dggad ,_cabe );
};return _dggad ,nil ;};

// String returns a string that describes `base`.
func (_dfef fontCommon )String ()string {return _f .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_dfef .coreString ());};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _fb .Time ){_dgecg .Lock ();defer _dgecg .Unlock ();_feegg =modifiedDate ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func (_cgege *PdfSignature )extractChainFromCert ()([]*_b .Certificate ,error ){var _badge *_bcd .PdfObjectArray ;switch _afag :=_cgege .Cert .(type ){case *_bcd .PdfObjectString :_badge =_bcd .MakeArray (_afag );case *_bcd .PdfObjectArray :_badge =_afag ;
default:return nil ,_f .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_afag );
};var _fcgcd _ge .Buffer ;for _ ,_fddcf :=range _badge .Elements (){_bdadd ,_dacce :=_bcd .GetString (_fddcf );if !_dacce {return nil ,_f .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_fddcf );
};if _ ,_bbcca :=_fcgcd .Write (_bdadd .Bytes ());_bbcca !=nil {return nil ,_bbcca ;};};return _b .ParseCertificates (_fcgcd .Bytes ());};

// C returns the value of the cyan component of the color.
func (_fgce *PdfColorDeviceCMYK )C ()float64 {return _fgce [0]};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _fb .Time )(PdfDate ,error ){_bbcfb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_cfefa ,_ :=_gb .ParseInt (_bbcfb [1:3],10,32);_gfggb ,_ :=_gb .ParseInt (_bbcfb [4:6],10,32);return PdfDate {_ebgb :int64 (timeObj .Year ()),_fegfa :int64 (timeObj .Month ()),_ffbec :int64 (timeObj .Day ()),_fceff :int64 (timeObj .Hour ()),_bcgfff :int64 (timeObj .Minute ()),_fgcfe :int64 (timeObj .Second ()),_cdbb :_bbcfb [0],_gdcg :_cfefa ,_gfaed :_gfggb },nil ;
};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_ecde :=PdfColorLab {l ,a ,b };return &_ecde };func (_egcce *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_gebd :=NewPdfAnnotation ();_ccfb :=&PdfAnnotationPolyLine {};_ccfb .PdfAnnotation =_gebd ;_ccfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gebd .SetContext (_ccfb );return _ccfb ;};var ErrColorOutOfRange =_fcf .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");


// GetOutlineTree returns the outline tree.
func (_cecd *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _cecd ._dfcadg };func (_cece *pdfFontType3 )baseFields ()*fontCommon {return &_cece .fontCommon };

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_abg :=NewPdfAction ();_fa :=&PdfActionJavaScript {};_fa .PdfAction =_abg ;_abg .SetContext (_fa );return _fa ;};

// String implements interface PdfObject.
func (_ae *PdfAction )String ()string {_bg ,_dee :=_ae .ToPdfObject ().(*_bcd .PdfIndirectObject );if _dee {return _f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ae ._gc ,_bg .PdfObject .String ());};return "";};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bcd .PdfObject ;NewWindow _bcd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_eb *PdfActionGoTo3DView )ToPdfObject ()_bcd .PdfObject {_eb .PdfAction .ToPdfObject ();_ecg :=_eb ._fgae ;_fdg :=_ecg .PdfObject .(*_bcd .PdfObjectDictionary );_fdg .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeGoTo3DView )));_fdg .SetIfNotNil ("\u0054\u0041",_eb .TA );
_fdg .SetIfNotNil ("\u0056",_eb .V );return _ecg ;};func _abadec ()string {_dgecg .Lock ();defer _dgecg .Unlock ();return _dbdf };

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_bcd .PdfObjectString ;Author *_bcd .PdfObjectString ;Subject *_bcd .PdfObjectString ;Keywords *_bcd .PdfObjectString ;Creator *_bcd .PdfObjectString ;Producer *_bcd .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_bcd .PdfObjectName ;_fdafc *_bcd .PdfObjectDictionary ;};func _aegcf (_afcgd []*_bcd .PdfObjectStream )*_bcd .PdfObjectArray {if len (_afcgd )==0{return nil ;};_cgcfbg :=make ([]_bcd .PdfObject ,0,len (_afcgd ));for _ ,_aagfg :=range _afcgd {_cgcfbg =append (_cgcfbg ,_aagfg );
};return _bcd .MakeArray (_cgcfbg ...);};

// PdfVersion returns version of the PDF file.
func (_ddfba *PdfReader )PdfVersion ()_bcd .Version {return _ddfba ._aceagb .PdfVersion ()};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_bddga :=&PdfShadingType3 {};_bddga .PdfShading =&PdfShading {};_bddga .PdfShading ._gggef =_bcd .MakeIndirectObject (_bcd .MakeDict ());_bddga .PdfShading ._ecdfcf =_bddga ;return _bddga ;};func _edgaa (_gcfc *_bcd .PdfObjectDictionary )(*PdfShadingType1 ,error ){_fgcfa :=PdfShadingType1 {};
if _cdbda :=_gcfc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cdbda !=nil {_cdbda =_bcd .TraceToDirectObject (_cdbda );_fedbg ,_bcff :=_cdbda .(*_bcd .PdfObjectArray );if !_bcff {_aa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdbda );
return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fgcfa .Domain =_fedbg ;};if _gdbca :=_gcfc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gdbca !=nil {_gdbca =_bcd .TraceToDirectObject (_gdbca );
_bcgde ,_efefbf :=_gdbca .(*_bcd .PdfObjectArray );if !_efefbf {_aa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdbca );return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fgcfa .Matrix =_bcgde ;};_ecae :=_gcfc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ecae ==nil {_aa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fgcfa .Function =[]PdfFunction {};if _dcea ,_ecadg :=_ecae .(*_bcd .PdfObjectArray );_ecadg {for _ ,_fced :=range _dcea .Elements (){_cgdef ,_ggfed :=_bggfc (_fced );if _ggfed !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggfed );
return nil ,_ggfed ;};_fgcfa .Function =append (_fgcfa .Function ,_cgdef );};}else {_eaacc ,_dgfea :=_bggfc (_ecae );if _dgfea !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgfea );
return nil ,_dgfea ;};_fgcfa .Function =append (_fgcfa .Function ,_eaacc );};return &_fgcfa ,nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_bbdf *_bcd .PdfObjectDictionary ;_abag *_bcd .PdfIndirectObject ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_eeaef *PdfOutputIntent )ParsePdfObject (object _bcd .PdfObject )error {_cccc ,_caeea :=_bcd .GetDict (object );if !_caeea {_aa .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _fcf .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_eeaef ._dcggb =_cccc ;_eeaef .Type ,_ =_cccc .GetString ("\u0054\u0079\u0070\u0065");_ecbaff ,_caeea :=_cccc .GetString ("\u0053");if _caeea {switch _ecbaff {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_eeaef .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_eeaef .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_eeaef .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_eeaef .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_eeaef .S =PdfOutputIntentTypeX ;
};};_eeaef .OutputCondition ,_ =_cccc .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_eeaef .OutputConditionIdentifier ,_ =_cccc .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_eeaef .RegistryName ,_ =_cccc .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_eeaef .Info ,_ =_cccc .GetString ("\u0049\u006e\u0066\u006f");if _ccbca ,_dbbga :=_bcd .GetStream (_cccc .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_dbbga {_eeaef .ColorComponents ,_ =_bcd .GetIntVal (_ccbca .Get ("\u004e"));_dedbc ,_ggbab :=_bcd .DecodeStream (_ccbca );if _ggbab !=nil {return _ggbab ;};_eeaef .DestOutputProfile =_dedbc ;};return nil ;};

// GetFillImage get attached model.Image in push button.
func (_faec *PdfFieldButton )GetFillImage ()*Image {if _faec .IsPush (){return _faec ._dfab ;};return nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_gfaf *PdfAnnotation )ToPdfObject ()_bcd .PdfObject {_cdabg :=_gfaf ._dbd ;_ccfd :=_cdabg .PdfObject .(*_bcd .PdfObjectDictionary );_ccfd .Clear ();_ccfd .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0041\u006e\u006eo\u0074"));_ccfd .SetIfNotNil ("\u0052\u0065\u0063\u0074",_gfaf .Rect );
_ccfd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gfaf .Contents );_ccfd .SetIfNotNil ("\u0050",_gfaf .P );_ccfd .SetIfNotNil ("\u004e\u004d",_gfaf .NM );_ccfd .SetIfNotNil ("\u004d",_gfaf .M );_ccfd .SetIfNotNil ("\u0046",_gfaf .F );
_ccfd .SetIfNotNil ("\u0041\u0050",_gfaf .AP );_ccfd .SetIfNotNil ("\u0041\u0053",_gfaf .AS );_ccfd .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_gfaf .Border );_ccfd .SetIfNotNil ("\u0043",_gfaf .C );_ccfd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gfaf .StructParent );
_ccfd .SetIfNotNil ("\u004f\u0043",_gfaf .OC );return _cdabg ;};func (_gcag fontCommon )asPdfObjectDictionary (_ddbc string )*_bcd .PdfObjectDictionary {if _ddbc !=""&&_gcag ._ffaca !=""&&_ddbc !=_gcag ._ffaca {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_ddbc ,_gcag );
}else if _ddbc ==""&&_gcag ._ffaca ==""{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gcag );
}else if _gcag ._ffaca ==""{_gcag ._ffaca =_ddbc ;};_eecaac :=_bcd .MakeDict ();_eecaac .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0046\u006f\u006e\u0074"));_eecaac .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bcd .MakeName (_gcag ._gagg ));
_eecaac .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName (_gcag ._ffaca ));if _gcag ._agda !=nil {_eecaac .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_gcag ._agda .ToPdfObject ());};if _gcag ._cdgf !=nil {_eecaac .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_gcag ._cdgf );
}else if _gcag ._fbfb !=nil {_bafc ,_aacd :=_gcag ._fbfb .Stream ();if _aacd !=nil {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_aacd );
}else {_eecaac .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bafc );};};return _eecaac ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_baegg *PdfPage )error ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_cac :=NewPdfAction ();_gcd :=&PdfActionSound {};_gcd .PdfAction =_cac ;_cac .SetContext (_gcd );return _gcd ;};func (_bag *PdfReader )newPdfAnnotationFromIndirectObject (_dcc *_bcd .PdfIndirectObject )(*PdfAnnotation ,error ){_dbg ,_gfca :=_dcc .PdfObject .(*_bcd .PdfObjectDictionary );
if !_gfca {return nil ,_f .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bag ._gaafcb .GetModelFromPrimitive (_dbg );model !=nil {_fged ,_fgeg :=model .(*PdfAnnotation );if !_fgeg {return nil ,_f .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _fged ,nil ;};_bgg :=&PdfAnnotation {};_bgg ._dbd =_dcc ;_bag ._gaafcb .Register (_dbg ,_bgg );if _acd :=_dbg .Get ("\u0054\u0079\u0070\u0065");_acd !=nil {_ecce ,_beg :=_acd .(*_bcd .PdfObjectName );if !_beg {_aa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_acd );
}else {if *_ecce !="\u0041\u006e\u006eo\u0074"{_aa .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_ecce );};};};
if _efgb :=_dbg .Get ("\u0052\u0065\u0063\u0074");_efgb !=nil {_bgg .Rect =_efgb ;};if _bgbe :=_dbg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bgbe !=nil {_bgg .Contents =_bgbe ;};if _dged :=_dbg .Get ("\u0050");_dged !=nil {_bgg .P =_dged ;
};if _cdc :=_dbg .Get ("\u004e\u004d");_cdc !=nil {_bgg .NM =_cdc ;};if _bfb :=_dbg .Get ("\u004d");_bfb !=nil {_bgg .M =_bfb ;};if _gdf :=_dbg .Get ("\u0046");_gdf !=nil {_bgg .F =_gdf ;};if _aac :=_dbg .Get ("\u0041\u0050");_aac !=nil {_bgg .AP =_aac ;
};if _ffd :=_dbg .Get ("\u0041\u0053");_ffd !=nil {_bgg .AS =_ffd ;};if _fffd :=_dbg .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_fffd !=nil {_bgg .Border =_fffd ;};if _bdf :=_dbg .Get ("\u0043");_bdf !=nil {_bgg .C =_bdf ;};if _eag :=_dbg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_eag !=nil {_bgg .StructParent =_eag ;};if _fec :=_dbg .Get ("\u004f\u0043");_fec !=nil {_bgg .OC =_fec ;};_gaa :=_dbg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _gaa ==nil {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_bgg ._caf =nil ;return _bgg ,nil ;};_gegb ,_afcc :=_gaa .(*_bcd .PdfObjectName );if !_afcc {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gaa );
return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_gaa );};switch *_gegb {case "\u0054\u0065\u0078\u0074":_cde ,_bffb :=_bag .newPdfAnnotationTextFromDict (_dbg );
if _bffb !=nil {return nil ,_bffb ;};_cde .PdfAnnotation =_bgg ;_bgg ._caf =_cde ;return _bgg ,nil ;case "\u004c\u0069\u006e\u006b":_fag ,_cacb :=_bag .newPdfAnnotationLinkFromDict (_dbg );if _cacb !=nil {return nil ,_cacb ;};_fag .PdfAnnotation =_bgg ;
_bgg ._caf =_fag ;return _bgg ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_dgcg ,_dgd :=_bag .newPdfAnnotationFreeTextFromDict (_dbg );if _dgd !=nil {return nil ,_dgd ;};_dgcg .PdfAnnotation =_bgg ;_bgg ._caf =_dgcg ;return _bgg ,nil ;
case "\u004c\u0069\u006e\u0065":_adcg ,_ade :=_bag .newPdfAnnotationLineFromDict (_dbg );if _ade !=nil {return nil ,_ade ;};_adcg .PdfAnnotation =_bgg ;_bgg ._caf =_adcg ;_aa .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_bgg ,_bgg );
_aa .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_adcg ,_adcg );_aa .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_adcg .PdfAnnotationMarkup ,_adcg .PdfAnnotationMarkup );
return _bgg ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bgd ,_gdda :=_bag .newPdfAnnotationSquareFromDict (_dbg );if _gdda !=nil {return nil ,_gdda ;};_bgd .PdfAnnotation =_bgg ;_bgg ._caf =_bgd ;return _bgg ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cgfg ,_ebea :=_bag .newPdfAnnotationCircleFromDict (_dbg );
if _ebea !=nil {return nil ,_ebea ;};_cgfg .PdfAnnotation =_bgg ;_bgg ._caf =_cgfg ;return _bgg ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_dgbg ,_fgac :=_bag .newPdfAnnotationPolygonFromDict (_dbg );if _fgac !=nil {return nil ,_fgac ;};_dgbg .PdfAnnotation =_bgg ;
_bgg ._caf =_dgbg ;return _bgg ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_dbe ,_eaf :=_bag .newPdfAnnotationPolyLineFromDict (_dbg );if _eaf !=nil {return nil ,_eaf ;};_dbe .PdfAnnotation =_bgg ;_bgg ._caf =_dbe ;return _bgg ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_bcb ,_ffeb :=_bag .newPdfAnnotationHighlightFromDict (_dbg );
if _ffeb !=nil {return nil ,_ffeb ;};_bcb .PdfAnnotation =_bgg ;_bgg ._caf =_bcb ;return _bgg ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_efed ,_egcc :=_bag .newPdfAnnotationUnderlineFromDict (_dbg );if _egcc !=nil {return nil ,_egcc ;};
_efed .PdfAnnotation =_bgg ;_bgg ._caf =_efed ;return _bgg ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_cgdc ,_ebc :=_bag .newPdfAnnotationSquigglyFromDict (_dbg );if _ebc !=nil {return nil ,_ebc ;};_cgdc .PdfAnnotation =_bgg ;_bgg ._caf =_cgdc ;
return _bgg ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_eccd ,_gcff :=_bag .newPdfAnnotationStrikeOut (_dbg );if _gcff !=nil {return nil ,_gcff ;};_eccd .PdfAnnotation =_bgg ;_bgg ._caf =_eccd ;return _bgg ,nil ;case "\u0043\u0061\u0072e\u0074":_cfff ,_gefe :=_bag .newPdfAnnotationCaretFromDict (_dbg );
if _gefe !=nil {return nil ,_gefe ;};_cfff .PdfAnnotation =_bgg ;_bgg ._caf =_cfff ;return _bgg ,nil ;case "\u0053\u0074\u0061m\u0070":_cgfgb ,_efbd :=_bag .newPdfAnnotationStampFromDict (_dbg );if _efbd !=nil {return nil ,_efbd ;};_cgfgb .PdfAnnotation =_bgg ;
_bgg ._caf =_cgfgb ;return _bgg ,nil ;case "\u0049\u006e\u006b":_eff ,_ddbf :=_bag .newPdfAnnotationInkFromDict (_dbg );if _ddbf !=nil {return nil ,_ddbf ;};_eff .PdfAnnotation =_bgg ;_bgg ._caf =_eff ;return _bgg ,nil ;case "\u0050\u006f\u0070u\u0070":_bbe ,_ebeb :=_bag .newPdfAnnotationPopupFromDict (_dbg );
if _ebeb !=nil {return nil ,_ebeb ;};_bbe .PdfAnnotation =_bgg ;_bgg ._caf =_bbe ;return _bgg ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_gde ,_fbd :=_bag .newPdfAnnotationFileAttachmentFromDict (_dbg );
if _fbd !=nil {return nil ,_fbd ;};_gde .PdfAnnotation =_bgg ;_bgg ._caf =_gde ;return _bgg ,nil ;case "\u0053\u006f\u0075n\u0064":_fgegd ,_bgbeg :=_bag .newPdfAnnotationSoundFromDict (_dbg );if _bgbeg !=nil {return nil ,_bgbeg ;};_fgegd .PdfAnnotation =_bgg ;
_bgg ._caf =_fgegd ;return _bgg ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_ebg ,_bdad :=_bag .newPdfAnnotationRichMediaFromDict (_dbg );if _bdad !=nil {return nil ,_bdad ;};_ebg .PdfAnnotation =_bgg ;_bgg ._caf =_ebg ;return _bgg ,nil ;
case "\u004d\u006f\u0076i\u0065":_bdfg ,_edad :=_bag .newPdfAnnotationMovieFromDict (_dbg );if _edad !=nil {return nil ,_edad ;};_bdfg .PdfAnnotation =_bgg ;_bgg ._caf =_bdfg ;return _bgg ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_bgc ,_fcge :=_bag .newPdfAnnotationScreenFromDict (_dbg );
if _fcge !=nil {return nil ,_fcge ;};_bgc .PdfAnnotation =_bgg ;_bgg ._caf =_bgc ;return _bgg ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_adgd ,_fdc :=_bag .newPdfAnnotationWidgetFromDict (_dbg );if _fdc !=nil {return nil ,_fdc ;};_adgd .PdfAnnotation =_bgg ;
_bgg ._caf =_adgd ;return _bgg ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bdaf ,_cea :=_bag .newPdfAnnotationPrinterMarkFromDict (_dbg );if _cea !=nil {return nil ,_cea ;};_bdaf .PdfAnnotation =_bgg ;_bgg ._caf =_bdaf ;
return _bgg ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_cebb ,_cdae :=_bag .newPdfAnnotationTrapNetFromDict (_dbg );if _cdae !=nil {return nil ,_cdae ;};_cebb .PdfAnnotation =_bgg ;_bgg ._caf =_cebb ;return _bgg ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_aed ,_gca :=_bag .newPdfAnnotationWatermarkFromDict (_dbg );
if _gca !=nil {return nil ,_gca ;};_aed .PdfAnnotation =_bgg ;_bgg ._caf =_aed ;return _bgg ,nil ;case "\u0033\u0044":_ebf ,_gacc :=_bag .newPdfAnnotation3DFromDict (_dbg );if _gacc !=nil {return nil ,_gacc ;};_ebf .PdfAnnotation =_bgg ;_bgg ._caf =_ebf ;
return _bgg ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_ccab ,_fae :=_bag .newPdfAnnotationProjectionFromDict (_dbg );if _fae !=nil {return nil ,_fae ;};_ccab .PdfAnnotation =_bgg ;_bgg ._caf =_ccab ;return _bgg ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_dbab ,_adf :=_bag .newPdfAnnotationRedactFromDict (_dbg );
if _adf !=nil {return nil ,_adf ;};_dbab .PdfAnnotation =_bgg ;_bgg ._caf =_dbab ;return _bgg ,nil ;};_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_gegb );
return nil ,nil ;};func (_fccdf *pdfFontSimple )getFontEncoding ()(_gddc string ,_afcfc map[_af .CharCode ]_af .GlyphName ,_cdbgd error ){_gddc ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _aeed ,_dddd :=_ebbed [_fccdf ._gagg ];
_dddd {_gddc =_aeed ;}else if _fccdf .fontFlags ()&_fdae !=0{for _acgc ,_ecfcc :=range _ebbed {if _fef .Contains (_fccdf ._gagg ,_acgc ){_gddc =_ecfcc ;break ;};};};if _fccdf .Encoding ==nil {return _gddc ,nil ,nil ;};switch _ecdd :=_fccdf .Encoding .(type ){case *_bcd .PdfObjectName :return string (*_ecdd ),nil ,nil ;
case *_bcd .PdfObjectDictionary :_dgga ,_aefeb :=_bcd .GetName (_ecdd .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _aefeb {_gddc =_dgga .String ();};if _geeg :=_ecdd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_geeg !=nil {_egfab ,_aafef :=_bcd .GetArray (_geeg );if !_aafef {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_ecdd ,_ecdd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_bcd .ErrTypeError ;};_afcfc ,_cdbgd =_af .FromFontDifferences (_egfab );};return _gddc ,_afcfc ,_cdbgd ;default:_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_fccdf .Encoding ,_fccdf .Encoding );
return "",nil ,_bcd .ErrTypeError ;};};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcd .PdfObject ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bcd .PdfObject ;FontFamily _bcd .PdfObject ;FontStretch _bcd .PdfObject ;FontWeight _bcd .PdfObject ;Flags _bcd .PdfObject ;FontBBox _bcd .PdfObject ;ItalicAngle _bcd .PdfObject ;Ascent _bcd .PdfObject ;Descent _bcd .PdfObject ;
Leading _bcd .PdfObject ;CapHeight _bcd .PdfObject ;XHeight _bcd .PdfObject ;StemV _bcd .PdfObject ;StemH _bcd .PdfObject ;AvgWidth _bcd .PdfObject ;MaxWidth _bcd .PdfObject ;MissingWidth _bcd .PdfObject ;FontFile _bcd .PdfObject ;FontFile2 _bcd .PdfObject ;
FontFile3 _bcd .PdfObject ;CharSet _bcd .PdfObject ;_fabe int ;_afae float64 ;*fontFile ;_fcfb *_aab .TtfType ;

// Additional entries for CIDFonts
Style _bcd .PdfObject ;Lang _bcd .PdfObject ;FD _bcd .PdfObject ;CIDSet _bcd .PdfObject ;_bfga *_bcd .PdfIndirectObject ;};func _gaage ()string {_dgecg .Lock ();defer _dgecg .Unlock ();return _gagae };

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_deffa *PdfColorspaceICCBased )ToPdfObject ()_bcd .PdfObject {_fecf :=&_bcd .PdfObjectArray {};_fecf .Append (_bcd .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _gcaf *_bcd .PdfObjectStream ;if _deffa ._bdbce !=nil {_gcaf =_deffa ._bdbce ;
}else {_gcaf =&_bcd .PdfObjectStream {};};_dffc :=_bcd .MakeDict ();_dffc .Set ("\u004e",_bcd .MakeInteger (int64 (_deffa .N )));if _deffa .Alternate !=nil {_dffc .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_deffa .Alternate .ToPdfObject ());};
if _deffa .Metadata !=nil {_dffc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_deffa .Metadata );};if _deffa .Range !=nil {var _gcdef []_bcd .PdfObject ;for _ ,_cagea :=range _deffa .Range {_gcdef =append (_gcdef ,_bcd .MakeFloat (_cagea ));
};_dffc .Set ("\u0052\u0061\u006eg\u0065",_bcd .MakeArray (_gcdef ...));};_dffc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcd .MakeInteger (int64 (len (_deffa .Data ))));_gcaf .Stream =_deffa .Data ;_gcaf .PdfObjectDictionary =_dffc ;_fecf .Append (_gcaf );
if _deffa ._fead !=nil {_deffa ._fead .PdfObject =_fecf ;return _deffa ._fead ;};return _fecf ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_eecaa *PdfField )FullName ()(string ,error ){var _cga _ge .Buffer ;_aabgg :=[]string {};if _eecaa .T !=nil {_aabgg =append (_aabgg ,_eecaa .T .Decoded ());};_dbaa :=map[*PdfField ]bool {};_dbaa [_eecaa ]=true ;_abcde :=_eecaa .Parent ;for _abcde !=nil {if _ ,_dddf :=_dbaa [_abcde ];
_dddf {return _cga .String (),_fcf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _abcde .T ==nil {return _cga .String (),_fcf .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_aabgg =append (_aabgg ,_abcde .T .Decoded ());_dbaa [_abcde ]=true ;_abcde =_abcde .Parent ;};for _babe :=len (_aabgg )-1;_babe >=0;_babe --{_cga .WriteString (_aabgg [_babe ]);if _babe > 0{_cga .WriteString ("\u002e");};};return _cga .String (),nil ;
};

// AddImageResource adds an image to the XObject resources.
func (_dbba *PdfPage )AddImageResource (name _bcd .PdfObjectName ,ximg *XObjectImage )error {var _dgafd *_bcd .PdfObjectDictionary ;if _dbba .Resources .XObject ==nil {_dgafd =_bcd .MakeDict ();_dbba .Resources .XObject =_dgafd ;}else {var _egaa bool ;
_dgafd ,_egaa =(_dbba .Resources .XObject ).(*_bcd .PdfObjectDictionary );if !_egaa {return _fcf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_dgafd .Set (name ,ximg .ToPdfObject ());
return nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_cdgbd *PdfPage )GetPageDict ()*_bcd .PdfObjectDictionary {_cfcf :=_cdgbd ._fgdec ;_cfcf .Clear ();_cfcf .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0050\u0061\u0067\u0065"));_cfcf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cdgbd .Parent );
if _cdgbd .LastModified !=nil {_cfcf .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cdgbd .LastModified .ToPdfObject ());};if _cdgbd .Resources !=nil {_cfcf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cdgbd .Resources .ToPdfObject ());
};if _cdgbd .CropBox !=nil {_cfcf .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_cdgbd .CropBox .ToPdfObject ());};if _cdgbd .MediaBox !=nil {_cfcf .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_cdgbd .MediaBox .ToPdfObject ());};if _cdgbd .BleedBox !=nil {_cfcf .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_cdgbd .BleedBox .ToPdfObject ());
};if _cdgbd .TrimBox !=nil {_cfcf .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_cdgbd .TrimBox .ToPdfObject ());};if _cdgbd .ArtBox !=nil {_cfcf .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_cdgbd .ArtBox .ToPdfObject ());};_cfcf .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_cdgbd .BoxColorInfo );
_cfcf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cdgbd .Contents );if _cdgbd .Rotate !=nil {_cfcf .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bcd .MakeInteger (*_cdgbd .Rotate ));};_cfcf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cdgbd .Group );
_cfcf .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_cdgbd .Thumb );_cfcf .SetIfNotNil ("\u0042",_cdgbd .B );_cfcf .SetIfNotNil ("\u0044\u0075\u0072",_cdgbd .Dur );_cfcf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cdgbd .Trans );_cfcf .SetIfNotNil ("\u0041\u0041",_cdgbd .AA );
_cfcf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cdgbd .Metadata );_cfcf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cdgbd .PieceInfo );_cfcf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cdgbd .StructParents );
_cfcf .SetIfNotNil ("\u0049\u0044",_cdgbd .ID );_cfcf .SetIfNotNil ("\u0050\u005a",_cdgbd .PZ );_cfcf .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_cdgbd .SeparationInfo );_cfcf .SetIfNotNil ("\u0054\u0061\u0062\u0073",_cdgbd .Tabs );
_cfcf .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_cdgbd .TemplateInstantiated );_cfcf .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_cdgbd .PresSteps );_cfcf .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_cdgbd .UserUnit );
_cfcf .SetIfNotNil ("\u0056\u0050",_cdgbd .VP );if _cdgbd ._gccae !=nil {_ddcfc :=_bcd .MakeArray ();for _ ,_ceba :=range _cdgbd ._gccae {if _aedd :=_ceba .GetContext ();_aedd !=nil {_ddcfc .Append (_aedd .ToPdfObject ());}else {_ddcfc .Append (_ceba .ToPdfObject ());
};};if _ddcfc .Len ()> 0{_cfcf .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_ddcfc );};}else if _cdgbd .Annots !=nil {_cfcf .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_cdgbd .Annots );};return _cfcf ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_aee :=NewPdfAction ();_dgeb :=&PdfActionHide {};_dgeb .PdfAction =_aee ;_aee .SetContext (_dgeb );return _dgeb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cefbf *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bcd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dedba ,_abfa :=_bcd .GetNumbersAsFloat (objects );
if _abfa !=nil {return nil ,_abfa ;};return _cefbf .ColorFromFloats (_dedba );};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bcd .PdfObject ;NewWindow _bcd .PdfObject ;T _bcd .PdfObject ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bcd .StreamEncoder ;Intent _bcd .PdfObject ;ImageMask _bcd .PdfObject ;Mask _bcd .PdfObject ;Matte _bcd .PdfObject ;Decode _bcd .PdfObject ;Interpolate _bcd .PdfObject ;
Alternatives _bcd .PdfObject ;SMask _bcd .PdfObject ;SMaskInData _bcd .PdfObject ;Name _bcd .PdfObject ;StructParent _bcd .PdfObject ;ID _bcd .PdfObject ;OPI _bcd .PdfObject ;Metadata _bcd .PdfObject ;OC _bcd .PdfObject ;Stream []byte ;_baedd *_bcd .PdfObjectStream ;
};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_bcd .PdfObjectArray ;ExtGState _bcd .PdfObject ;};func (_ggcd *PdfReader )newPdfAnnotationMovieFromDict (_bggf *_bcd .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_feeb :=PdfAnnotationMovie {};
_feeb .T =_bggf .Get ("\u0054");_feeb .Movie =_bggf .Get ("\u004d\u006f\u0076i\u0065");_feeb .A =_bggf .Get ("\u0041");return &_feeb ,nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_efad :=PdfColorDeviceGray (grayVal );return &_efad ;};func (_faef *PdfAppender )updateObjectsDeep (_eeb _bcd .PdfObject ,_bdfbd map[_bcd .PdfObject ]struct{}){if _bdfbd ==nil {_bdfbd =map[_bcd .PdfObject ]struct{}{};
};if _ ,_cced :=_bdfbd [_eeb ];_cced ||_eeb ==nil {return ;};_bdfbd [_eeb ]=struct{}{};_dbge :=_bcd .ResolveReferencesDeep (_eeb ,_faef ._affd );if _dbge !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbge );};switch _dffa :=_eeb .(type ){case *_bcd .PdfIndirectObject :switch {case _dffa .GetParser ()==_faef ._aagg ._aceagb :return ;
case _dffa .GetParser ()==_faef .Reader ._aceagb :_bfg ,_ :=_faef ._aagg .GetIndirectObjectByNumber (int (_dffa .ObjectNumber ));_cdcc ,_geae :=_bfg .(*_bcd .PdfIndirectObject );if _geae &&_cdcc !=nil {if _cdcc .PdfObject !=_dffa .PdfObject &&_cdcc .PdfObject .WriteString ()!=_dffa .PdfObject .WriteString (){_faef .addNewObject (_eeb );
_faef ._fedf [_eeb ]=_dffa .ObjectNumber ;};};default:_faef .addNewObject (_eeb );};_faef .updateObjectsDeep (_dffa .PdfObject ,_bdfbd );case *_bcd .PdfObjectArray :for _ ,_ddgg :=range _dffa .Elements (){_faef .updateObjectsDeep (_ddgg ,_bdfbd );};case *_bcd .PdfObjectDictionary :for _ ,_fbac :=range _dffa .Keys (){_faef .updateObjectsDeep (_dffa .Get (_fbac ),_bdfbd );
};case *_bcd .PdfObjectStreams :if _dffa .GetParser ()!=_faef ._aagg ._aceagb {for _ ,_dcg :=range _dffa .Elements (){_faef .updateObjectsDeep (_dcg ,_bdfbd );};};case *_bcd .PdfObjectStream :switch {case _dffa .GetParser ()==_faef ._aagg ._aceagb :return ;
case _dffa .GetParser ()==_faef .Reader ._aceagb :if _efca ,_acea :=_faef ._aagg ._aceagb .LookupByReference (_dffa .PdfObjectReference );_acea ==nil {var _dgcb bool ;if _abe ,_cefb :=_bcd .GetStream (_efca );_cefb &&_ge .Equal (_abe .Stream ,_dffa .Stream ){_dgcb =true ;
};if _fccd ,_eecc :=_bcd .GetDict (_efca );_dgcb &&_eecc {_dgcb =_fccd .WriteString ()==_dffa .PdfObjectDictionary .WriteString ();};if _dgcb {return ;};};if _dffa .ObjectNumber !=0{_faef ._fedf [_eeb ]=_dffa .ObjectNumber ;};default:if _ ,_ccdg :=_faef ._aefb [_eeb ];
!_ccdg {_faef .addNewObject (_eeb );};};_faef .updateObjectsDeep (_dffa .PdfObjectDictionary ,_bdfbd );};};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_afc :=NewPdfAnnotation ();_fdgb :=&PdfAnnotationSquare {};_fdgb .PdfAnnotation =_afc ;_fdgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afc .SetContext (_fdgb );return _fdgb ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_ebgb int64 ;_fegfa int64 ;_ffbec int64 ;_fceff int64 ;_bcgfff int64 ;_fgcfe int64 ;_cdbb byte ;_gdcg int64 ;_gfaed int64 ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_decg *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bdca ,_ggd :=color .(*PdfColorDeviceRGB );if !_ggd {_aa .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _bdca ,nil ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_dabac PdfModel ;_bdfe _bcd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_eeca *PdfAnnotationLink )ToPdfObject ()_bcd .PdfObject {_eeca .PdfAnnotation .ToPdfObject ();_agef :=_eeca ._dbd ;_gcea :=_agef .PdfObject .(*_bcd .PdfObjectDictionary );_gcea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u004c\u0069\u006e\u006b"));
if _eeca ._ded !=nil &&_eeca ._ded ._gc !=nil {_gcea .Set ("\u0041",_eeca ._ded ._gc .ToPdfObject ());}else if _eeca .A !=nil {_gcea .Set ("\u0041",_eeca .A );};_gcea .SetIfNotNil ("\u0044\u0065\u0073\u0074",_eeca .Dest );_gcea .SetIfNotNil ("\u0048",_eeca .H );
_gcea .SetIfNotNil ("\u0050\u0041",_eeca .PA );_gcea .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_eeca .QuadPoints );_gcea .SetIfNotNil ("\u0042\u0053",_eeca .BS );return _agef ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _fb .Time ){_dgecg .Lock ();defer _dgecg .Unlock ();_bcgeb =creationDate ;};func (_bbfg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_cfdb *_bcd .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_fcba :=PdfAnnotationFileAttachment {};
_edag ,_egcg :=_bbfg .newPdfAnnotationMarkupFromDict (_cfdb );if _egcg !=nil {return nil ,_egcg ;};_fcba .PdfAnnotationMarkup =_edag ;_fcba .FS =_cfdb .Get ("\u0046\u0053");_fcba .Name =_cfdb .Get ("\u004e\u0061\u006d\u0065");return &_fcba ,nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_eadag ,_ebgc :=_gae .Open (filePath );if _ebgc !=nil {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ebgc );
return nil ,_ebgc ;};defer _eadag .Close ();return NewCompositePdfFontFromTTF (_eadag );};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func _befa (_cddgd *_bcd .PdfObjectDictionary ){_gadc ,_eeaed :=_bcd .GetArray (_cddgd .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_ccdfd ,_ccea :=_bcd .GetIntVal (_cddgd .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_eafa ,_bdfab :=_bcd .GetIntVal (_cddgd .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _eeaed &&_ccea &&_bdfab {_cbge :=_gadc .Len ();if _cbge !=_eafa -_ccdfd +1{_aa .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_cbge ,_eafa );
_efgff :=_bcd .PdfObjectInteger (_ccdfd +_cbge -1);_cddgd .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_efgff );};};};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_daafe *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_dfbgf :=_daafe .GetContentStreamObjs ();wrapContents =wrapContents &&len (_dfbgf )> 0;_gbagg :=_bcd .NewFlateEncoder ();_eabdb :=_bcd .MakeArray ();if wrapContents {_cbgcf ,_fafbf :=_bcd .MakeStream ([]byte ("\u0071\u000a"),_gbagg );
if _fafbf !=nil {return _fafbf ;};_eabdb .Append (_cbgcf );};_eabdb .Append (_dfbgf ...);if wrapContents {_cdagd ,_cbagb :=_bcd .MakeStream ([]byte ("\u000a\u0051\u000a"),_gbagg );if _cbagb !=nil {return _cbagb ;};_eabdb .Append (_cdagd );};_adafe ,_gfcag :=_bcd .MakeStream (cs ,_gbagg );
if _gfcag !=nil {return _gfcag ;};_eabdb .Append (_adafe );_daafe .Contents =_eabdb ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbee *PdfAnnotationText )ToPdfObject ()_bcd .PdfObject {_dbee .PdfAnnotation .ToPdfObject ();_fddf :=_dbee ._dbd ;_eecb :=_fddf .PdfObject .(*_bcd .PdfObjectDictionary );if _dbee .PdfAnnotationMarkup !=nil {_dbee .PdfAnnotationMarkup .appendToPdfDictionary (_eecb );
};_eecb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0054\u0065\u0078\u0074"));_eecb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dbee .Open );_eecb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dbee .Name );_eecb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_dbee .State );
_eecb .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_dbee .StateModel );return _fddf ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_eecd *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_ffeag :=_eecd ._aceagb .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _ffeag {return nil ,_fcf .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_ffeag {return _eecd ,nil ;};if _eecd ._dbacf [revisionNumber ]!=nil {return _eecd ._dbacf [revisionNumber ],nil ;};_cecf :=_eecd ;for _ffafb :=_ffeag -1;_ffafb >=revisionNumber ;_ffafb --{_cagcbd ,_dagcf :=_cecf .GetPreviousRevision ();
if _dagcf !=nil {return nil ,_dagcf ;};_eecd ._dbacf [_ffafb ]=_cagcbd ;_cecf =_cagcbd ;};return _cecf ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_agega *PdfShading )GetContext ()PdfModel {return _agega ._ecdfcf };

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_eccg *modelManager )GetPrimitiveFromModel (model PdfModel )_bcd .PdfObject {_aebcd ,_eabb :=_eccg ._fbaag [model ];if !_eabb {return nil ;};return _aebcd ;};func (_ebfdd *PdfFunctionType0 )processSamples ()error {_gegef :=_gea .ResampleBytes (_ebfdd ._fcac ,_ebfdd .BitsPerSample );
_ebfdd ._egafb =_gegef ;return nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_aafcf *pdfFontSimple )ToPdfObject ()_bcd .PdfObject {if _aafcf ._dacc ==nil {_aafcf ._dacc =&_bcd .PdfIndirectObject {};};_efcdc :=_aafcf .baseFields ().asPdfObjectDictionary ("");_aafcf ._dacc .PdfObject =_efcdc ;if _aafcf .FirstChar !=nil {_efcdc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_aafcf .FirstChar );
};if _aafcf .LastChar !=nil {_efcdc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_aafcf .LastChar );};if _aafcf .Widths !=nil {_efcdc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_aafcf .Widths );};if _aafcf .Encoding !=nil {_efcdc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aafcf .Encoding );
}else if _aafcf ._gcega !=nil {_cgga :=_aafcf ._gcega .ToPdfObject ();if _cgga !=nil {_efcdc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cgga );};};return _aafcf ._dacc ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_gcdg *_aad .Document )error ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_efcgcb *PdfPageResources )SetXObjectImageByName (keyName _bcd .PdfObjectName ,ximg *XObjectImage )error {_adbda :=ximg .ToPdfObject ().(*_bcd .PdfObjectStream );_fbdfc :=_efcgcb .SetXObjectByName (keyName ,_adbda );return _fbdfc ;};func (_gdga *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _gdga ._agda };


// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_ecdc *PdfColorspaceLab )ColorFromPdfObjects (objects []_bcd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edda ,_egcd :=_bcd .GetNumbersAsFloat (objects );
if _egcd !=nil {return nil ,_egcd ;};return _ecdc .ColorFromFloats (_edda );};func _cfcab ()string {return _aa .Version };

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_ebfb *Image )ColorAt (x ,y int )(_fc .Color ,error ){_bgdd :=_gac .BytesPerLine (int (_ebfb .Width ),int (_ebfb .BitsPerComponent ),_ebfb .ColorComponents );switch _ebfb .ColorComponents {case 1:return _gac .ColorAtGrayscale (x ,y ,int (_ebfb .BitsPerComponent ),_bgdd ,_ebfb .Data ,_ebfb ._fbccc );
case 3:return _gac .ColorAtNRGBA (x ,y ,int (_ebfb .Width ),_bgdd ,int (_ebfb .BitsPerComponent ),_ebfb .Data ,_ebfb ._fafbg ,_ebfb ._fbccc );case 4:return _gac .ColorAtCMYK (x ,y ,int (_ebfb .Width ),_ebfb .Data ,_ebfb ._fbccc );};_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ebfb .ColorComponents ,_ebfb .BitsPerComponent );
return nil ,_fcf .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_gaed *PdfFontDescriptor )ToPdfObject ()_bcd .PdfObject {_cedcb :=_bcd .MakeDict ();if _gaed ._bfga ==nil {_gaed ._bfga =&_bcd .PdfIndirectObject {};};_gaed ._bfga .PdfObject =_cedcb ;_cedcb .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _gaed .FontName !=nil {_cedcb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gaed .FontName );};if _gaed .FontFamily !=nil {_cedcb .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_gaed .FontFamily );};if _gaed .FontStretch !=nil {_cedcb .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_gaed .FontStretch );
};if _gaed .FontWeight !=nil {_cedcb .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_gaed .FontWeight );};if _gaed .Flags !=nil {_cedcb .Set ("\u0046\u006c\u0061g\u0073",_gaed .Flags );};if _gaed .FontBBox !=nil {_cedcb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gaed .FontBBox );
};if _gaed .ItalicAngle !=nil {_cedcb .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_gaed .ItalicAngle );};if _gaed .Ascent !=nil {_cedcb .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_gaed .Ascent );};if _gaed .Descent !=nil {_cedcb .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_gaed .Descent );
};if _gaed .Leading !=nil {_cedcb .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_gaed .Leading );};if _gaed .CapHeight !=nil {_cedcb .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_gaed .CapHeight );};if _gaed .XHeight !=nil {_cedcb .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_gaed .XHeight );
};if _gaed .StemV !=nil {_cedcb .Set ("\u0053\u0074\u0065m\u0056",_gaed .StemV );};if _gaed .StemH !=nil {_cedcb .Set ("\u0053\u0074\u0065m\u0048",_gaed .StemH );};if _gaed .AvgWidth !=nil {_cedcb .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_gaed .AvgWidth );
};if _gaed .MaxWidth !=nil {_cedcb .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_gaed .MaxWidth );};if _gaed .MissingWidth !=nil {_cedcb .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_gaed .MissingWidth );};if _gaed .FontFile !=nil {_cedcb .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_gaed .FontFile );
};if _gaed .FontFile2 !=nil {_cedcb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_gaed .FontFile2 );};if _gaed .FontFile3 !=nil {_cedcb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_gaed .FontFile3 );};if _gaed .CharSet !=nil {_cedcb .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_gaed .CharSet );
};if _gaed .Style !=nil {_cedcb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gaed .FontName );};if _gaed .Lang !=nil {_cedcb .Set ("\u004c\u0061\u006e\u0067",_gaed .Lang );};if _gaed .FD !=nil {_cedcb .Set ("\u0046\u0044",_gaed .FD );};if _gaed .CIDSet !=nil {_cedcb .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_gaed .CIDSet );
};return _gaed ._bfga ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_gcebc *PdfReader )GetIndirectObjectByNumber (number int )(_bcd .PdfObject ,error ){_cead ,_ebddg :=_gcebc ._aceagb .LookupByNumber (number );return _cead ,_ebddg ;};

// ToPdfObject implements interface PdfModel.
func (_gdbge *PdfAnnotationCaret )ToPdfObject ()_bcd .PdfObject {_gdbge .PdfAnnotation .ToPdfObject ();_cbca :=_gdbge ._dbd ;_cagg :=_cbca .PdfObject .(*_bcd .PdfObjectDictionary );_gdbge .PdfAnnotationMarkup .appendToPdfDictionary (_cagg );_cagg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0043\u0061\u0072e\u0074"));
_cagg .SetIfNotNil ("\u0052\u0044",_gdbge .RD );_cagg .SetIfNotNil ("\u0053\u0079",_gdbge .Sy );return _cbca ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_ffec :=NewPdfAnnotation ();_dbcfc :=&PdfAnnotationRedact {};_dbcfc .PdfAnnotation =_ffec ;_dbcfc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffec .SetContext (_dbcfc );return _dbcfc ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_dfc *PdfAppender )SetDocInfo (info *PdfInfo ){_dfc ._afab =info };

// ToPdfObject implements interface PdfModel.
func (_cbf *PdfActionGoTo )ToPdfObject ()_bcd .PdfObject {_cbf .PdfAction .ToPdfObject ();_ea :=_cbf ._fgae ;_edf :=_ea .PdfObject .(*_bcd .PdfObjectDictionary );_edf .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeGoTo )));_edf .SetIfNotNil ("\u0044",_cbf .D );
return _ea ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bcd .PdfObject ;H _bcd .PdfObject ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_fecg *PdfPattern )SetContext (ctx PdfModel ){_fecg ._dabac =ctx };

// GetTrailer returns the PDF's trailer dictionary.
func (_eaeba *PdfReader )GetTrailer ()(*_bcd .PdfObjectDictionary ,error ){_acbf :=_eaeba ._aceagb .GetTrailer ();if _acbf ==nil {return nil ,_fcf .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _acbf ,nil ;
};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_accgf *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _accgf ._fcdb !=nil {return _accgf ._fcdb ,nil ;};if _accgf .ColorSpace ==nil {return nil ,nil ;};_cgbbe ,_fdgad :=_eadef (_accgf .ColorSpace );if _fdgad !=nil {return nil ,_fdgad ;
};_accgf ._fcdb =_cgbbe ;return _accgf ._fcdb ,nil ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_edga *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_ceac _ec .ReadSeeker ;_dafd *_bcd .PdfParser ;_aagg *PdfReader ;Reader *PdfReader ;_ebcd []*PdfPage ;_dde *PdfAcroForm ;_baf *DSS ;_gcde *Permissions ;_fegef _bcd .XrefTable ;_deae int64 ;_eafe int ;_gbbe []_bcd .PdfObject ;_aefb map[_bcd .PdfObject ]struct{};
_fedf map[_bcd .PdfObject ]int64 ;_aeaa map[_bcd .PdfObject ]struct{};_affd map[_bcd .PdfObject ]struct{};_edaag int64 ;_gad bool ;_geead string ;_fdag *EncryptOptions ;_afab *PdfInfo ;};

// IsValid checks if the given pdf output intent type is valid.
func (_faedb PdfOutputIntentType )IsValid ()bool {return _faedb >=PdfOutputIntentTypeA1 &&_faedb <=PdfOutputIntentTypeX ;};

// ReplacePage replaces the original page to a new page.
func (_gcfa *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_dbga :=pageNum -1;for _edd :=range _gcfa ._ebcd {if _edd ==_dbga {_cdagf :=page .Duplicate ();_gbcfg (_cdagf );_gcfa ._ebcd [_edd ]=_cdagf ;};};};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_gcb :=NewPdfAction ();_dge :=&PdfActionMovie {};_dge .PdfAction =_gcb ;_gcb .SetContext (_dge );return _dge ;};func (_cdbcc *PdfFilespec )getDict ()*_bcd .PdfObjectDictionary {if _cfdc ,_bfcf :=_cdbcc ._dgfe .(*_bcd .PdfIndirectObject );
_bfcf {_cgda ,_fedbd :=_cfdc .PdfObject .(*_bcd .PdfObjectDictionary );if !_fedbd {return nil ;};return _cgda ;}else if _fgbe ,_cbeb :=_cdbcc ._dgfe .(*_bcd .PdfObjectDictionary );_cbeb {return _fgbe ;}else {_aa .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_cdbcc ._dgfe );
return nil ;};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_caba *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _caba .UnderlyingCS ==nil {return nil ,_fcf .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _caba .UnderlyingCS .ColorFromFloats (vals );};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _fga .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_bcd .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_bcd .MakeInteger (int64 (permission )),V :_bcd .MakeName ("\u0031\u002e\u0032")};
};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_eafc :=&PdfOutlineItem {_adcb :_bcd .MakeIndirectObject (_bcd .MakeDict ())};_eafc ._gadg =_eafc ;return _eafc ;};func _bcedcf (_dgdbg *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_dgdbg }};


// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bcd .PdfObject ;LE _bcd .PdfObject ;BS _bcd .PdfObject ;IC _bcd .PdfObject ;BE _bcd .PdfObject ;IT _bcd .PdfObject ;Measure _bcd .PdfObject ;};var _ebbed =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// GetContentStream returns the pattern cell's content stream
func (_eadeb *PdfTilingPattern )GetContentStream ()([]byte ,error ){_ddegc ,_ ,_fagdf :=_eadeb .GetContentStreamWithEncoder ();return _ddegc ,_fagdf ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eedc *PdfColorspaceDeviceRGB )ToPdfObject ()_bcd .PdfObject {return _bcd .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// SetAnnotations sets the annotations list.
func (_bfafb *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_bfafb ._gccae =annotations };

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_efbc *PdfReader )GetEncryptionMethod ()string {_aabafd :=_efbc ._aceagb .GetCrypter ();return _aabafd .String ();};func (_efg *PdfReader )newPdfActionSetOCGStateFromDict (_bea *_bcd .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_bea .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_bea .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};func (_badbc *PdfWriter )writeObject (_cbgba int ,_efcec _bcd .PdfObject ){_aa .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_cbgba );if _aebcdb ,_ecfb :=_efcec .(*_bcd .PdfIndirectObject );_ecfb {_badbc ._dfafe [_cbgba ]=crossReference {Type :1,Offset :_badbc ._efgfc ,Generation :_aebcdb .GenerationNumber };
_gfafa :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbgba );if _cbefgf ,_cfcec :=_aebcdb .PdfObject .(*pdfSignDictionary );_cfcec {_cbefgf ._fbdfd =_badbc ._efgfc +int64 (len (_gfafa ));};if _aebcdb .PdfObject ==nil {_aa .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_aebcdb .PdfObject =_bcd .MakeNull ();};_gfafa +=_aebcdb .PdfObject .WriteString ();_gfafa +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_badbc .writeString (_gfafa );return ;};if _edeg ,_daeacb :=_efcec .(*_bcd .PdfObjectStream );_daeacb {_badbc ._dfafe [_cbgba ]=crossReference {Type :1,Offset :_badbc ._efgfc ,Generation :_edeg .GenerationNumber };
_ccgf :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbgba );_ccgf +=_edeg .PdfObjectDictionary .WriteString ();_ccgf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_badbc .writeString (_ccgf );_badbc .writeBytes (_edeg .Stream );
_badbc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _ebad ,_cebbc :=_efcec .(*_bcd .PdfObjectStreams );_cebbc {_badbc ._dfafe [_cbgba ]=crossReference {Type :1,Offset :_badbc ._efgfc ,Generation :_ebad .GenerationNumber };
_bbfdc :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbgba );var _deefd []string ;var _dgdbc string ;var _dcab int64 ;for _gacgg ,_beaed :=range _ebad .Elements (){_fccb ,_bbgfc :=_beaed .(*_bcd .PdfIndirectObject );if !_bbgfc {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_cbgba ,_beaed );
continue ;};_ddggb :=_fccb .PdfObject .WriteString ()+"\u0020";_dgdbc =_dgdbc +_ddggb ;_deefd =append (_deefd ,_f .Sprintf ("\u0025\u0064\u0020%\u0064",_fccb .ObjectNumber ,_dcab ));_badbc ._dfafe [int (_fccb .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_cbgba ,Index :_gacgg };
_dcab =_dcab +int64 (len ([]byte (_ddggb )));};_bbagf :=_fef .Join (_deefd ,"\u0020")+"\u0020";_dbbgb :=_bcd .NewFlateEncoder ();_ddaee :=_dbbgb .MakeStreamDict ();_ddaee .Set (_bcd .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bcd .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_cgag :=int64 (_ebad .Len ());_ddaee .Set (_bcd .PdfObjectName ("\u004e"),_bcd .MakeInteger (_cgag ));_gdedf :=int64 (len (_bbagf ));_ddaee .Set (_bcd .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bcd .MakeInteger (_gdedf ));_efdec ,_ :=_dbbgb .EncodeBytes ([]byte (_bbagf +_dgdbc ));
_fbbef :=int64 (len (_efdec ));_ddaee .Set (_bcd .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bcd .MakeInteger (_fbbef ));_bbfdc +=_ddaee .WriteString ();_bbfdc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_badbc .writeString (_bbfdc );
_badbc .writeBytes (_efdec );_badbc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_badbc .writeString (_efcec .WriteString ());};func (_bacag *PdfWriter )optimizeDocument ()error {if _bacag ._dfea ==nil {return nil ;
};_dadee ,_ddabc :=_bcd .GetDict (_bacag ._acdbc );if !_ddabc {return _fcf .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cbfaf :=_aad .Document {ID :[2]string {_bacag ._fbcec ,_bacag ._efadda },Version :_bacag ._cecgb ,Objects :_bacag ._cccfae ,Info :_dadee ,Crypt :_bacag ._bdaag ,UseHashBasedID :_bacag ._bedbc };if _gcgcb :=_bacag ._dfea .ApplyStandard (&_cbfaf );_gcgcb !=nil {return _gcgcb ;
};_bacag ._fbcec ,_bacag ._efadda =_cbfaf .ID [0],_cbfaf .ID [1];_bacag ._cecgb =_cbfaf .Version ;_bacag ._cccfae =_cbfaf .Objects ;_bacag ._acdbc .PdfObject =_cbfaf .Info ;_bacag ._bedbc =_cbfaf .UseHashBasedID ;_bacag ._bdaag =_cbfaf .Crypt ;_bfgdg :=make (map[_bcd .PdfObject ]struct{},len (_bacag ._cccfae ));
for _ ,_dgcba :=range _bacag ._cccfae {_bfgdg [_dgcba ]=struct{}{};};_bacag ._dgag =_bfgdg ;return nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_baag FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_baag .Mask ()&^fl .Mask ())};type pdfFont interface{_aab .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bcd .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fbefg *PdfSignature )GetContainingPdfObject ()_bcd .PdfObject {return _fbefg ._ebafa };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cfgbc *PdfShadingType3 )ToPdfObject ()_bcd .PdfObject {_cfgbc .PdfShading .ToPdfObject ();_deacb ,_aebbb :=_cfgbc .getShadingDict ();if _aebbb !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cfgbc .Coords !=nil {_deacb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_cfgbc .Coords );};if _cfgbc .Domain !=nil {_deacb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cfgbc .Domain );};if _cfgbc .Function !=nil {if len (_cfgbc .Function )==1{_deacb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cfgbc .Function [0].ToPdfObject ());
}else {_egbcg :=_bcd .MakeArray ();for _ ,_cfae :=range _cfgbc .Function {_egbcg .Append (_cfae .ToPdfObject ());};_deacb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egbcg );};};if _cfgbc .Extend !=nil {_deacb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_cfgbc .Extend );
};return _cfgbc ._gggef ;};

// IsCID returns true if the underlying font is CID.
func (_aaaac *PdfFont )IsCID ()bool {return _aaaac .baseFields ().isCIDFont ()};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_egace *PdfOutline )GetContainingPdfObject ()_bcd .PdfObject {return _egace ._ecac };

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_cda :=NewPdfAction ();_bce :=&PdfActionSetOCGState {};_bce .PdfAction =_cda ;_cda .SetContext (_bce );return _bce ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_cbacbe *PdfSignature )GetDocMDPPermission ()(_fga .DocMDPPermission ,bool ){for _ ,_fddb :=range _cbacbe .Reference .Elements (){if _fbcbgb ,_dfdd :=_bcd .GetDict (_fddb );_dfdd {if _adbgd ,_bdbfc :=_bcd .GetNameVal (_fbcbgb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_bdbfc &&_adbgd =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _fefef ,_cebfb :=_bcd .GetDict (_fbcbgb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_cebfb {if P ,_aced :=_bcd .GetIntVal (_fefef .Get ("\u0050"));
_aced {return _fga .DocMDPPermission (P ),true ;};};};};};return 0,false ;};

// ToPdfObject implements interface PdfModel.
func (_ebb *PdfAnnotationWidget )ToPdfObject ()_bcd .PdfObject {_ebb .PdfAnnotation .ToPdfObject ();_cbd :=_ebb ._dbd ;_aecf :=_cbd .PdfObject .(*_bcd .PdfObjectDictionary );if _ebb ._beaf {return _cbd ;};_ebb ._beaf =true ;_aecf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_aecf .SetIfNotNil ("\u0048",_ebb .H );_aecf .SetIfNotNil ("\u004d\u004b",_ebb .MK );_aecf .SetIfNotNil ("\u0041",_ebb .A );_aecf .SetIfNotNil ("\u0041\u0041",_ebb .AA );_aecf .SetIfNotNil ("\u0042\u0053",_ebb .BS );_gfbg :=_ebb .Parent ;if _ebb ._gge !=nil {if _ebb ._gge ._ebddc ==_ebb ._dbd {_ebb ._gge .ToPdfObject ();
};_gfbg =_ebb ._gge .GetContainingPdfObject ();};if _gfbg !=_cbd {_aecf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gfbg );};_ebb ._beaf =false ;return _cbd ;};func (_ac *PdfAnnotation )String ()string {_cgg :="";_eba ,_deea :=_ac .ToPdfObject ().(*_bcd .PdfIndirectObject );
if _deea {_cgg =_f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ac ._caf ,_eba .PdfObject .String ());};return _cgg ;};func _gbcbb (_bdabd *_bcd .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bggfb :=PdfShadingType7 {};_ffcd :=_bdabd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ffcd ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fecef ,_gceef :=_ffcd .(*_bcd .PdfObjectInteger );if !_gceef {_aa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ffcd );
return nil ,_bcd .ErrTypeError ;};_bggfb .BitsPerCoordinate =_fecef ;_ffcd =_bdabd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ffcd ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fecef ,_gceef =_ffcd .(*_bcd .PdfObjectInteger );if !_gceef {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ffcd );
return nil ,_bcd .ErrTypeError ;};_bggfb .BitsPerComponent =_fecef ;_ffcd =_bdabd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ffcd ==nil {_aa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fecef ,_gceef =_ffcd .(*_bcd .PdfObjectInteger );if !_gceef {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ffcd );
return nil ,_bcd .ErrTypeError ;};_bggfb .BitsPerComponent =_fecef ;_ffcd =_bdabd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ffcd ==nil {_aa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_effg ,_gceef :=_ffcd .(*_bcd .PdfObjectArray );if !_gceef {_aa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ffcd );
return nil ,_bcd .ErrTypeError ;};_bggfb .Decode =_effg ;if _dcbcc :=_bdabd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dcbcc !=nil {_bggfb .Function =[]PdfFunction {};if _gdegc ,_edgec :=_dcbcc .(*_bcd .PdfObjectArray );_edgec {for _ ,_gcceg :=range _gdegc .Elements (){_adee ,_acaac :=_bggfc (_gcceg );
if _acaac !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acaac );return nil ,_acaac ;};_bggfb .Function =append (_bggfb .Function ,_adee );
};}else {_egacd ,_fgbba :=_bggfc (_dcbcc );if _fgbba !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgbba );return nil ,_fgbba ;
};_bggfb .Function =append (_bggfb .Function ,_egacd );};};return &_bggfb ,nil ;};func (_ecbff *DSS )generateHashMap (_bebc []*_bcd .PdfObjectStream )(map[string ]*_bcd .PdfObjectStream ,error ){_bdaa :=map[string ]*_bcd .PdfObjectStream {};for _ ,_ebddd :=range _bebc {_edbb ,_adfba :=_bcd .DecodeStream (_ebddd );
if _adfba !=nil {return nil ,_adfba ;};_dfgb ,_adfba :=_ecfea (_edbb );if _adfba !=nil {return nil ,_adfba ;};_bdaa [string (_dfgb )]=_ebddd ;};return _bdaa ,nil ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dcecd *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _bggbb []*PdfField ;_ffce :=map[*_bcd .PdfIndirectObject ]struct{}{};for _ ,_efbdd :=range _dcecd .PageList {_fbbce ,_feae :=_efbdd .GetAnnotations ();if _feae !=nil {return _feae ;
};for _ ,_fdcba :=range _fbbce {var _cgcdd *PdfField ;switch _edeebd :=_fdcba .GetContext ().(type ){case *PdfAnnotationWidget :if _edeebd ._gge !=nil {_cgcdd =_edeebd ._gge ;break ;};if _ggbgb ,_cfadd :=_bcd .GetIndirect (_edeebd .Parent );_cfadd {_cgcdd ,_feae =_dcecd .newPdfFieldFromIndirectObject (_ggbgb ,nil );
if _feae ==nil {break ;};_aa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ggbgb ,_feae );
};if _edeebd ._dbd !=nil {_cgcdd ,_feae =_dcecd .newPdfFieldFromIndirectObject (_edeebd ._dbd ,nil );if _feae ==nil {break ;};_aa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_edeebd ._dbd ,_feae );
};};if _cgcdd ==nil {continue ;};if _ ,_ffgb :=_ffce [_cgcdd ._ebddc ];_ffgb {continue ;};_ffce [_cgcdd ._ebddc ]=struct{}{};_bggbb =append (_bggbb ,_cgcdd );};};if len (_bggbb )==0{return nil ;};if _dcecd .AcroForm ==nil {_dcecd .AcroForm =NewPdfAcroForm ();
};_dcecd .AcroForm .Fields =&_bggbb ;return nil ;};func _geegc (_abade *_bcd .PdfObjectDictionary )(*PdfShadingType2 ,error ){_adfae :=PdfShadingType2 {};_fddcg :=_abade .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fddcg ==nil {_aa .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_egdbe ,_bdfeg :=_fddcg .(*_bcd .PdfObjectArray );if !_bdfeg {_aa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fddcg );
return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _egdbe .Len ()!=4{_aa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_egdbe .Len ());
return nil ,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_adfae .Coords =_egdbe ;if _aabadc :=_abade .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_aabadc !=nil {_aabadc =_bcd .TraceToDirectObject (_aabadc );
_bcddgg ,_dcfgb :=_aabadc .(*_bcd .PdfObjectArray );if !_dcfgb {_aa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aabadc );return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_adfae .Domain =_bcddgg ;};_fddcg =_abade .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fddcg ==nil {_aa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_adfae .Function =[]PdfFunction {};if _aeaeg ,_ccbcc :=_fddcg .(*_bcd .PdfObjectArray );_ccbcc {for _ ,_cegfd :=range _aeaeg .Elements (){_aacfa ,_cfgfag :=_bggfc (_cegfd );if _cfgfag !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfgfag );
return nil ,_cfgfag ;};_adfae .Function =append (_adfae .Function ,_aacfa );};}else {_baec ,_cege :=_bggfc (_fddcg );if _cege !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cege );
return nil ,_cege ;};_adfae .Function =append (_adfae .Function ,_baec );};if _gabdb :=_abade .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gabdb !=nil {_gabdb =_bcd .TraceToDirectObject (_gabdb );_aedfb ,_bagb :=_gabdb .(*_bcd .PdfObjectArray );if !_bagb {_aa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gabdb );
return nil ,_bcd .ErrTypeError ;};if _aedfb .Len ()!=2{_aa .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aedfb .Len ());return nil ,ErrInvalidAttribute ;
};_adfae .Extend =_aedfb ;};return &_adfae ,nil ;};func (_aebcbd *PdfWriter )writeString (_ffgdb string ){if _aebcbd ._ffbff !=nil {return ;};_ccagc ,_afbcg :=_aebcbd ._cgeef .WriteString (_ffgdb );_aebcbd ._efgfc +=int64 (_ccagc );_aebcbd ._ffbff =_afbcg ;
};

// B returns the value of the B component of the color.
func (_fbedg *PdfColorCalRGB )B ()float64 {return _fbedg [1]};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_abgaf *PdfWriter )SetOptimizer (optimizer Optimizer ){_abgaf ._effd =optimizer };

// ToPdfObject implements interface PdfModel.
func (_afb *PdfAnnotationSound )ToPdfObject ()_bcd .PdfObject {_afb .PdfAnnotation .ToPdfObject ();_afcd :=_afb ._dbd ;_gbfc :=_afcd .PdfObject .(*_bcd .PdfObjectDictionary );_afb .PdfAnnotationMarkup .appendToPdfDictionary (_gbfc );_gbfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0053\u006f\u0075n\u0064"));
_gbfc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_afb .Sound );_gbfc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_afb .Name );return _afcd ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_gae .File ,error ){const _eece ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_gbddcc ,_geade :=_gae .Open (pdfFile );if _geade !=nil {return nil ,nil ,_geade ;};_gfada ,_geade :=_fedda (_gbddcc ,opts ,true ,_eece );if _geade !=nil {_gbddcc .Close ();return nil ,nil ,_geade ;};return _gfada ,_gbddcc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cebf *PdfAnnotationStamp )ToPdfObject ()_bcd .PdfObject {_cebf .PdfAnnotation .ToPdfObject ();_fbg :=_cebf ._dbd ;_gbfg :=_fbg .PdfObject .(*_bcd .PdfObjectDictionary );_cebf .PdfAnnotationMarkup .appendToPdfDictionary (_gbfg );_gbfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0053\u0074\u0061m\u0070"));
_gbfg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cebf .Name );return _fbg ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_dcggb *_bcd .PdfObjectDictionary ;};

// ToPdfObject implements interface PdfModel.
func (_cdbd *PdfActionSetOCGState )ToPdfObject ()_bcd .PdfObject {_cdbd .PdfAction .ToPdfObject ();_gbcc :=_cdbd ._fgae ;_dcb :=_gbcc .PdfObject .(*_bcd .PdfObjectDictionary );_dcb .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeSetOCGState )));
_dcb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cdbd .State );_dcb .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_cdbd .PreserveRB );return _gbcc ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bcd .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// Mask returns the uin32 bitmask for the specific flag.
func (_dagf FieldFlag )Mask ()uint32 {return uint32 (_dagf )};func (_cbdda *PdfWriter )setHashIDs (_adfbf _gd .Hash )error {_cgdgg :=_adfbf .Sum (nil );if _cbdda ._fbcec ==""{_cbdda ._fbcec =_dg .EncodeToString (_cgdgg [:8]);};_cbdda .setDocumentIDs (_cbdda ._fbcec ,_dg .EncodeToString (_cgdgg [8:]));
return nil ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_af .SimpleEncoder ,error ){_cdegb ,_dcgcd :=_gecfe (basefont );if _dcgcd !=nil {return nil ,nil ,_dcgcd ;};_cbagc ,_abdee :=_cdegb .Encoder ().(_af .SimpleEncoder );
if !_abdee {return nil ,nil ,_f .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_cdegb .Encoder ());
};_dcagg :=make (map[rune ]_af .GlyphName );for _fgfef :=range alphabet {if _ ,_cgee :=_cbagc .RuneToCharcode (_fgfef );!_cgee {_ ,_cageb :=_cdegb ._daeea .Read (_fgfef );if !_cageb {_aa .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_fgfef ,_fgfef );
continue ;};_fdgab ,_cageb :=_af .RuneToGlyph (_fgfef );if !_cageb {_aa .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_fgfef ,_fgfef );continue ;};if len (_dcagg )>=255{return nil ,nil ,_fcf .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_dcagg [_fgfef ]=_fdgab ;};};var (_cbcg []_af .CharCode ;_fbda []_af .CharCode ;);for _bgef :=_af .CharCode (1);_bgef <=0xff;_bgef ++{_bgcdd ,_acgfd :=_cbagc .CharcodeToRune (_bgef );if !_acgfd {_cbcg =append (_cbcg ,_bgef );continue ;};if _ ,_acgfd =alphabet [_bgcdd ];
!_acgfd {_fbda =append (_fbda ,_bgef );};};_dfda :=append (_cbcg ,_fbda ...);if len (_dfda )< len (_dcagg ){return nil ,nil ,_f .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_dcagg ),len (_dfda ));
};_ggeb :=make ([]rune ,0,len (_dcagg ));for _eaade :=range _dcagg {_ggeb =append (_ggeb ,_eaade );};_fg .Slice (_ggeb ,func (_fdedc ,_cbga int )bool {return _ggeb [_fdedc ]< _ggeb [_cbga ]});_ecbbd :=make (map[_af .CharCode ]_af .GlyphName ,len (_ggeb ));
for _ ,_eecf :=range _ggeb {_acbg :=_dfda [0];_dfda =_dfda [1:];_ecbbd [_acbg ]=_dcagg [_eecf ];};_cbagc =_af .ApplyDifferences (_cbagc ,_ecbbd );_cdegb .SetEncoder (_cbagc );return &PdfFont {_fbcb :&_cdegb },_cbagc ,nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_abb *PdfColorspaceCalGray )ToPdfObject ()_bcd .PdfObject {_cedc :=&_bcd .PdfObjectArray {};_cedc .Append (_bcd .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_cfdd :=_bcd .MakeDict ();if _abb .WhitePoint !=nil {_cfdd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bcd .MakeArray (_bcd .MakeFloat (_abb .WhitePoint [0]),_bcd .MakeFloat (_abb .WhitePoint [1]),_bcd .MakeFloat (_abb .WhitePoint [2])));
}else {_aa .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _abb .BlackPoint !=nil {_cfdd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bcd .MakeArray (_bcd .MakeFloat (_abb .BlackPoint [0]),_bcd .MakeFloat (_abb .BlackPoint [1]),_bcd .MakeFloat (_abb .BlackPoint [2])));
};_cfdd .Set ("\u0047\u0061\u006dm\u0061",_bcd .MakeFloat (_abb .Gamma ));_cedc .Append (_cfdd );if _abb ._faf !=nil {_abb ._faf .PdfObject =_cedc ;return _abb ._faf ;};return _cedc ;};type modelManager struct{_fbaag map[PdfModel ]_bcd .PdfObject ;_begdf map[_bcd .PdfObject ]PdfModel ;
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bbbb pdfFontType3 )GetRuneMetrics (r rune )(_aab .CharMetrics ,bool ){_dcafg :=_bbbb .Encoder ();if _dcafg ==nil {_aa .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_bbbb );
return _aab .CharMetrics {},false ;};_begd ,_cdeda :=_dcafg .RuneToCharcode (r );if !_cdeda {if r !=' '{_aa .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_bbbb );
};return _aab .CharMetrics {},false ;};_eedbe ,_cfdf :=_bbbb .GetCharMetrics (_begd );return _eedbe ,_cfdf ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_fcc :=NewPdfAnnotation ();_dfb :=&PdfAnnotationCircle {};_dfb .PdfAnnotation =_fcc ;_dfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcc .SetContext (_dfb );return _dfb ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_cfedc *pdfCIDFontType0 )ToPdfObject ()_bcd .PdfObject {return _bcd .MakeNull ()};func _bbeda ()_fb .Time {_dgecg .Lock ();defer _dgecg .Unlock ();return _feegg };

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_ddegg byte )byte ;

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_cabac *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_cabac .ToPdfOutline ().PdfOutlineTreeNode ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_caccc *_bcd .PdfObjectDictionary ;};

// ToPdfObject implements interface PdfModel.
func (_ddbd *PdfAnnotationStrikeOut )ToPdfObject ()_bcd .PdfObject {_ddbd .PdfAnnotation .ToPdfObject ();_dfg :=_ddbd ._dbd ;_ddba :=_dfg .PdfObject .(*_bcd .PdfObjectDictionary );_ddbd .PdfAnnotationMarkup .appendToPdfDictionary (_ddba );_ddba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_ddba .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ddbd .QuadPoints );return _dfg ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bcd .PdfObjectStream )(*XObjectForm ,error ){_ecfff :=&XObjectForm {};_ecfff ._bcgbb =stream ;_afbeb :=*(stream .PdfObjectDictionary );_aagab ,_aedce :=_bcd .NewEncoderFromStream (stream );if _aedce !=nil {return nil ,_aedce ;
};_ecfff .Filter =_aagab ;if _fgdgb :=_afbeb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_fgdgb !=nil {_gebaa ,_gbdgg :=_fgdgb .(*_bcd .PdfObjectName );if !_gbdgg {return nil ,_fcf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_gebaa !="\u0046\u006f\u0072\u006d"{_aa .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fcf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _acgbc :=_afbeb .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_acgbc !=nil {_ecfff .FormType =_acgbc ;};if _afeec :=_afbeb .Get ("\u0042\u0042\u006f\u0078");_afeec !=nil {_ecfff .BBox =_afeec ;};if _edegg :=_afbeb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_edegg !=nil {_ecfff .Matrix =_edegg ;};if _bcdbe :=_afbeb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bcdbe !=nil {_bcdbe =_bcd .TraceToDirectObject (_bcdbe );_geeee ,_eafda :=_bcdbe .(*_bcd .PdfObjectDictionary );if !_eafda {_aa .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bcd .ErrTypeError ;};_abcdec ,_bgfef :=NewPdfPageResourcesFromDict (_geeee );if _bgfef !=nil {_aa .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_bgfef ;};_ecfff .Resources =_abcdec ;_aa .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ecfff .Resources );};_ecfff .Group =_afbeb .Get ("\u0047\u0072\u006fu\u0070");
_ecfff .Ref =_afbeb .Get ("\u0052\u0065\u0066");_ecfff .MetaData =_afbeb .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ecfff .PieceInfo =_afbeb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ecfff .LastModified =_afbeb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_ecfff .StructParent =_afbeb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ecfff .StructParents =_afbeb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ecfff .OPI =_afbeb .Get ("\u004f\u0050\u0049");
_ecfff .OC =_afbeb .Get ("\u004f\u0043");_ecfff .Name =_afbeb .Get ("\u004e\u0061\u006d\u0065");_ecfff .Stream =stream .Stream ;return _ecfff ,nil ;};func _bcbdd (_dfbfb *_bcd .PdfObjectArray )(float64 ,error ){_cgcb ,_fcaeg :=_dfbfb .ToFloat64Array ();
if _fcaeg !=nil {_aa .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dfbfb ,_fcaeg );};switch len (_cgcb ){case 1:return _cgcb [0],nil ;
case 3:_cgad :=PdfColorspaceDeviceRGB {};_baedgfa ,_dbdfc :=_cgad .ColorFromFloats (_cgcb );if _dbdfc !=nil {return 0.0,_dbdfc ;};return _baedgfa .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_gbfbb :=PdfColorspaceDeviceCMYK {};_aebgd ,_efbba :=_gbfbb .ColorFromFloats (_cgcb );
if _efbba !=nil {return 0.0,_efbba ;};_ebebf ,_efbba :=_gbfbb .ColorToRGB (_aebgd .(*PdfColorDeviceCMYK ));if _efbba !=nil {return 0.0,_efbba ;};return _ebebf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_fcaeg =_fcf .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_aa .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dfbfb ,_fcaeg );return 0.0,_fcaeg ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_fgbfe *PdfPageResources )HasFontByName (keyName _bcd .PdfObjectName )bool {_ ,_ddcce :=_fgbfe .GetFontByName (keyName );return _ddcce ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bcd .PdfObject ;Open _bcd .PdfObject ;};func (_cggd *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_bcgda []byte )(_dfce int ,_bbbfd error );};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bacba *PdfReader )GetNamedDestinations ()(_bcd .PdfObject ,error ){_acddg :=_bcd .ResolveReference (_bacba ._babac .Get ("\u0044\u0065\u0073t\u0073"));if _acddg ==nil {return nil ,nil ;};if !_bacba ._aacc {_bdgcg :=_bacba .traverseObjectData (_acddg );
if _bdgcg !=nil {return nil ,_bdgcg ;};};return _acddg ,nil ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bcd .PdfObjectName ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bcd .PdfObject ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_gfcg *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gfcg .Alternate ==nil {_aa .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gfcg .N ==1{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_eaaaf :=NewPdfColorspaceDeviceGray ();return _eaaaf .ColorToRGB (color );}else if _gfcg .N ==3{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _gfcg .N ==4{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_agab :=NewPdfColorspaceDeviceCMYK ();return _agab .ColorToRGB (color );}else {return nil ,_fcf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_aa .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gfcg );
return _gfcg .Alternate .ColorToRGB (color );};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bcd .PdfObject ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_cfceg *PdfReader )PageFromIndirectObject (ind *_bcd .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_cfceg .PageList )!=len (_cfceg ._aaffe ){return nil ,0,_fcf .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _egfae ,_fffda :=range _cfceg ._aaffe {if _fffda ==ind {return _cfceg .PageList [_egfae ],_egfae +1,nil ;};};return nil ,0,_fcf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_ggde *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _fdbcb :=_ggde ._agda ;
_fdbcb !=nil {return _fdbcb ;};return _ggde ._eaba ;};func (_eged *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_ffdef _ec .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_gcgc _ga .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_fgbd _ga .Image )(*Image ,error );

// Compress an image.
Compress (_edbab *Image ,_daegge int64 )(*Image ,error );};

// Height returns the height of `rect`.
func (_feagc *PdfRectangle )Height ()float64 {return _cc .Abs (_feagc .Ury -_feagc .Lly )};func _ddbbc (_gadea *_bcd .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cdeaa :=PdfShadingType3 {};_bbgbb :=_gadea .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _bbgbb ==nil {_aa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;
};_cbba ,_gfacac :=_bbgbb .(*_bcd .PdfObjectArray );if !_gfacac {_aa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbgbb );return nil ,_bcd .ErrTypeError ;
};if _cbba .Len ()!=6{_aa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cbba .Len ());return nil ,ErrInvalidAttribute ;};_cdeaa .Coords =_cbba ;
if _fbddf :=_gadea .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fbddf !=nil {_fbddf =_bcd .TraceToDirectObject (_fbddf );_dgegf ,_dbfbd :=_fbddf .(*_bcd .PdfObjectArray );if !_dbfbd {_aa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbddf );
return nil ,_bcd .ErrTypeError ;};_cdeaa .Domain =_dgegf ;};_bbgbb =_gadea .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bbgbb ==nil {_aa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cdeaa .Function =[]PdfFunction {};if _gfed ,_fbabc :=_bbgbb .(*_bcd .PdfObjectArray );_fbabc {for _ ,_eebfa :=range _gfed .Elements (){_gdffe ,_dadad :=_bggfc (_eebfa );if _dadad !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dadad );
return nil ,_dadad ;};_cdeaa .Function =append (_cdeaa .Function ,_gdffe );};}else {_bfgeg ,_fgedg :=_bggfc (_bbgbb );if _fgedg !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgedg );
return nil ,_fgedg ;};_cdeaa .Function =append (_cdeaa .Function ,_bfgeg );};if _gcef :=_gadea .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gcef !=nil {_gcef =_bcd .TraceToDirectObject (_gcef );_geeca ,_cggc :=_gcef .(*_bcd .PdfObjectArray );if !_cggc {_aa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcef );
return nil ,_bcd .ErrTypeError ;};if _geeca .Len ()!=2{_aa .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_geeca .Len ());return nil ,ErrInvalidAttribute ;
};_cdeaa .Extend =_geeca ;};return &_cdeaa ,nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_ggfdb *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_gbggb :=_ggfdb .fill (provider ,appGen );if _gbggb !=nil {return _gbggb ;};if _ ,_deaf :=provider .(FieldImageProvider );_deaf {_gbggb =_ggfdb .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _gbggb ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bcd .PdfObjectArray ;Domain *_bcd .PdfObjectArray ;Function []PdfFunction ;Extend *_bcd .PdfObjectArray ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_dbeg *PdfColorspaceICCBased )GetContainingPdfObject ()_bcd .PdfObject {return _dbeg ._bdbce };

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_ebab :=&PdfBorderStyle {};return _ebab };

// GetSubFilter returns SubFilter value or empty string.
func (_daece *pdfSignDictionary )GetSubFilter ()string {_fcaaf :=_daece .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _fcaaf ==nil {return "";};if _cdfef ,_dfefgf :=_bcd .GetNameVal (_fcaaf );_dfefgf {return _cdfef ;};return "";};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_bee :=NewPdfAction ();_gcc :=&PdfActionResetForm {};_gcc .PdfAction =_bee ;_bee .SetContext (_gcc );return _gcc ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bcd .PdfObjectInteger ;BitsPerComponent *_bcd .PdfObjectInteger ;BitsPerFlag *_bcd .PdfObjectInteger ;Decode *_bcd .PdfObjectArray ;Function []PdfFunction ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_ddca *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fcf .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_fgd ,_acaa :=_gac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fafbg ,img ._fbccc );if _acaa !=nil {return img ,_acaa ;};_egbgf ,_acaa :=_gac .NRGBAConverter .Convert (_fgd );if _acaa !=nil {return img ,_acaa ;
};_dgdeg :=_bbbcd (_egbgf .Base ());_aa .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_aa .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_aa .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_dgdeg .Data );
_aa .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_dgdeg );return _dgdeg ,nil ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _ec .ReadSeeker )(*CompliancePdfReader ,error ){const _aaad ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_bdbf ,_bceb :=_fedda (rs ,&ReaderOpts {ComplianceMode :true },false ,_aaad );
if _bceb !=nil {return nil ,_bceb ;};return &CompliancePdfReader {PdfReader :_bdbf },nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_abadc *PdfFunctionType3 )ToPdfObject ()_bcd .PdfObject {_ggegc :=_bcd .MakeDict ();_ggegc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcd .MakeInteger (3));_gacgdc :=&_bcd .PdfObjectArray {};for _ ,_acga :=range _abadc .Domain {_gacgdc .Append (_bcd .MakeFloat (_acga ));
};_ggegc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gacgdc );if _abadc .Range !=nil {_bfec :=&_bcd .PdfObjectArray {};for _ ,_abfcg :=range _abadc .Range {_bfec .Append (_bcd .MakeFloat (_abfcg ));};_ggegc .Set ("\u0052\u0061\u006eg\u0065",_bfec );};
if _abadc .Functions !=nil {_gaac :=&_bcd .PdfObjectArray {};for _ ,_dedf :=range _abadc .Functions {_gaac .Append (_dedf .ToPdfObject ());};_ggegc .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_gaac );};if _abadc .Bounds !=nil {_abab :=&_bcd .PdfObjectArray {};
for _ ,_agagg :=range _abadc .Bounds {_abab .Append (_bcd .MakeFloat (_agagg ));};_ggegc .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_abab );};if _abadc .Encode !=nil {_gaffa :=&_bcd .PdfObjectArray {};for _ ,_bcgee :=range _abadc .Encode {_gaffa .Append (_bcd .MakeFloat (_bcgee ));
};_ggegc .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_gaffa );};if _abadc ._efeaf !=nil {_abadc ._efeaf .PdfObject =_ggegc ;return _abadc ._efeaf ;};return _ggegc ;};func (_efadf *DSS )addCRLs (_ecaa [][]byte )([]*_bcd .PdfObjectStream ,error ){return _efadf .add (&_efadf .CRLs ,_efadf ._gfbge ,_ecaa );
};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bcd .PdfObject ;Movie _bcd .PdfObject ;A _bcd .PdfObject ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ede :=&PdfAction {};_ede ._fgae =_bcd .MakeIndirectObject (_bcd .MakeDict ());return _ede ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_afgeg *PdfTilingPattern )ToPdfObject ()_bcd .PdfObject {_afgeg .PdfPattern .ToPdfObject ();_ceebd :=_afgeg .getDict ();if _afgeg .PaintType !=nil {_ceebd .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_afgeg .PaintType );};if _afgeg .TilingType !=nil {_ceebd .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_afgeg .TilingType );
};if _afgeg .BBox !=nil {_ceebd .Set ("\u0042\u0042\u006f\u0078",_afgeg .BBox .ToPdfObject ());};if _afgeg .XStep !=nil {_ceebd .Set ("\u0058\u0053\u0074e\u0070",_afgeg .XStep );};if _afgeg .YStep !=nil {_ceebd .Set ("\u0059\u0053\u0074e\u0070",_afgeg .YStep );
};if _afgeg .Resources !=nil {_ceebd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_afgeg .Resources .ToPdfObject ());};if _afgeg .Matrix !=nil {_ceebd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_afgeg .Matrix );};return _afgeg ._bdfe ;};

// GetContentStream returns the XObject Form's content stream.
func (_ebbag *XObjectForm )GetContentStream ()([]byte ,error ){_cbaf ,_fbfc :=_bcd .DecodeStream (_ebbag ._bcgbb );if _fbfc !=nil {return nil ,_fbfc ;};return _cbaf ,nil ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_dgecg .Lock ();defer _dgecg .Unlock ();_ceggd =producer };var _caefa =false ;

// ToPdfObject implements interface PdfModel.
func (_fdabd *PdfTransformParamsDocMDP )ToPdfObject ()_bcd .PdfObject {_aedb :=_bcd .MakeDict ();_aedb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fdabd .Type );_aedb .SetIfNotNil ("\u0056",_fdabd .V );_aedb .SetIfNotNil ("\u0050",_fdabd .P );return _aedb ;
};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_eagea *PdfShading )GetContainingPdfObject ()_bcd .PdfObject {return _eagea ._gggef };func (_ffdgc *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_bccbb *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _bccbb ._eagbc ==nil {_bccbb ._eagbc =_bc .NewPSExecutor (_bccbb .Program );};var _eabf []_bc .PSObject ;for _ ,_dffcd :=range xVec {_eabf =append (_eabf ,_bc .MakeReal (_dffcd ));
};_ddcfd ,_dcaga :=_bccbb ._eagbc .Execute (_eabf );if _dcaga !=nil {return nil ,_dcaga ;};_daaa ,_dcaga :=_bc .PSObjectArrayToFloat64Array (_ddcfd );if _dcaga !=nil {return nil ,_dcaga ;};return _daaa ,nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_aaee *_bcd .PdfIndirectObject ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// ToPdfObject returns the PDF representation of the page resources.
func (_ffbf *PdfPageResources )ToPdfObject ()_bcd .PdfObject {_dfefc :=_ffbf ._ecbbg ;_dfefc .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ffbf .ExtGState );if _ffbf ._fcdb !=nil {_ffbf .ColorSpace =_ffbf ._fcdb .ToPdfObject ();};_dfefc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ffbf .ColorSpace );
_dfefc .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_ffbf .Pattern );_dfefc .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ffbf .Shading );_dfefc .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_ffbf .XObject );_dfefc .SetIfNotNil ("\u0046\u006f\u006e\u0074",_ffbf .Font );
_dfefc .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_ffbf .ProcSet );_dfefc .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_ffbf .Properties );return _dfefc ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_cdad *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_fdbg :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_abcda ,_ecaab :=_cdad .GetNumPages ();if _ecaab !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecaab );
return nil ,_ecaab ;};for _bega :=1;_bega <=_abcda ;_bega ++{_fcdfe ,_dgaff :=_cdad .GetPage (_bega );if _dgaff !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgaff );return nil ,_dgaff ;};if opts .PageProcessCallback !=nil {_dgaff =opts .PageProcessCallback (_bega ,_fcdfe );
if _dgaff !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgaff );return nil ,_dgaff ;};}else if opts .PageCallback !=nil {opts .PageCallback (_bega ,_fcdfe );};_dgaff =_fdbg .AddPage (_fcdfe );if _dgaff !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgaff );
return nil ,_dgaff ;};};_fdbg ._cecgb =_cdad .PdfVersion ();if !opts .SkipInfo {_afadf ,_adfbe :=_cdad .GetPdfInfo ();if _adfbe !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adfbe );}else {_fdbg ._acdbc .PdfObject =_afadf .ToPdfObject ();
};};if !opts .SkipMetadata {if _efcgg :=_cdad ._babac .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_efcgg !=nil {if _gabf :=_fdbg .SetCatalogMetadata (_efcgg );_gabf !=nil {return nil ,_gabf ;};};};if !opts .SkipAcroForm {_dbgfb :=_fdbg .SetForms (_cdad .AcroForm );
if _dbgfb !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbgfb );return nil ,_dbgfb ;};};if !opts .SkipOutlines {_fdbg .AddOutlineTree (_cdad .GetOutlineTree ());};if !opts .SkipOCProperties {_ecbbdf ,_cfdg :=_cdad .GetOCProperties ();
if _cfdg !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfdg );}else {_cfdg =_fdbg .SetOCProperties (_ecbbdf );if _cfdg !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfdg );};};};if !opts .SkipPageLabels {_dbeege ,_eabdf :=_cdad .GetPageLabels ();
if _eabdf !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabdf );}else {_eabdf =_fdbg .SetPageLabels (_dbeege );if _eabdf !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabdf );};};};if !opts .SkipNamedDests {_defb ,_cfdbe :=_cdad .GetNamedDestinations ();
if _cfdbe !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfdbe );}else {_cfdbe =_fdbg .SetNamedDestinations (_defb );if _cfdbe !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfdbe );};};};if !opts .SkipNameDictionary {_gdebc ,_aeaee :=_cdad .GetNameDictionary ();
if _aeaee !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aeaee );}else {_aeaee =_fdbg .SetNameDictionary (_gdebc );if _aeaee !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aeaee );};};};if !opts .SkipRotation &&_cdad .Rotate !=nil {if _bgedb :=_fdbg .SetRotation (*_cdad .Rotate );
_bgedb !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgedb );};};return &_fdbg ,nil ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;
);

// AddExtGState adds a graphics state to the XObject resources.
func (_cfadc *PdfPage )AddExtGState (name _bcd .PdfObjectName ,egs *_bcd .PdfObjectDictionary )error {if _cfadc .Resources ==nil {_cfadc .Resources =NewPdfPageResources ();};if _cfadc .Resources .ExtGState ==nil {_cfadc .Resources .ExtGState =_bcd .MakeDict ();
};_dgab ,_bdcff :=_bcd .TraceToDirectObject (_cfadc .Resources .ExtGState ).(*_bcd .PdfObjectDictionary );if !_bdcff {_aa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bcd .TraceToDirectObject (_cfadc .Resources .ExtGState ));
return _fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dgab .Set (name ,egs );return nil ;};func (_aaaad *pdfFontSimple )addEncoding ()error {var (_ggfggd string ;_gbcg map[_af .CharCode ]_af .GlyphName ;
_bfcc _af .SimpleEncoder ;);if _aaaad .Encoder ()!=nil {_gcbgb ,_bfddf :=_aaaad .Encoder ().(_af .SimpleEncoder );if _bfddf &&_gcbgb !=nil {_ggfggd =_gcbgb .BaseName ();};};if _aaaad .Encoding !=nil {_eaec ,_affba ,_efbf :=_aaaad .getFontEncoding ();if _efbf !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aaaad ._gagg ,_aaaad ._ffaca ,_aaaad .Encoding ,_aaaad .Encoding ,_efbf );
return _efbf ;};if _eaec !=""{_ggfggd =_eaec ;};_gbcg =_affba ;_bfcc ,_efbf =_af .NewSimpleTextEncoder (_ggfggd ,_gbcg );if _efbf !=nil {return _efbf ;};};if _bfcc ==nil {_afdce :=_aaaad ._agda ;if _afdce !=nil {switch _aaaad ._ffaca {case "\u0054\u0079\u0070e\u0031":if _afdce .fontFile !=nil &&_afdce .fontFile ._fbfa !=nil {_aa .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_bfcc =_afdce .fontFile ._fbfa ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _afdce ._fcfb !=nil {_aa .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_affbb ,_deacf :=_afdce ._fcfb .MakeEncoder ();
if _deacf ==nil {_bfcc =_affbb ;};};};};};if _bfcc !=nil {if _gbcg !=nil {_aa .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gbcg ,_aaaad .baseFields ());
_bfcc =_af .ApplyDifferences (_bfcc ,_gbcg );};_aaaad .SetEncoder (_bfcc );};return nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_ebddc :_bcd .MakeIndirectObject (_bcd .MakeDict ())}};

// GetContentStreams returns the content stream as an array of strings.
func (_ebfe *PdfPage )GetContentStreams ()([]string ,error ){_dcggd :=_ebfe .GetContentStreamObjs ();var _cebcce []string ;for _ ,_agfc :=range _dcggd {_egebe ,_eebbb :=_ddfb (_agfc );if _eebbb !=nil {return nil ,_eebbb ;};_cebcce =append (_cebcce ,_egebe );
};return _cebcce ,nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func (_dffe *DSS )addOCSPs (_dfbeb [][]byte )([]*_bcd .PdfObjectStream ,error ){return _dffe .add (&_dffe .OCSPs ,_dffe ._beca ,_dfbeb );};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_dgba :=NewPdfAnnotation ();_cgd :=&PdfAnnotationText {};_cgd .PdfAnnotation =_dgba ;_cgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgba .SetContext (_cgd );return _cgd ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_fbgab *PdfField )GetContext ()PdfModel {return _fbgab ._bacb };func (_dgeg *LTV )getOCSPs (_bfbce []*_b .Certificate ,_feefb map[string ]*_b .Certificate )([][]byte ,error ){_bgba :=make ([][]byte ,0,len (_bfbce ));for _ ,_aagcb :=range _bfbce {for _ ,_cfgg :=range _aagcb .OCSPServer {if _dgeg .CertClient .IsCA (_aagcb ){continue ;
};_fdcd ,_bafcg :=_feefb [_aagcb .Issuer .CommonName ];if !_bafcg {_aa .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_efcgb ,_febf :=_dgeg .OCSPClient .MakeRequest (_cfgg ,_aagcb ,_fdcd );if _febf !=nil {_aa .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_febf );
continue ;};_bgba =append (_bgba ,_efcgb );};};return _bgba ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_egccd *PdfField )Flags ()FieldFlag {var _gfecc FieldFlag ;_cffag ,_acgf :=_egccd .inherit (func (_fcdgd *PdfField )bool {if _fcdgd .Ff !=nil {_gfecc =FieldFlag (*_fcdgd .Ff );return true ;};return false ;});if _acgf !=nil {_aa .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_acgf );
};if !_cffag {_aa .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _gfecc ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_fddfg *PdfReader )GetObjectNums ()[]int {return _fddfg ._aceagb .GetObjectNums ()};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_gagcb *PdfWriter )AddPage (page *PdfPage )error {const _cgfcea ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_gbcfg (page );_cgcgf :=page .ToPdfObject ();_aa .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_aa .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_cgcgf );_dfaee ,_cdfdd :=_bcd .GetIndirect (_cgcgf );if !_cdfdd {return _fcf .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_aa .Log .Trace ("\u0025\u0073",_dfaee );_aa .Log .Trace ("\u0025\u0073",_dfaee .PdfObject );_dfbdd ,_cdfdd :=_bcd .GetDict (_dfaee .PdfObject );if !_cdfdd {return _fcf .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dgda ,_cdfdd :=_bcd .GetName (_dfbdd .Get ("\u0054\u0079\u0070\u0065"));if !_cdfdd {return _f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_dfbdd .Get ("\u0054\u0079\u0070\u0065"));
};if _dgda .String ()!="\u0050\u0061\u0067\u0065"{return _fcf .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_aebef :=[]_bcd .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_fbcgb ,_efcab :=_bcd .GetIndirect (_dfbdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_aa .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_dfbdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_efcab );
for _efcab {_aa .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fbcgb );_dgaed ,_edabg :=_bcd .GetDict (_fbcgb .PdfObject );if !_edabg {return _fcf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_ccagf :=range _aebef {_aa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ccagf );if _dfbdd .Get (_ccagf )!=nil {_aa .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _fabdc :=_dgaed .Get (_ccagf );_fabdc !=nil {_aa .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ccagf );_dfbdd .Set (_ccagf ,_fabdc );};};_fbcgb ,_efcab =_bcd .GetIndirect (_dgaed .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_aa .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dgaed .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_aa .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_dfbdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gagcb ._dbege );_dfaee .PdfObject =_dfbdd ;_gfedb ,_cdfdd :=_bcd .GetDict (_gagcb ._dbege .PdfObject );if !_cdfdd {return _fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_eadbf ,_cdfdd :=_bcd .GetArray (_gfedb .Get ("\u004b\u0069\u0064\u0073"));if !_cdfdd {return _fcf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_eadbf .Append (_dfaee );_gagcb ._gacdb [_dfbdd ]=struct{}{};_cdgaf ,_cdfdd :=_bcd .GetInt (_gfedb .Get ("\u0043\u006f\u0075n\u0074"));if !_cdfdd {return _fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_cdgaf =*_cdgaf +1;if page ._gadef ==nil {_efgdb :=_fd .Track (_gagcb ._ebdbb ,_cgfcea );if _efgdb !=nil {return _efgdb ;};}else {_gcgef :=_fd .Track (page ._gadef ._gefca ,_cgfcea );if _gcgef !=nil {return _gcgef ;};};_gagcb .addObject (_dfaee );_dcdbe :=_gagcb .addObjects (_dfbdd );
if _dcdbe !=nil {return _dcdbe ;};return nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bdbfgd *PdfReader )GetPageLabels ()(_bcd .PdfObject ,error ){_fffcg :=_bcd .ResolveReference (_bdbfgd ._babac .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _fffcg ==nil {return nil ,nil ;};if !_bdbfgd ._aacc {_bedee :=_bdbfgd .traverseObjectData (_fffcg );
if _bedee !=nil {return nil ,_bedee ;};};return _fffcg ,nil ;};func (_aga *PdfReader )newPdfAnnotationRedactFromDict (_bccd *_bcd .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_gged :=PdfAnnotationRedact {};_gaf ,_gfb :=_aga .newPdfAnnotationMarkupFromDict (_bccd );
if _gfb !=nil {return nil ,_gfb ;};_gged .PdfAnnotationMarkup =_gaf ;_gged .QuadPoints =_bccd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gged .IC =_bccd .Get ("\u0049\u0043");_gged .RO =_bccd .Get ("\u0052\u004f");_gged .OverlayText =_bccd .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_gged .Repeat =_bccd .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_gged .DA =_bccd .Get ("\u0044\u0041");_gged .Q =_bccd .Get ("\u0051");return &_gged ,nil ;};func _fgfdc (_afcdb []byte )[]byte {const _cddba =52845;const _egdba =22719;_ededf :=55665;for _ ,_cfbe :=range _afcdb [:4]{_ededf =(int (_cfbe )+_ededf )*_cddba +_egdba ;
};_bfeed :=make ([]byte ,len (_afcdb )-4);for _gbfd ,_ffgea :=range _afcdb [4:]{_bfeed [_gbfd ]=byte (int (_ffgea )^_ededf >>8);_ededf =(int (_ffgea )+_ededf )*_cddba +_egdba ;};return _bfeed ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bcd .PdfObject ;BS _bcd .PdfObject ;};var _fgbb =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};
func (_aeeaf *PdfWriter )copyObjects (){_bbedb :=make (map[_bcd .PdfObject ]_bcd .PdfObject );_egdfc :=make ([]_bcd .PdfObject ,0,len (_aeeaf ._cccfae ));_bebgbb :=make (map[_bcd .PdfObject ]struct{},len (_aeeaf ._cccfae ));_cgeca :=make (map[_bcd .PdfObject ]struct{});
for _ ,_dgggb :=range _aeeaf ._cccfae {_fbdg :=_aeeaf .copyObject (_dgggb ,_bbedb ,_cgeca ,false );if _ ,_gbdgf :=_cgeca [_dgggb ];_gbdgf {continue ;};_egdfc =append (_egdfc ,_fbdg );_bebgbb [_fbdg ]=struct{}{};};_aeeaf ._cccfae =_egdfc ;_aeeaf ._dgag =_bebgbb ;
_aeeaf ._acdbc =_aeeaf .copyObject (_aeeaf ._acdbc ,_bbedb ,nil ,false ).(*_bcd .PdfIndirectObject );_aeeaf ._ageaa =_aeeaf .copyObject (_aeeaf ._ageaa ,_bbedb ,nil ,false ).(*_bcd .PdfIndirectObject );if _aeeaf ._bbbea !=nil {_aeeaf ._bbbea =_aeeaf .copyObject (_aeeaf ._bbbea ,_bbedb ,nil ,false ).(*_bcd .PdfIndirectObject );
};if _aeeaf ._dbcbd {_eagaa :=make (map[_bcd .PdfObject ]int64 );for _gceccf ,_acfcg :=range _aeeaf ._ddce {if _dcbec ,_cfbcd :=_bbedb [_gceccf ];_cfbcd {_eagaa [_dcbec ]=_acfcg ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_aeeaf ._ddce =_eagaa ;};};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ce :=NewPdfAction ();_ab :=&PdfActionLaunch {};_ab .PdfAction =_ce ;_ce .SetContext (_ab );return _ab ;};

// ToPdfObject returns the PDF representation of the function.
func (_dgfd *PdfFunctionType4 )ToPdfObject ()_bcd .PdfObject {_adagd :=_dgfd ._gagab ;if _adagd ==nil {_dgfd ._gagab =&_bcd .PdfObjectStream {};_adagd =_dgfd ._gagab ;};_edgae :=_bcd .MakeDict ();_edgae .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcd .MakeInteger (4));
_dcfbg :=&_bcd .PdfObjectArray {};for _ ,_gbddd :=range _dgfd .Domain {_dcfbg .Append (_bcd .MakeFloat (_gbddd ));};_edgae .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dcfbg );_bbab :=&_bcd .PdfObjectArray {};for _ ,_gbdad :=range _dgfd .Range {_bbab .Append (_bcd .MakeFloat (_gbdad ));
};_edgae .Set ("\u0052\u0061\u006eg\u0065",_bbab );if _dgfd ._dedec ==nil &&_dgfd .Program !=nil {_dgfd ._dedec =[]byte (_dgfd .Program .String ());};_edgae .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcd .MakeInteger (int64 (len (_dgfd ._dedec ))));
_adagd .Stream =_dgfd ._dedec ;_adagd .PdfObjectDictionary =_edgae ;return _adagd ;};func (_eccda *PdfWriter )setDocInfo (_ffacae _bcd .PdfObject ){if _eccda .hasObject (_eccda ._acdbc ){delete (_eccda ._dgag ,_eccda ._acdbc );delete (_eccda ._gfedg ,_eccda ._acdbc );
for _fefb ,_efge :=range _eccda ._cccfae {if _efge ==_eccda ._acdbc {copy (_eccda ._cccfae [_fefb :],_eccda ._cccfae [_fefb +1:]);_eccda ._cccfae [len (_eccda ._cccfae )-1]=nil ;_eccda ._cccfae =_eccda ._cccfae [:len (_eccda ._cccfae )-1];break ;};};};
_fadeb :=_bcd .PdfIndirectObject {};_fadeb .PdfObject =_ffacae ;_eccda ._acdbc =&_fadeb ;_eccda .addObject (&_fadeb );};func _gdbea (_ddag *_bcd .PdfObjectDictionary )(*PdfShadingPattern ,error ){_dgaaf :=&PdfShadingPattern {};_fagae :=_ddag .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _fagae ==nil {_aa .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gcafb ,_fbgf :=_ffgaa (_fagae );if _fbgf !=nil {_aa .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_fbgf );
return nil ,_fbgf ;};_dgaaf .Shading =_gcafb ;if _fgead :=_ddag .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fgead !=nil {_cefga ,_cffed :=_fgead .(*_bcd .PdfObjectArray );if !_cffed {_aa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgead );
return nil ,_bcd .ErrTypeError ;};_dgaaf .Matrix =_cefga ;};if _acfcfa :=_ddag .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_acfcfa !=nil {_dgaaf .ExtGState =_acfcfa ;};return _dgaaf ,nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gfcfd :=NewPdfOutline ();_gfcfd ._gadg =&_gfcfd ;return _gfcfd ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_afdaf *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_afdaf ._fcdb =colorspace ;};func _gegag (_cbebf *_bcd .PdfObjectDictionary )(*PdfTilingPattern ,error ){_ggdd :=&PdfTilingPattern {};_edgf :=_cbebf .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _edgf ==nil {_aa .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_dbaga ,_eadae :=_edgf .(*_bcd .PdfObjectInteger );if !_eadae {_aa .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_edgf );
return nil ,_bcd .ErrTypeError ;};_ggdd .PaintType =_dbaga ;_edgf =_cbebf .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _edgf ==nil {_aa .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ebgg ,_eadae :=_edgf .(*_bcd .PdfObjectInteger );if !_eadae {_aa .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edgf );
return nil ,_bcd .ErrTypeError ;};_ggdd .TilingType =_ebgg ;_edgf =_cbebf .Get ("\u0042\u0042\u006f\u0078");if _edgf ==nil {_aa .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_edgf =_bcd .TraceToDirectObject (_edgf );_bfbgb ,_eadae :=_edgf .(*_bcd .PdfObjectArray );if !_eadae {_aa .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edgf );
return nil ,_bcd .ErrTypeError ;};_cdgdb ,_geba :=NewPdfRectangle (*_bfbgb );if _geba !=nil {_aa .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_geba );return nil ,_geba ;};_ggdd .BBox =_cdgdb ;_edgf =_cbebf .Get ("\u0058\u0053\u0074e\u0070");
if _edgf ==nil {_aa .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_agefed ,_geba :=_bcd .GetNumberAsFloat (_edgf );if _geba !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_agefed );
return nil ,_geba ;};_ggdd .XStep =_bcd .MakeFloat (_agefed );_edgf =_cbebf .Get ("\u0059\u0053\u0074e\u0070");if _edgf ==nil {_aa .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_adaba ,_geba :=_bcd .GetNumberAsFloat (_edgf );if _geba !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_adaba );
return nil ,_geba ;};_ggdd .YStep =_bcd .MakeFloat (_adaba );_edgf =_cbebf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _edgf ==nil {_aa .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbebf ,_eadae =_bcd .TraceToDirectObject (_edgf ).(*_bcd .PdfObjectDictionary );if !_eadae {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_edgf );
};_geddf ,_geba :=NewPdfPageResourcesFromDict (_cbebf );if _geba !=nil {return nil ,_geba ;};_ggdd .Resources =_geddf ;if _afge :=_cbebf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_afge !=nil {_decfe ,_cbefe :=_afge .(*_bcd .PdfObjectArray );if !_cbefe {_aa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afge );
return nil ,_bcd .ErrTypeError ;};_ggdd .Matrix =_decfe ;};return _ggdd ,nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_ag *PdfAction )GetContext ()PdfModel {if _ag ==nil {return nil ;};return _ag ._gc ;};func _bdbfe (_cdegbb *XObjectImage )error {if _cdegbb .SMask ==nil {return nil ;};_ccccb ,_cbeaa :=_cdegbb .SMask .(*_bcd .PdfObjectStream );if !_cbeaa {_aa .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _bcd .ErrTypeError ;};_eeaf :=_ccccb .PdfObjectDictionary ;_abdgf :=_eeaf .Get ("\u004d\u0061\u0074t\u0065");if _abdgf ==nil {return nil ;};_beeb ,_fbcgf :=_bcbdd (_abdgf .(*_bcd .PdfObjectArray ));if _fbcgf !=nil {return _fbcgf ;};_fafea :=_bcd .MakeArrayFromFloats ([]float64 {_beeb });
_eeaf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fafea );return nil ;};

// Write writes out the PDF.
func (_deffgd *PdfWriter )Write (writer _ec .Writer )error {_aa .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_acdgd :=_deffgd .checkLicense ();if _acdgd !=nil {return _acdgd ;};if _acdgd =_deffgd .writeOutlines ();_acdgd !=nil {return _acdgd ;
};if _acdgd =_deffgd .writeAcroFormFields ();_acdgd !=nil {return _acdgd ;};_deffgd .checkPendingObjects ();if _acdgd =_deffgd .writeOutputIntents ();_acdgd !=nil {return _acdgd ;};_deffgd .setCatalogVersion ();_deffgd .copyObjects ();if _acdgd =_deffgd .optimize ();
_acdgd !=nil {return _acdgd ;};if _acdgd =_deffgd .optimizeDocument ();_acdgd !=nil {return _acdgd ;};var _efgca _gd .Hash ;if _deffgd ._bedbc {_efgca =_bd .New ();writer =_ec .MultiWriter (_efgca ,writer );};_deffgd .setWriter (writer );_dccgdd :=_deffgd .checkCrossReferenceStream ();
_gecab ,_dccgdd :=_deffgd .mapObjectStreams (_dccgdd );_deffgd .adjustXRefAffectedVersion (_dccgdd );_deffgd .writeDocumentVersion ();_deffgd .updateObjectNumbers ();_deffgd .writeObjects ();if _acdgd =_deffgd .writeObjectsInStreams (_gecab );_acdgd !=nil {return _acdgd ;
};_ccbfb :=_deffgd ._efgfc ;var _ddfcc int ;for _gace :=range _deffgd ._dfafe {if _gace > _ddfcc {_ddfcc =_gace ;};};if _deffgd ._bedbc {if _acdgd =_deffgd .setHashIDs (_efgca );_acdgd !=nil {return _acdgd ;};};if _dccgdd {if _acdgd =_deffgd .writeXRefStreams (_ddfcc ,_ccbfb );
_acdgd !=nil {return _acdgd ;};}else {_deffgd .writeTrailer (_ddfcc );};_deffgd .makeOffSetReference (_ccbfb );if _acdgd =_deffgd .flushWriter ();_acdgd !=nil {return _acdgd ;};return nil ;};

// Subtype returns the font's "Subtype" field.
func (_deffg *PdfFont )Subtype ()string {_cdbcd :=_deffg .baseFields ()._ffaca ;if _gagdc ,_aagdd :=_deffg ._fbcb .(*pdfFontType0 );_aagdd {_cdbcd =_cdbcd +"\u003a"+_gagdc .DescendantFont .Subtype ();};return _cdbcd ;};

// ToPdfObject implements interface PdfModel.
func (_aeeg *PdfActionResetForm )ToPdfObject ()_bcd .PdfObject {_aeeg .PdfAction .ToPdfObject ();_gacg :=_aeeg ._fgae ;_bced :=_gacg .PdfObject .(*_bcd .PdfObjectDictionary );_bced .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeResetForm )));
_bced .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_aeeg .Fields );_bced .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_aeeg .Flags );return _gacg ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ecff *PdfOutline )ToPdfObject ()_bcd .PdfObject {_dgcc :=_ecff ._ecac ;_agfb :=_dgcc .PdfObject .(*_bcd .PdfObjectDictionary );_agfb .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _ecff .First !=nil {_agfb .Set ("\u0046\u0069\u0072s\u0074",_ecff .First .ToPdfObject ());
};if _ecff .Last !=nil {_agfb .Set ("\u004c\u0061\u0073\u0074",_ecff .Last .GetContext ().GetContainingPdfObject ());};if _ecff .Parent !=nil {_agfb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ecff .Parent .GetContext ().GetContainingPdfObject ());};
if _ecff .Count !=nil {_agfb .Set ("\u0043\u006f\u0075n\u0074",_bcd .MakeInteger (*_ecff .Count ));};return _dgcc ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_dfdcf *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bcd .StreamEncoder ,error ){_fdcc ,_dbced :=_dfdcf ._bdfe .(*_bcd .PdfObjectStream );if !_dbced {_aa .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfdcf ._bdfe );
return nil ,nil ,_bcd .ErrTypeError ;};_fddc ,_bffcg :=_bcd .DecodeStream (_fdcc );if _bffcg !=nil {_aa .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_bffcg );
return nil ,nil ,_bffcg ;};_eddgc ,_bffcg :=_bcd .NewEncoderFromStream (_fdcc );if _bffcg !=nil {_aa .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_bffcg );
return nil ,nil ,_bffcg ;};return _fddc ,_eddgc ,nil ;};func (_gaec *PdfWriter )mapObjectStreams (_bffaf bool )(map[_bcd .PdfObject ]bool ,bool ){_bebbd :=make (map[_bcd .PdfObject ]bool );for _ ,_gbgda :=range _gaec ._cccfae {if _egbac ,_cgbba :=_gbgda .(*_bcd .PdfObjectStreams );
_cgbba {_bffaf =true ;for _ ,_efeafg :=range _egbac .Elements (){_bebbd [_efeafg ]=true ;if _aecdec ,_afbfgd :=_efeafg .(*_bcd .PdfIndirectObject );_afbfgd {_bebbd [_aecdec .PdfObject ]=true ;};};};};return _bebbd ,_bffaf ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_dbbe *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_aa .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_aa .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_aa .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_aa .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_cffg ,_ffbbc :=_gac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fafbg ,img ._fbccc );if _ffbbc !=nil {return Image {},_ffbbc ;};_eac ,_ffbbc :=_gac .NRGBAConverter .Convert (_cffg );
if _ffbbc !=nil {return Image {},_ffbbc ;};return _bbbcd (_eac .Base ()),nil ;};func (_degb *DSS )addCerts (_bbgb [][]byte )([]*_bcd .PdfObjectStream ,error ){return _degb .add (&_degb .Certs ,_degb ._fcad ,_bbgb );};

// SetForms sets the Acroform for a PDF file.
func (_gdfda *PdfWriter )SetForms (form *PdfAcroForm )error {_gdfda ._bebef =form ;return nil };

// PartialName returns the partial name of the field.
func (_fcbb *PdfField )PartialName ()string {_aedc :="";if _fcbb .T !=nil {_aedc =_fcbb .T .Decoded ();}else {_aa .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _aedc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dgbaf *Permissions )GetContainingPdfObject ()_bcd .PdfObject {return _dgbaf ._caccc };

// GetAllContentStreams gets all the content streams for a page as one string.
func (_bfdaf *PdfPage )GetAllContentStreams ()(string ,error ){_ddad ,_ggcea :=_bfdaf .GetContentStreams ();if _ggcea !=nil {return "",_ggcea ;};return _fef .Join (_ddad ,"\u0020"),nil ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_efba :=NewPdfAnnotation ();_cgf :=&PdfAnnotationSquiggly {};_cgf .PdfAnnotation =_efba ;_cgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efba .SetContext (_cgf );return _cgf ;};func (_ecag *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};func (_ceec *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};func (_cefbda *PdfWriter )setDocumentIDs (_caggf ,_degaa string ){_cefbda ._cfgbb =_bcd .MakeArray (_bcd .MakeHexString (_caggf ),_bcd .MakeHexString (_degaa ));
};

// ToPdfObject implements interface PdfModel.
func (_edc *PdfActionLaunch )ToPdfObject ()_bcd .PdfObject {_edc .PdfAction .ToPdfObject ();_aea :=_edc ._fgae ;_gfe :=_aea .PdfObject .(*_bcd .PdfObjectDictionary );_gfe .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeLaunch )));if _edc .F !=nil {_gfe .Set ("\u0046",_edc .F .ToPdfObject ());
};_gfe .SetIfNotNil ("\u0057\u0069\u006e",_edc .Win );_gfe .SetIfNotNil ("\u004d\u0061\u0063",_edc .Mac );_gfe .SetIfNotNil ("\u0055\u006e\u0069\u0078",_edc .Unix );_gfe .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_edc .NewWindow );return _aea ;
};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_adc :=NewPdfAction ();_agb :=&PdfActionNamed {};_agb .PdfAction =_adc ;_adc .SetContext (_agb );return _agb ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_ecegb *PdfPageResources )GetFontByName (keyName _bcd .PdfObjectName )(_bcd .PdfObject ,bool ){if _ecegb .Font ==nil {return nil ,false ;};_caadec ,_deefb :=_bcd .TraceToDirectObject (_ecegb .Font ).(*_bcd .PdfObjectDictionary );if !_deefb {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bcd .TraceToDirectObject (_ecegb .Font ));
return nil ,false ;};if _bgga :=_caadec .Get (keyName );_bgga !=nil {return _bgga ,true ;};return nil ,false ;};type pdfCIDFontType2 struct{fontCommon ;_gegcd *_bcd .PdfIndirectObject ;_becfcd _af .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bcd .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bcd .PdfObject ;W _bcd .PdfObject ;DW2 _bcd .PdfObject ;W2 _bcd .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bcd .PdfObject ;_dbabb map[_af .CharCode ]float64 ;_cafed float64 ;_ffda map[rune ]int ;};

// ToPdfObject implements interface PdfModel.
func (_afdb *PdfAnnotationInk )ToPdfObject ()_bcd .PdfObject {_afdb .PdfAnnotation .ToPdfObject ();_bfe :=_afdb ._dbd ;_bbgf :=_bfe .PdfObject .(*_bcd .PdfObjectDictionary );_afdb .PdfAnnotationMarkup .appendToPdfDictionary (_bbgf );_bbgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0049\u006e\u006b"));
_bbgf .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_afdb .InkList );_bbgf .SetIfNotNil ("\u0042\u0053",_afdb .BS );return _bfe ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_bfab *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bgaa :=func (_gfffd float64 )float64 {if _gfffd >=6.0/29{return _gfffd *_gfffd *_gfffd ;};return 108.0/841*(_gfffd -4.0/29.0);};_dgecb :=img ._fbccc ;if len (_dgecb )!=6{_aa .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_dgecb =_bfab .DecodeArray ();};_dbafb :=_gea .NewReader (img .getBase ());_fdfg :=_gac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._fafbg ,img ._fbccc );_aeea :=_gea .NewWriter (_fdfg );_aada :=_cc .Pow (2,float64 (img .BitsPerComponent ))-1;
_geafc :=make ([]uint32 ,3);var (_cffge error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_gccf ,_decgg ,_ecbafc float64 ;);for {_cffge =_dbafb .ReadSamples (_geafc );if _cffge ==_ec .EOF {break ;}else if _cffge !=nil {return img ,_cffge ;};Ls =float64 (_geafc [0])/_aada ;
As =float64 (_geafc [1])/_aada ;Bs =float64 (_geafc [2])/_aada ;Ls =_gac .LinearInterpolate (Ls ,0.0,1.0,_dgecb [0],_dgecb [1]);As =_gac .LinearInterpolate (As ,0.0,1.0,_dgecb [2],_dgecb [3]);Bs =_gac .LinearInterpolate (Bs ,0.0,1.0,_dgecb [4],_dgecb [5]);
L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_bfab .WhitePoint [0]*_bgaa (L );Y =_bfab .WhitePoint [1]*_bgaa (M );Z =_bfab .WhitePoint [2]*_bgaa (N );_gccf =3.240479*X +-1.537150*Y +-0.498535*Z ;_decgg =-0.969256*X +1.875992*Y +0.041556*Z ;
_ecbafc =0.055648*X +-0.204043*Y +1.057311*Z ;_gccf =_cc .Min (_cc .Max (_gccf ,0),1.0);_decgg =_cc .Min (_cc .Max (_decgg ,0),1.0);_ecbafc =_cc .Min (_cc .Max (_ecbafc ,0),1.0);_geafc [0]=uint32 (_gccf *_aada );_geafc [1]=uint32 (_decgg *_aada );_geafc [2]=uint32 (_ecbafc *_aada );
if _cffge =_aeea .WriteSamples (_geafc );_cffge !=nil {return img ,_cffge ;};};return _bbbcd (&_fdfg ),nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bcd .PdfObjectInteger ;BitsPerComponent *_bcd .PdfObjectInteger ;VerticesPerRow *_bcd .PdfObjectInteger ;Decode *_bcd .PdfObjectArray ;Function []PdfFunction ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;func (_ecd *PdfReader )newPdfAnnotationScreenFromDict (_gfcc *_bcd .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_fffa :=PdfAnnotationScreen {};_fffa .T =_gfcc .Get ("\u0054");_fffa .MK =_gfcc .Get ("\u004d\u004b");_fffa .A =_gfcc .Get ("\u0041");
_fffa .AA =_gfcc .Get ("\u0041\u0041");return &_fffa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_edef *PdfActionURI )ToPdfObject ()_bcd .PdfObject {_edef .PdfAction .ToPdfObject ();_cbe :=_edef ._fgae ;_gce :=_cbe .PdfObject .(*_bcd .PdfObjectDictionary );_gce .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeURI )));_gce .SetIfNotNil ("\u0055\u0052\u0049",_edef .URI );
_gce .SetIfNotNil ("\u0049\u0073\u004da\u0070",_edef .IsMap );return _cbe ;};func (_dggadc *PdfWriter )setCatalogVersion (){_dggadc ._daaaa .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bcd .MakeName (_f .Sprintf ("\u0025\u0064\u002e%\u0064",_dggadc ._cecgb .Major ,_dggadc ._cecgb .Minor )));
};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_gcf *PdfAnnotation )GetContext ()PdfModel {if _gcf ==nil {return nil ;};return _gcf ._caf ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_cbaab *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _dacbf []*PdfOutlineTreeNode ;var _bdgbc []string ;var _beffb func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_beffb =func (_fedcc *PdfOutlineTreeNode ,_dfbc *[]*PdfOutlineTreeNode ,_faabg *[]string ,_fggcd int ){if _fedcc ==nil {return ;
};if _fedcc ._gadg ==nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_bgcfb ,_gfggf :=_fedcc ._gadg .(*PdfOutlineItem );if _gfggf {*_dfbc =append (*_dfbc ,&_bgcfb .PdfOutlineTreeNode );
_fcca :=_fef .Repeat ("\u0020",_fggcd *2)+_bgcfb .Title .Decoded ();*_faabg =append (*_faabg ,_fcca );};if _fedcc .First !=nil {_ccdb :=_fef .Repeat ("\u0020",_fggcd *2)+"\u002b";*_faabg =append (*_faabg ,_ccdb );_beffb (_fedcc .First ,_dfbc ,_faabg ,_fggcd +1);
};if _gfggf &&_bgcfb .Next !=nil {_beffb (_bgcfb .Next ,_dfbc ,_faabg ,_fggcd );};};_beffb (_cbaab ._dfcadg ,&_dacbf ,&_bdgbc ,0);return _dacbf ,_bdgbc ,nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_geb :=NewPdfAnnotation ();_cbg :=&PdfAnnotationFreeText {};_cbg .PdfAnnotation =_geb ;_cbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_geb .SetContext (_cbg );return _cbg ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_beed *PdfFieldButton )SetType (btype ButtonType ){_cbaca :=uint32 (0);if _beed .Ff !=nil {_cbaca =uint32 (*_beed .Ff );};switch btype {case ButtonTypePush :_cbaca |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_cbaca |=FieldFlagRadio .Mask ();
};_beed .Ff =_bcd .MakeInteger (int64 (_cbaca ));};func (_afdbd *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _afdbd ._aceagb .GetCrypter ()!=nil &&!_afdbd ._aceagb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_febb :=_afdbd ._babac ;_cfcde :=_febb .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _cfcde ==nil {return nil ,nil ;};_aa .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_ebcab :=_bcd .ResolveReference (_cfcde );
_aa .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_ebcab );if _gcbbb :=_bcd .IsNullObject (_ebcab );_gcbbb {_aa .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_cdbe ,_fbgdf :=_ebcab .(*_bcd .PdfIndirectObject );if !_fbgdf {if _ ,_aefde :=_bcd .GetDict (_ebcab );!_aefde {_aa .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_aa .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_cdbe =_bcd .MakeIndirectObject (_ebcab );};_gbbea ,_fbgdf :=_cdbe .PdfObject .(*_bcd .PdfObjectDictionary );if !_fbgdf {return nil ,_fcf .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_aa .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_gbbea );_eefa ,_ ,_dacaf :=_afdbd .buildOutlineTree (_cdbe ,nil ,nil ,nil );if _dacaf !=nil {return nil ,_dacaf ;};_aa .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_eefa );
return _eefa ,nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bcd .PdfObject )(_bcd .PdfObjectName ,error ){var _adagc *_bcd .PdfObjectName ;var _egd *_bcd .PdfObjectArray ;if _daae ,_gcfe :=obj .(*_bcd .PdfIndirectObject );_gcfe {if _acdb ,_begc :=_daae .PdfObject .(*_bcd .PdfObjectArray );
_begc {_egd =_acdb ;}else if _dbdc ,_gfdc :=_daae .PdfObject .(*_bcd .PdfObjectName );_gfdc {_adagc =_dbdc ;};}else if _gcgg ,_dabc :=obj .(*_bcd .PdfObjectArray );_dabc {_egd =_gcgg ;}else if _cagb ,_feda :=obj .(*_bcd .PdfObjectName );_feda {_adagc =_cagb ;
};if _adagc !=nil {switch *_adagc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_adagc ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_adagc ,nil ;
};};if _egd !=nil &&_egd .Len ()> 0{if _bdga ,_bcce :=_egd .Get (0).(*_bcd .PdfObjectName );_bcce {switch *_bdga {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _egd .Len ()==1{return *_bdga ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_bdga ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_bdga ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_bdga ,nil ;};};};return "",nil ;};func (_fdef *PdfReader )newPdfActionThreadFromDict (_dggf *_bcd .PdfObjectDictionary )(*PdfActionThread ,error ){_gbe ,_cfd :=_cdag (_dggf .Get ("\u0046"));
if _cfd !=nil {return nil ,_cfd ;};return &PdfActionThread {D :_dggf .Get ("\u0044"),B :_dggf .Get ("\u0042"),F :_gbe },nil ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_bcad *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_adbb *PdfReader )GetCatalogStructTreeRoot ()(_bcd .PdfObject ,bool ){if _adbb ._babac ==nil {return nil ,false ;};_abgc :=_adbb ._babac .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _abgc ,_abgc !=nil ;
};

// ToPdfObject implements interface PdfModel.
func (_dggd *PdfAnnotationCircle )ToPdfObject ()_bcd .PdfObject {_dggd .PdfAnnotation .ToPdfObject ();_cebgd :=_dggd ._dbd ;_aff :=_cebgd .PdfObject .(*_bcd .PdfObjectDictionary );_dggd .PdfAnnotationMarkup .appendToPdfDictionary (_aff );_aff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_aff .SetIfNotNil ("\u0042\u0053",_dggd .BS );_aff .SetIfNotNil ("\u0049\u0043",_dggd .IC );_aff .SetIfNotNil ("\u0042\u0045",_dggd .BE );_aff .SetIfNotNil ("\u0052\u0044",_dggd .RD );return _cebgd ;};func (_fefe *PdfReader )newPdfActionSoundFromDict (_aeb *_bcd .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_aeb .Get ("\u0053\u006f\u0075n\u0064"),Volume :_aeb .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_aeb .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_aeb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_aeb .Get ("\u004d\u0069\u0078")},nil ;
};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_da :=NewPdfAction ();_fgc :=&PdfActionGoTo {};_fgc .PdfAction =_da ;_da .SetContext (_fgc );return _fgc ;};

// ToPdfObject implements interface PdfModel.
func (_bgbb *PdfAnnotationRichMedia )ToPdfObject ()_bcd .PdfObject {_bgbb .PdfAnnotation .ToPdfObject ();_ecbc :=_bgbb ._dbd ;_cfda :=_ecbc .PdfObject .(*_bcd .PdfObjectDictionary );_cfda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_cfda .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bgbb .RichMediaSettings );_cfda .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bgbb .RichMediaContent );
return _ecbc ;};func _bdgac (_cacf *_bcd .PdfObjectDictionary )(*PdfFieldButton ,error ){_ceacb :=&PdfFieldButton {};_ceacb .PdfField =NewPdfField ();_ceacb .PdfField .SetContext (_ceacb );_ceacb .Opt ,_ =_bcd .GetArray (_cacf .Get ("\u004f\u0070\u0074"));
_ecegg :=NewPdfAnnotationWidget ();_ecegg .A ,_ =_bcd .GetDict (_cacf .Get ("\u0041"));_ecegg .AP ,_ =_bcd .GetDict (_cacf .Get ("\u0041\u0050"));_ecegg .SetContext (_ceacb );_ceacb .PdfField .Annotations =append (_ceacb .PdfField .Annotations ,_ecegg );
return _ceacb ,nil ;};func _eegc (_gdbgd _bcd .PdfObject )[]*_bcd .PdfObjectStream {if _gdbgd ==nil {return nil ;};_affbc ,_agecd :=_bcd .GetArray (_gdbgd );if !_agecd ||_affbc .Len ()==0{return nil ;};_ddedg :=make ([]*_bcd .PdfObjectStream ,0,_affbc .Len ());
for _ ,_dggba :=range _affbc .Elements (){if _bccbbg ,_bggda :=_bcd .GetStream (_dggba );_bggda {_ddedg =append (_ddedg ,_bccbbg );};};return _ddedg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_dbbg *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_babg :=vals [0];if _babg < 0.0||_babg > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_babg );
return nil ,ErrColorOutOfRange ;};_edgbd :=vals [1];if _edgbd < 0.0||_edgbd > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_edgbd );return nil ,ErrColorOutOfRange ;
};_bfgf :=vals [2];if _bfgf < 0.0||_bfgf > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bfgf );return nil ,ErrColorOutOfRange ;};_faba :=NewPdfColorCalRGB (_babg ,_edgbd ,_bfgf );
return _faba ,nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// Add appends an outline item as a child of the current outline item.
func (_fcdgb *OutlineItem )Add (item *OutlineItem ){_fcdgb .Entries =append (_fcdgb .Entries ,item )};

// SetDecode sets the decode image float slice.
func (_cbgaa *Image )SetDecode (decode []float64 ){_cbgaa ._fbccc =decode };

// Width returns the width of `rect`.
func (_ebafb *PdfRectangle )Width ()float64 {return _cc .Abs (_ebafb .Urx -_ebafb .Llx )};

// ToPdfObject implements interface PdfModel.
func (_dbgd *PdfAnnotationSquiggly )ToPdfObject ()_bcd .PdfObject {_dbgd .PdfAnnotation .ToPdfObject ();_effee :=_dbgd ._dbd ;_adb :=_effee .PdfObject .(*_bcd .PdfObjectDictionary );_dbgd .PdfAnnotationMarkup .appendToPdfDictionary (_adb );_adb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_adb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dbgd .QuadPoints );return _effee ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_fbaff *PdfPageResources )AddExtGState (gsName _bcd .PdfObjectName ,gsDict _bcd .PdfObject )error {if _fbaff .ExtGState ==nil {_fbaff .ExtGState =_bcd .MakeDict ();};_gddcc :=_fbaff .ExtGState ;_dbfae ,_dfee :=_bcd .TraceToDirectObject (_gddcc ).(*_bcd .PdfObjectDictionary );
if !_dfee {_aa .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_gddcc ,_bcd .TraceToDirectObject (_gddcc ));
return _bcd .ErrTypeError ;};_dbfae .Set (gsName ,gsDict );return nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_bedfgg FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_bedfgg .Mask ()|fl .Mask ())};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bcd .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bcd .PdfObject ;Contents _bcd .PdfObject ;
Rotate *int64 ;Group _bcd .PdfObject ;Thumb _bcd .PdfObject ;B _bcd .PdfObject ;Dur _bcd .PdfObject ;Trans _bcd .PdfObject ;AA _bcd .PdfObject ;Metadata _bcd .PdfObject ;PieceInfo _bcd .PdfObject ;StructParents _bcd .PdfObject ;ID _bcd .PdfObject ;PZ _bcd .PdfObject ;
SeparationInfo _bcd .PdfObject ;Tabs _bcd .PdfObject ;TemplateInstantiated _bcd .PdfObject ;PresSteps _bcd .PdfObject ;UserUnit _bcd .PdfObject ;VP _bcd .PdfObject ;Annots _bcd .PdfObject ;_gccae []*PdfAnnotation ;_fgdec *_bcd .PdfObjectDictionary ;_bebee *_bcd .PdfIndirectObject ;
_ggccb _bcd .PdfObjectDictionary ;_gadef *PdfReader ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_ededd *Image )ToJBIG2Image ()(*_bcd .JBIG2Image ,error ){_bedd ,_gbdg :=_ededd .ToGoImage ();if _gbdg !=nil {return nil ,_gbdg ;};return _bcd .GoImageToJBIG2 (_bedd ,_bcd .JB2ImageAutoThreshold );};

// ToGoTime returns the date in time.Time format.
func (_adacg PdfDate )ToGoTime ()_fb .Time {_bbdc :=int (_adacg ._gdcg *60*60+_adacg ._gfaed *60);switch _adacg ._cdbb {case '-':_bbdc =-_bbdc ;case 'Z':_bbdc =0;};_ggbabg :=_f .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_adacg ._cdbb ,_adacg ._gdcg ,_adacg ._gfaed );
_fdgfc :=_fb .FixedZone (_ggbabg ,_bbdc );return _fb .Date (int (_adacg ._ebgb ),_fb .Month (_adacg ._fegfa ),int (_adacg ._ffbec ),int (_adacg ._fceff ),int (_adacg ._bcgfff ),int (_adacg ._fgcfe ),0,_fdgfc );};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fbab *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_fbab .NumInputs {_aa .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_fcf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _fbab ._egafb ==nil {_gdbd :=_fbab .processSamples ();if _gdbd !=nil {return nil ,_gdbd ;};};_fgcb :=_fbab .Encode ;if _fgcb ==nil {_fgcb =[]float64 {};
for _dddeg :=0;_dddeg < len (_fbab .Size );_dddeg ++{_fgcb =append (_fgcb ,0);_fgcb =append (_fgcb ,float64 (_fbab .Size [_dddeg ]-1));};};_bdfd :=_fbab .Decode ;if _bdfd ==nil {_bdfd =_fbab .Range ;};_eegfb :=make ([]int ,len (x ));for _ccgb :=0;_ccgb < len (x );
_ccgb ++{_ggcbb :=x [_ccgb ];_eaebfc :=_cc .Min (_cc .Max (_ggcbb ,_fbab .Domain [2*_ccgb ]),_fbab .Domain [2*_ccgb +1]);_gedd :=_gac .LinearInterpolate (_eaebfc ,_fbab .Domain [2*_ccgb ],_fbab .Domain [2*_ccgb +1],_fgcb [2*_ccgb ],_fgcb [2*_ccgb +1]);
_ddgc :=_cc .Min (_cc .Max (_gedd ,0),float64 (_fbab .Size [_ccgb ]-1));_egbd :=int (_cc .Floor (_ddgc +0.5));if _egbd < 0{_egbd =0;}else if _egbd > _fbab .Size [_ccgb ]{_egbd =_fbab .Size [_ccgb ]-1;};_eegfb [_ccgb ]=_egbd ;};_fega :=_eegfb [0];for _dbgbd :=1;
_dbgbd < _fbab .NumInputs ;_dbgbd ++{_adgae :=_eegfb [_dbgbd ];for _fedag :=0;_fedag < _dbgbd ;_fedag ++{_adgae *=_fbab .Size [_fedag ];};_fega +=_adgae ;};_fega *=_fbab .NumOutputs ;var _fedc []float64 ;for _decgf :=0;_decgf < _fbab .NumOutputs ;_decgf ++{_baef :=_fega +_decgf ;
if _baef >=len (_fbab ._egafb ){_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_dbdee :=_fbab ._egafb [_baef ];_fgeb :=_gac .LinearInterpolate (float64 (_dbdee ),0,_cc .Pow (2,float64 (_fbab .BitsPerSample )),_bdfd [2*_decgf ],_bdfd [2*_decgf +1]);_fefebc :=_cc .Min (_cc .Max (_fgeb ,_fbab .Range [2*_decgf ]),_fbab .Range [2*_decgf +1]);
_fedc =append (_fedc ,_fefebc );};return _fedc ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_dgbc pdfFontSimple )GetCharMetrics (code _af .CharCode )(_aab .CharMetrics ,bool ){if _cdedb ,_bdbe :=_dgbc ._ggcdb [code ];_bdbe {return _aab .CharMetrics {Wx :_cdedb },true ;};if _aab .IsStdFont (_aab .StdFontName (_dgbc ._gagg )){return _aab .CharMetrics {Wx :250},true ;
};return _aab .CharMetrics {},false ;};func (_badcg *PdfWriter )writeObjectsInStreams (_gfefb map[_bcd .PdfObject ]bool )error {for _ ,_gfcaf :=range _badcg ._cccfae {if _dfegb :=_gfefb [_gfcaf ];_dfegb {continue ;};_dceac :=int64 (0);switch _dfecf :=_gfcaf .(type ){case *_bcd .PdfIndirectObject :_dceac =_dfecf .ObjectNumber ;
case *_bcd .PdfObjectStream :_dceac =_dfecf .ObjectNumber ;case *_bcd .PdfObjectStreams :_dceac =_dfecf .ObjectNumber ;default:_aa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_gfcaf );
return ErrTypeCheck ;};if _badcg ._bdaag !=nil &&_gfcaf !=_badcg ._bbbea {_bgefb :=_badcg ._bdaag .Encrypt (_gfcaf ,_dceac ,0);if _bgefb !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_bgefb );
return _bgefb ;};};_badcg .writeObject (int (_dceac ),_gfcaf );};return nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_affg *PdfPageResources )SetShadingByName (keyName _bcd .PdfObjectName ,shadingObj _bcd .PdfObject )error {if _affg .Shading ==nil {_affg .Shading =_bcd .MakeDict ();};_acceb ,_dbebbd :=_bcd .GetDict (_affg .Shading );if !_dbebbd {return _bcd .ErrTypeError ;
};_acceb .Set (keyName ,shadingObj );return nil ;};func (_egcece *PdfWriter )setWriter (_baaacf _ec .Writer ){_egcece ._efgfc =_egcece ._bcafc ;_egcece ._cgeef =_fe .NewWriter (_baaacf );};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_aggf int ,_ddddb *PdfPage );

// Fill populates `form` with values provided by `provider`.
func (_gaadf *PdfAcroForm )Fill (provider FieldValueProvider )error {return _gaadf .fill (provider ,nil )};

// AddFont adds a font dictionary to the Font resources.
func (_dffee *PdfPage )AddFont (name _bcd .PdfObjectName ,font _bcd .PdfObject )error {if _dffee .Resources ==nil {_dffee .Resources =NewPdfPageResources ();};if _dffee .Resources .Font ==nil {_dffee .Resources .Font =_bcd .MakeDict ();};_cfadg ,_gcbbg :=_bcd .TraceToDirectObject (_dffee .Resources .Font ).(*_bcd .PdfObjectDictionary );
if !_gcbbg {_aa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bcd .TraceToDirectObject (_dffee .Resources .Font ));
return _fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cfadg .Set (name ,font );return nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_gee :=NewPdfAnnotation ();_cegb :=&PdfAnnotation3D {};_cegb .PdfAnnotation =_gee ;_gee .SetContext (_cegb );return _cegb ;};

// WriteToFile writes the Appender output to file specified by path.
func (_gedb *PdfAppender )WriteToFile (outputPath string )error {_eggf ,_faae :=_gae .Create (outputPath );if _faae !=nil {return _faae ;};defer _eggf .Close ();return _gedb .Write (_eggf );};

// StdFontName represents name of a standard font.
type StdFontName =_aab .StdFontName ;

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfabda *PdfShadingType7 )ToPdfObject ()_bcd .PdfObject {_gfabda .PdfShading .ToPdfObject ();_dcaag ,_bbfbf :=_gfabda .getShadingDict ();if _bbfbf !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gfabda .BitsPerCoordinate !=nil {_dcaag .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gfabda .BitsPerCoordinate );};if _gfabda .BitsPerComponent !=nil {_dcaag .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gfabda .BitsPerComponent );
};if _gfabda .BitsPerFlag !=nil {_dcaag .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gfabda .BitsPerFlag );};if _gfabda .Decode !=nil {_dcaag .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gfabda .Decode );};if _gfabda .Function !=nil {if len (_gfabda .Function )==1{_dcaag .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfabda .Function [0].ToPdfObject ());
}else {_ebeef :=_bcd .MakeArray ();for _ ,_edade :=range _gfabda .Function {_ebeef .Append (_edade .ToPdfObject ());};_dcaag .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebeef );};};return _gfabda ._gggef ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";
ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";
ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";
ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";
ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// SetImage updates XObject Image with new image data.
func (_cdfga *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_cdfga .Filter .UpdateParams (img .GetParamsDict ());_cddf ,_gdgcf :=_cdfga .Filter .EncodeBytes (img .Data );if _gdgcf !=nil {return _gdgcf ;};_cdfga .Stream =_cddf ;_decdd :=img .Width ;
_cdfga .Width =&_decdd ;_ceeg :=img .Height ;_cdfga .Height =&_ceeg ;_cfcgg :=img .BitsPerComponent ;_cdfga .BitsPerComponent =&_cfcgg ;if cs ==nil {if img .ColorComponents ==1{_cdfga .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_cdfga .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_cdfga .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fcf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_cdfga .ColorSpace =cs ;};return nil ;
};func (_fceg *PdfReader )newPdfAnnotationWidgetFromDict (_geea *_bcd .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_ecba :=PdfAnnotationWidget {};_ecba .H =_geea .Get ("\u0048");_ecba .MK =_geea .Get ("\u004d\u004b");_ecba .A =_geea .Get ("\u0041");
_ecba .AA =_geea .Get ("\u0041\u0041");_ecba .BS =_geea .Get ("\u0042\u0053");_ecba .Parent =_geea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_ecba ,nil ;};type pdfFontSimple struct{fontCommon ;_dacc *_bcd .PdfIndirectObject ;_ggcdb map[_af .CharCode ]float64 ;
_gcega _af .TextEncoder ;_aeaf _af .TextEncoder ;_eaba *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bcd .PdfObject ;LastChar _bcd .PdfObject ;Widths _bcd .PdfObject ;Encoding _bcd .PdfObject ;_daeea *_aab .RuneCharSafeMap ;};func (_aba *PdfAppender )addNewObject (_ggcg _bcd .PdfObject ){if _ ,_dege :=_aba ._aefb [_ggcg ];!_dege {_aba ._gbbe =append (_aba ._gbbe ,_ggcg );
_aba ._aefb [_ggcg ]=struct{}{};};};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_dada *PdfPageResources )GetContainingPdfObject ()_bcd .PdfObject {return _dada ._ecbbg };func (_bdg *PdfReader )newPdfAnnotationLinkFromDict (_bbec *_bcd .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_gcdd :=PdfAnnotationLink {};_gcdd .A =_bbec .Get ("\u0041");
_gcdd .Dest =_bbec .Get ("\u0044\u0065\u0073\u0074");_gcdd .H =_bbec .Get ("\u0048");_gcdd .PA =_bbec .Get ("\u0050\u0041");_gcdd .QuadPoints =_bbec .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gcdd .BS =_bbec .Get ("\u0042\u0053");
return &_gcdd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bfff *PdfAnnotationPopup )ToPdfObject ()_bcd .PdfObject {_bfff .PdfAnnotation .ToPdfObject ();_aefc :=_bfff ._dbd ;_adga :=_aefc .PdfObject .(*_bcd .PdfObjectDictionary );_adga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0050\u006f\u0070u\u0070"));
_adga .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfff .Parent );_adga .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bfff .Open );return _aefc ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_bbbf *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_ddbce *PdfSignature )extractChainFromPKCS7 ()([]*_b .Certificate ,error ){_dfgd ,_beec :=_cd .Parse (_ddbce .Contents .Bytes ());
if _beec !=nil {return nil ,_beec ;};return _dfgd .Certificates ,nil ;};func (_egebd Image )getBase ()_gac .ImageBase {return _gac .NewImageBase (int (_egebd .Width ),int (_egebd .Height ),int (_egebd .BitsPerComponent ),_egebd .ColorComponents ,_egebd .Data ,_egebd ._fafbg ,_egebd ._fbccc );
};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_ddfc :=NewPdfAnnotation ();_dcdf :=&PdfAnnotationUnderline {};_dcdf .PdfAnnotation =_ddfc ;_dcdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddfc .SetContext (_dcdf );return _dcdf ;};

// Y returns the value of the yellow component of the color.
func (_fcfab *PdfColorDeviceCMYK )Y ()float64 {return _fcfab [2]};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_bgcc *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _fcf .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_bgcc .S =subtype ;return nil ;};func _eadef (_bggbf _bcd .PdfObject )(*PdfPageResourcesColorspaces ,error ){_eeabb :=&PdfPageResourcesColorspaces {};if _dbadg ,_cdea :=_bggbf .(*_bcd .PdfIndirectObject );_cdea {_eeabb ._aaded =_dbadg ;_bggbf =_dbadg .PdfObject ;
};_dfefe ,_cgec :=_bcd .GetDict (_bggbf );if !_cgec {return nil ,_fcf .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_eeabb .Names =[]string {};_eeabb .Colorspaces =map[string ]PdfColorspace {};
for _ ,_begdb :=range _dfefe .Keys (){_aeafd :=_dfefe .Get (_begdb );_eeabb .Names =append (_eeabb .Names ,string (_begdb ));_afacf ,_agdd :=NewPdfColorspaceFromPdfObject (_aeafd );if _agdd !=nil {return nil ,_agdd ;};_eeabb .Colorspaces [string (_begdb )]=_afacf ;
};return _eeabb ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_bacad *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bcd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cafgc ,_addf :=_bcd .GetNumbersAsFloat (objects );
if _addf !=nil {return nil ,_addf ;};return _bacad .ColorFromFloats (_cafgc );};

// String returns a string describing the font descriptor.
func (_gage *PdfFontDescriptor )String ()string {var _ecedb []string ;if _gage .FontName !=nil {_ecedb =append (_ecedb ,_gage .FontName .String ());};if _gage .FontFamily !=nil {_ecedb =append (_ecedb ,_gage .FontFamily .String ());};if _gage .fontFile !=nil {_ecedb =append (_ecedb ,_gage .fontFile .String ());
};if _gage ._fcfb !=nil {_ecedb =append (_ecedb ,_gage ._fcfb .String ());};_ecedb =append (_ecedb ,_f .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_gage .FontFile3 !=nil ));return _f .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_fef .Join (_ecedb ,"\u002c\u0020"));
};func (_ededg *PdfReader )newPdfPageFromDict (_gdgg *_bcd .PdfObjectDictionary )(*PdfPage ,error ){_fcfe :=NewPdfPage ();_fcfe ._fgdec =_gdgg ;_fcfe ._ggccb =*_gdgg ;_bcccf :=*_gdgg ;_daefce ,_cega :=_bcccf .Get ("\u0054\u0079\u0070\u0065").(*_bcd .PdfObjectName );
if !_cega {return nil ,_fcf .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_daefce !="\u0050\u0061\u0067\u0065"{return nil ,_fcf .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _dcef :=_bcccf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_dcef !=nil {_fcfe .Parent =_dcef ;};if _befb :=_bcccf .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_befb !=nil {_fegbb ,_efffe :=_bcd .GetString (_befb );
if !_efffe {return nil ,_fcf .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_cbceg ,_begcd :=NewPdfDate (_fegbb .Str ());if _begcd !=nil {return nil ,_begcd ;};_fcfe .LastModified =&_cbceg ;};if _ggcce :=_bcccf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ggcce !=nil &&!_bcd .IsNullObject (_ggcce ){_edbad ,_ecgac :=_bcd .GetDict (_ggcce );
if !_ecgac {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ggcce );};var _cbcf error ;_fcfe .Resources ,_cbcf =NewPdfPageResourcesFromDict (_edbad );
if _cbcf !=nil {return nil ,_cbcf ;};}else {_bgeba ,_bfbg :=_fcfe .getParentResources ();if _bfbg !=nil {return nil ,_bfbg ;};if _bgeba ==nil {_bgeba =NewPdfPageResources ();};_fcfe .Resources =_bgeba ;};if _fedfd :=_bcccf .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_fedfd !=nil {_agefg ,_cdda :=_bcd .GetArray (_fedfd );if !_cdda {return nil ,_fcf .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _dbfag error ;
_fcfe .MediaBox ,_dbfag =NewPdfRectangle (*_agefg );if _dbfag !=nil {return nil ,_dbfag ;};};if _edab :=_bcccf .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_edab !=nil {_acdf ,_aefd :=_bcd .GetArray (_edab );if !_aefd {return nil ,_fcf .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bffbfa error ;_fcfe .CropBox ,_bffbfa =NewPdfRectangle (*_acdf );if _bffbfa !=nil {return nil ,_bffbfa ;};};if _dcdef :=_bcccf .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_dcdef !=nil {_baee ,_bbgfg :=_bcd .GetArray (_dcdef );if !_bbgfg {return nil ,_fcf .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _deggc error ;_fcfe .BleedBox ,_deggc =NewPdfRectangle (*_baee );if _deggc !=nil {return nil ,_deggc ;};};if _ddgf :=_bcccf .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_ddgf !=nil {_accdf ,_bgabd :=_bcd .GetArray (_ddgf );if !_bgabd {return nil ,_fcf .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bgda error ;_fcfe .TrimBox ,_bgda =NewPdfRectangle (*_accdf );if _bgda !=nil {return nil ,_bgda ;};};if _bade :=_bcccf .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_bade !=nil {_defc ,_caca :=_bcd .GetArray (_bade );if !_caca {return nil ,_fcf .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _gfdge error ;_fcfe .ArtBox ,_gfdge =NewPdfRectangle (*_defc );if _gfdge !=nil {return nil ,_gfdge ;};};if _fbafb :=_bcccf .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fbafb !=nil {_fcfe .BoxColorInfo =_fbafb ;};if _fagda :=_bcccf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_fagda !=nil {_fcfe .Contents =_fagda ;};if _ebbdbg :=_bcccf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_ebbdbg !=nil {_aaedae ,_cbbe :=_bcd .GetNumberAsInt64 (_ebbdbg );if _cbbe !=nil {return nil ,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fcfe .Rotate =&_aaedae ;};if _fafd :=_bcccf .Get ("\u0047\u0072\u006fu\u0070");_fafd !=nil {_fcfe .Group =_fafd ;};if _faacf :=_bcccf .Get ("\u0054\u0068\u0075m\u0062");_faacf !=nil {_fcfe .Thumb =_faacf ;};if _gaeff :=_bcccf .Get ("\u0042");_gaeff !=nil {_fcfe .B =_gaeff ;
};if _afec :=_bcccf .Get ("\u0044\u0075\u0072");_afec !=nil {_fcfe .Dur =_afec ;};if _gfac :=_bcccf .Get ("\u0054\u0072\u0061n\u0073");_gfac !=nil {_fcfe .Trans =_gfac ;};if _defg :=_bcccf .Get ("\u0041\u0041");_defg !=nil {_fcfe .AA =_defg ;};if _deged :=_bcccf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_deged !=nil {_fcfe .Metadata =_deged ;};if _dffd :=_bcccf .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dffd !=nil {_fcfe .PieceInfo =_dffd ;};if _ggbfc :=_bcccf .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_ggbfc !=nil {_fcfe .StructParents =_ggbfc ;};if _bbgbd :=_bcccf .Get ("\u0049\u0044");_bbgbd !=nil {_fcfe .ID =_bbgbd ;};if _eacb :=_bcccf .Get ("\u0050\u005a");_eacb !=nil {_fcfe .PZ =_eacb ;};if _bcbcg :=_bcccf .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_bcbcg !=nil {_fcfe .SeparationInfo =_bcbcg ;};if _ddgce :=_bcccf .Get ("\u0054\u0061\u0062\u0073");_ddgce !=nil {_fcfe .Tabs =_ddgce ;};if _gada :=_bcccf .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_gada !=nil {_fcfe .TemplateInstantiated =_gada ;};if _egdbb :=_bcccf .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_egdbb !=nil {_fcfe .PresSteps =_egdbb ;};if _eaabf :=_bcccf .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_eaabf !=nil {_fcfe .UserUnit =_eaabf ;
};if _degfa :=_bcccf .Get ("\u0056\u0050");_degfa !=nil {_fcfe .VP =_degfa ;};if _febg :=_bcccf .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_febg !=nil {_fcfe .Annots =_febg ;};_fcfe ._gadef =_ededg ;return _fcfe ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bcd .PdfObject ;IC _bcd .PdfObject ;BE _bcd .PdfObject ;RD _bcd .PdfObject ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_aebe *PdfReader )GetCatalogMarkInfo ()(_bcd .PdfObject ,bool ){if _aebe ._babac ==nil {return nil ,false ;};_eaga :=_aebe ._babac .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _eaga ,_eaga !=nil ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_bcd .PdfObjectName ;P *_bcd .PdfObjectInteger ;V *_bcd .PdfObjectName ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bcd .PdfObject ;Name _bcd .PdfObject ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_efdee :_bcd .MakeIndirectObject (_bcd .MakeDict ()),VRI :map[string ]*VRI {}};};

// Evaluate runs the function on the passed in slice and returns the results.
func (_beefd *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_aa .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_fcf .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// SetContentStream sets the pattern cell's content stream.
func (_gcggc *PdfTilingPattern )SetContentStream (content []byte ,encoder _bcd .StreamEncoder )error {_afgcga ,_cabcb :=_gcggc ._bdfe .(*_bcd .PdfObjectStream );if !_cabcb {_aa .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcggc ._bdfe );
return _bcd .ErrTypeError ;};if encoder ==nil {encoder =_bcd .NewRawEncoder ();};_daeed :=_afgcga .PdfObjectDictionary ;_bgeeg :=encoder .MakeStreamDict ();_daeed .Merge (_bgeeg );_ccede ,_cagfc :=encoder .EncodeBytes (content );if _cagfc !=nil {return _cagfc ;
};_daeed .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcd .MakeInteger (int64 (len (_ccede ))));_afgcga .Stream =_ccede ;return nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bgfb pdfCIDFontType0 )GetRuneMetrics (r rune )(_aab .CharMetrics ,bool ){return _aab .CharMetrics {Wx :_bgfb ._gcaba },true ;};

// R returns the value of the red component of the color.
func (_gfec *PdfColorDeviceRGB )R ()float64 {return _gfec [0]};

// GetOptimizer returns current PDF optimizer.
func (_fcgb *PdfWriter )GetOptimizer ()Optimizer {return _fcgb ._effd };

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bcd .PdfObject ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_fcac []byte ;_egafb []uint32 ;_agcce *_bcd .PdfObjectStream ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_cadf *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_cadf .HiVal )};};

// GetStandardApplier gets currently used StandardApplier..
func (_bdfaa *PdfWriter )GetStandardApplier ()StandardApplier {return _bdfaa ._dfea };

// ToPdfObject implements interface PdfModel.
func (_fgb *PdfActionGoToR )ToPdfObject ()_bcd .PdfObject {_fgb .PdfAction .ToPdfObject ();_ccf :=_fgb ._fgae ;_cdb :=_ccf .PdfObject .(*_bcd .PdfObjectDictionary );_cdb .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeGoToR )));if _fgb .F !=nil {_cdb .Set ("\u0046",_fgb .F .ToPdfObject ());
};_cdb .SetIfNotNil ("\u0044",_fgb .D );_cdb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fgb .NewWindow );return _ccf ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func _efgab (_eccdc _bcd .PdfObject ){_aa .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_eccdc ,_eccdc .String ());if _ffdgd ,_dbade :=_eccdc .(*_bcd .PdfObjectStream );_dbade {_ffbbg ,_egggd :=_bcd .DecodeStream (_ffdgd );
if _egggd !=nil {_aa .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_egggd );return ;};_aa .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_ffbbg );}else if _gbgbe ,_defcg :=_eccdc .(*_bcd .PdfIndirectObject );
_defcg {_aa .Log .Debug ("\u0025\u0054\u0020%\u0076",_gbgbe .PdfObject ,_gbgbe .PdfObject );_aa .Log .Debug ("\u0025\u0073",_gbgbe .PdfObject .String ());};};

// ToPdfObject implements interface PdfModel.
func (_cca *PdfActionMovie )ToPdfObject ()_bcd .PdfObject {_cca .PdfAction .ToPdfObject ();_cdaa :=_cca ._fgae ;_gbg :=_cdaa .PdfObject .(*_bcd .PdfObjectDictionary );_gbg .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeMovie )));_gbg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_cca .Annotation );
_gbg .SetIfNotNil ("\u0054",_cca .T );_gbg .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_cca .Operation );return _cdaa ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bcd .PdfObject ;IsMap _bcd .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cbfag *PdfShadingType5 )ToPdfObject ()_bcd .PdfObject {_cbfag .PdfShading .ToPdfObject ();_ecadb ,_efabc :=_cbfag .getShadingDict ();if _efabc !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cbfag .BitsPerCoordinate !=nil {_ecadb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cbfag .BitsPerCoordinate );};if _cbfag .BitsPerComponent !=nil {_ecadb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cbfag .BitsPerComponent );
};if _cbfag .VerticesPerRow !=nil {_ecadb .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_cbfag .VerticesPerRow );};if _cbfag .Decode !=nil {_ecadb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cbfag .Decode );};
if _cbfag .Function !=nil {if len (_cbfag .Function )==1{_ecadb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbfag .Function [0].ToPdfObject ());}else {_edcc :=_bcd .MakeArray ();for _ ,_cgdbe :=range _cbfag .Function {_edcc .Append (_cgdbe .ToPdfObject ());
};_ecadb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edcc );};};return _cbfag ._gggef ;};

// GetPerms returns the Permissions dictionary
func (_eceec *PdfReader )GetPerms ()*Permissions {return _eceec ._gdba };

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_dgecg .Lock ();defer _dgecg .Unlock ();_gagae =title };

// HasExtGState checks if ExtGState name is available.
func (_gegdbe *PdfPage )HasExtGState (name _bcd .PdfObjectName )bool {if _gegdbe .Resources ==nil {return false ;};if _gegdbe .Resources .ExtGState ==nil {return false ;};_ffbdbg ,_dafg :=_bcd .TraceToDirectObject (_gegdbe .Resources .ExtGState ).(*_bcd .PdfObjectDictionary );
if !_dafg {_aa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bcd .TraceToDirectObject (_gegdbe .Resources .ExtGState ));
return false ;};_egcdff :=_ffbdbg .Get (name );_feefe :=_egcdff !=nil ;return _feefe ;};

// ToInteger convert to an integer format.
func (_accd *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gfee :=_cc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gfee *_accd .R ()),uint32 (_gfee *_accd .G ()),uint32 (_gfee *_accd .B ())};};func (_ecbae *PdfReader )loadStructure ()error {if _ecbae ._aceagb .GetCrypter ()!=nil &&!_ecbae ._aceagb .IsAuthenticated (){return _f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_acgef :=_ecbae ._aceagb .GetTrailer ();if _acgef ==nil {return _f .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_aegc ,_cfeee :=_acgef .Get ("\u0052\u006f\u006f\u0074").(*_bcd .PdfObjectReference );if !_cfeee {return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_acgef );
};_acbd ,_gcfae :=_ecbae ._aceagb .LookupByReference (*_aegc );if _gcfae !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_gcfae );
return _gcfae ;};_eabef ,_cfeee :=_acbd .(*_bcd .PdfIndirectObject );if !_cfeee {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_acbd ,*_acgef );
return _fcf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_beddd ,_cfeee :=(*_eabef ).PdfObject .(*_bcd .PdfObjectDictionary );if !_cfeee {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_eabef .PdfObject );
return _fcf .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_aa .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_beddd );_ccedec ,_cfeee :=_beddd .Get ("\u0050\u0061\u0067e\u0073").(*_bcd .PdfObjectReference );
if !_cfeee {return _fcf .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_cfge ,_gcfae :=_ecbae ._aceagb .LookupByReference (*_ccedec );
if _gcfae !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _gcfae ;};_adegb ,_cfeee :=_cfge .(*_bcd .PdfIndirectObject );if !_cfeee {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_aa .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_adegb );return _fcf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ccgag ,_cfeee :=_adegb .PdfObject .(*_bcd .PdfObjectDictionary );if !_cfeee {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_adegb );
return _fcf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bcdgd ,_cfeee :=_bcd .GetInt (_ccgag .Get ("\u0043\u006f\u0075n\u0074"));if !_cfeee {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _fcf .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_cfeee =_bcd .GetName (_ccgag .Get ("\u0054\u0079\u0070\u0065"));!_cfeee {_aa .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_ccgag .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0050\u0061\u0067e\u0073"));};if _cebdd ,_fcbdb :=_bcd .GetInt (_ccgag .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_fcbdb {_aecd :=int64 (*_cebdd );_ecbae .Rotate =&_aecd ;};_ecbae ._ddbad =_aegc ;
_ecbae ._babac =_beddd ;_ecbae ._cgbec =_ccgag ;_ecbae ._eaac =_adegb ;_ecbae ._ccga =int (*_bcdgd );_ecbae ._aaffe =[]*_bcd .PdfIndirectObject {};_ebacb :=map[_bcd .PdfObject ]struct{}{};_gcfae =_ecbae .buildPageList (_adegb ,nil ,_ebacb );if _gcfae !=nil {return _gcfae ;
};_aa .Log .Trace ("\u002d\u002d\u002d");_aa .Log .Trace ("\u0054\u004f\u0043");_aa .Log .Trace ("\u0050\u0061\u0067e\u0073");_aa .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_ecbae ._aaffe ),_ecbae ._aaffe );_ecbae ._dfcadg ,_gcfae =_ecbae .loadOutlines ();
if _gcfae !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_gcfae );
return _gcfae ;};_ecbae .AcroForm ,_gcfae =_ecbae .loadForms ();if _gcfae !=nil {return _gcfae ;};_ecbae .DSS ,_gcfae =_ecbae .loadDSS ();if _gcfae !=nil {return _gcfae ;};_ecbae ._gdba ,_gcfae =_ecbae .loadPerms ();if _gcfae !=nil {return _gcfae ;};return nil ;
};

// IsShading specifies if the pattern is a shading pattern.
func (_eefga *PdfPattern )IsShading ()bool {return _eefga .PatternType ==2};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fcfbd ,_bdgde :=_gae .Open (filePath );if _bdgde !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bdgde );
return nil ,_bdgde ;};defer _fcfbd .Close ();return NewPdfFontFromTTF (_fcfbd );};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bcd .PdfObject ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_bdab :=NewPdfAnnotation ();_ccade :=&PdfAnnotationRichMedia {};_ccade .PdfAnnotation =_bdab ;_bdab .SetContext (_ccade );return _ccade ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bcbfd *PdfPage )SetContentStreams (cStreams []string ,encoder _bcd .StreamEncoder )error {if len (cStreams )==0{_bcbfd .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bcd .NewRawEncoder ();};var _effb []*_bcd .PdfObjectStream ;for _ ,_deccg :=range cStreams {_cgba :=&_bcd .PdfObjectStream {};
_fgedf :=encoder .MakeStreamDict ();_gdgdb ,_eabg :=encoder .EncodeBytes ([]byte (_deccg ));if _eabg !=nil {return _eabg ;};_fgedf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcd .MakeInteger (int64 (len (_gdgdb ))));_cgba .PdfObjectDictionary =_fgedf ;
_cgba .Stream =_gdgdb ;_effb =append (_effb ,_cgba );};if len (_effb )==1{_bcbfd .Contents =_effb [0];}else {_egae :=_bcd .MakeArray ();for _ ,_gfeff :=range _effb {_egae .Append (_gfeff );};_bcbfd .Contents =_egae ;};return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_agbea *PdfColorspaceSpecialPattern )ToPdfObject ()_bcd .PdfObject {if _agbea .UnderlyingCS ==nil {return _bcd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_eecg :=_bcd .MakeArray (_bcd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_eecg .Append (_agbea .UnderlyingCS .ToPdfObject ());if _agbea ._aaee !=nil {_agbea ._aaee .PdfObject =_eecg ;return _agbea ._aaee ;};return _eecg ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_ecgd *PdfField )ToPdfObject ()_bcd .PdfObject {_ccgdb :=_ecgd ._ebddc ;_bgec :=_ccgdb .PdfObject .(*_bcd .PdfObjectDictionary );_adeg :=_bcd .MakeArray ();for _ ,_cbea :=range _ecgd .Kids {_adeg .Append (_cbea .ToPdfObject ());};for _ ,_aagf :=range _ecgd .Annotations {if _aagf ._dbd !=_ecgd ._ebddc {_adeg .Append (_aagf .GetContext ().ToPdfObject ());
};};if _ecgd .Parent !=nil {_bgec .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ecgd .Parent .GetContainingPdfObject ());};if _adeg .Len ()> 0{_bgec .Set ("\u004b\u0069\u0064\u0073",_adeg );};_bgec .SetIfNotNil ("\u0046\u0054",_ecgd .FT );_bgec .SetIfNotNil ("\u0054",_ecgd .T );
_bgec .SetIfNotNil ("\u0054\u0055",_ecgd .TU );_bgec .SetIfNotNil ("\u0054\u004d",_ecgd .TM );_bgec .SetIfNotNil ("\u0046\u0066",_ecgd .Ff );_bgec .SetIfNotNil ("\u0056",_ecgd .V );_bgec .SetIfNotNil ("\u0044\u0056",_ecgd .DV );_bgec .SetIfNotNil ("\u0041\u0041",_ecgd .AA );
if _ecgd .VariableText !=nil {_bgec .SetIfNotNil ("\u0044\u0041",_ecgd .VariableText .DA );_bgec .SetIfNotNil ("\u0051",_ecgd .VariableText .Q );_bgec .SetIfNotNil ("\u0044\u0053",_ecgd .VariableText .DS );_bgec .SetIfNotNil ("\u0052\u0056",_ecgd .VariableText .RV );
};return _ccgdb ;};

// GetNumComponents returns the number of color components.
func (_dbbd *PdfColorspaceICCBased )GetNumComponents ()int {return _dbbd .N };func (_cagd *PdfReader )newPdfAnnotationUnderlineFromDict (_bbg *_bcd .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_geac :=PdfAnnotationUnderline {};_dda ,_gegc :=_cagd .newPdfAnnotationMarkupFromDict (_bbg );
if _gegc !=nil {return nil ,_gegc ;};_geac .PdfAnnotationMarkup =_dda ;_geac .QuadPoints =_bbg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_geac ,nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_dbcg PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bcd .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_fdda []_bcd .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_daec []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_dcggb :_bcd .MakeDict (),ColorComponents :colorComponents };
};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_efbga *PdfReader )GetNameDictionary ()(_bcd .PdfObject ,error ){_bfdg :=_bcd .ResolveReference (_efbga ._babac .Get ("\u004e\u0061\u006de\u0073"));if _bfdg ==nil {return nil ,nil ;};if !_efbga ._aacc {_fabdf :=_efbga .traverseObjectData (_bfdg );
if _fabdf !=nil {return nil ,_fabdf ;};};return _bfdg ,nil ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_bcd .PdfObjectStream ;OCSP []*_bcd .PdfObjectStream ;CRL []*_bcd .PdfObjectStream ;TU *_bcd .PdfObjectString ;TS *_bcd .PdfObjectString ;};func _bcaab (_ffede _bcd .PdfObject ,_eefe *fontCommon )(*_dca .CMap ,error ){_egba ,_cffgee :=_bcd .GetStream (_ffede );
if !_cffgee {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_ffede );
return nil ,_bcd .ErrTypeError ;};_eefc ,_aeec :=_bcd .DecodeStream (_egba );if _aeec !=nil {return nil ,_aeec ;};_acdc ,_aeec :=_dca .LoadCmapFromData (_eefc ,!_eefe .isCIDFont ());if _aeec !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_egba .ObjectNumber ,_aeec );
};return _acdc ,_aeec ;};

// B returns the value of the B component of the color.
func (_cdf *PdfColorLab )B ()float64 {return _cdf [2]};

// GetContainingPdfObject implements model.PdfModel interface.
func (_ebecb *PdfOutputIntent )GetContainingPdfObject ()_bcd .PdfObject {return _ebecb ._dcggb };func (_fdee *pdfFontSimple )updateStandard14Font (){_bacee ,_ggcec :=_fdee .Encoder ().(_af .SimpleEncoder );if !_ggcec {_aa .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_fdee .Encoder (),_fdee );
return ;};_cdef :=_bacee .Charcodes ();_fdee ._ggcdb =make (map[_af .CharCode ]float64 ,len (_cdef ));for _ ,_ebcba :=range _cdef {_fcef ,_ :=_bacee .CharcodeToRune (_ebcba );_gcegd ,_ :=_fdee ._daeea .Read (_fcef );_fdee ._ggcdb [_ebcba ]=_gcegd .Wx ;
};};func (_dgb *PdfReader )newPdfActionURIFromDict (_cfbd *_bcd .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_cfbd .Get ("\u0055\u0052\u0049"),IsMap :_cfbd .Get ("\u0049\u0073\u004da\u0070")},nil ;};func (_bacaa *PdfWriter )writeAcroFormFields ()error {if _bacaa ._bebef ==nil {return nil ;
};_aa .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_cbgcc :=_bacaa ._bebef .ToPdfObject ();_aa .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cbgcc );
_bacaa ._daaaa .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cbgcc );_gbbfg :=_bacaa .addObjects (_cbgcc );if _gbbfg !=nil {return _gbbfg ;};return nil ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_aegf :=&PdfColorPattern {};return _aegf };

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_ebafa *_bcd .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bcd .PdfObjectName ;Filter *_bcd .PdfObjectName ;SubFilter *_bcd .PdfObjectName ;Contents *_bcd .PdfObjectString ;Cert _bcd .PdfObject ;ByteRange *_bcd .PdfObjectArray ;Reference *_bcd .PdfObjectArray ;Changes *_bcd .PdfObjectArray ;Name *_bcd .PdfObjectString ;
M *_bcd .PdfObjectString ;Location *_bcd .PdfObjectString ;Reason *_bcd .PdfObjectString ;ContactInfo *_bcd .PdfObjectString ;R *_bcd .PdfObjectInteger ;V *_bcd .PdfObjectInteger ;PropBuild *_bcd .PdfObjectDictionary ;PropAuthTime *_bcd .PdfObjectInteger ;
PropAuthType *_bcd .PdfObjectName ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_agad *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_fbcg ,_bbfgd :=color .(*PdfColorDeviceGray );if !_bbfgd {_aa .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_fbcg ),float64 (*_fbcg ),float64 (*_fbcg )),nil ;};func (_ecc *PdfReader )newPdfActionGotoRFromDict (_dcd *_bcd .PdfObjectDictionary )(*PdfActionGoToR ,error ){_gcda ,_feg :=_cdag (_dcd .Get ("\u0046"));
if _feg !=nil {return nil ,_feg ;};return &PdfActionGoToR {D :_dcd .Get ("\u0044"),NewWindow :_dcd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gcda },nil ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;func _bbba ()string {_dgecg .Lock ();defer _dgecg .Unlock ();_bcadf :=_fd .GetLicenseKey ();if len (_ceggd )> 0&&(_bcadf .IsLicensed ()||_caefa ){return _ceggd ;};return _f .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cfcab (),_bcadf .TypeToString ());
};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_bafe :=&PdfAppender {_ceac :reader ._accdg ,Reader :reader ,_dafd :reader ._aceagb ,_affd :reader ._ecgb };_fbc ,_bffbf :=_bafe ._ceac .Seek (0,_ec .SeekEnd );if _bffbf !=nil {return nil ,_bffbf ;
};_bafe ._edaag =_fbc ;if _ ,_bffbf =_bafe ._ceac .Seek (0,_ec .SeekStart );_bffbf !=nil {return nil ,_bffbf ;};_bafe ._aagg ,_bffbf =NewPdfReader (_bafe ._ceac );if _bffbf !=nil {return nil ,_bffbf ;};for _ ,_cbefb :=range _bafe .Reader .GetObjectNums (){if _bafe ._eafe < _cbefb {_bafe ._eafe =_cbefb ;
};};_bafe ._fegef =_bafe ._dafd .GetXrefTable ();_bafe ._deae =_bafe ._dafd .GetXrefOffset ();_bafe ._ebcd =append (_bafe ._ebcd ,_bafe ._aagg .PageList ...);_bafe ._aefb =make (map[_bcd .PdfObject ]struct{});_bafe ._fedf =make (map[_bcd .PdfObject ]int64 );
_bafe ._aeaa =make (map[_bcd .PdfObject ]struct{});_bafe ._dde =_bafe ._aagg .AcroForm ;_bafe ._baf =_bafe ._aagg .DSS ;return _bafe ,nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bcd .PdfObject ;T3DV _bcd .PdfObject ;T3DA _bcd .PdfObject ;T3DI _bcd .PdfObject ;T3DB _bcd .PdfObject ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bcd .PdfObjectInteger ;BitsPerComponent *_bcd .PdfObjectInteger ;BitsPerFlag *_bcd .PdfObjectInteger ;Decode *_bcd .PdfObjectArray ;Function []PdfFunction ;};func _bggfc (_gadd _bcd .PdfObject )(PdfFunction ,error ){_gadd =_bcd .ResolveReference (_gadd );
if _ffadf ,_degba :=_gadd .(*_bcd .PdfObjectStream );_degba {_ggff :=_ffadf .PdfObjectDictionary ;_fabac ,_bgcdbg :=_ggff .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bcd .PdfObjectInteger );if !_bgcdbg {_aa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fcf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_fabac ==0{return _aadgg (_ffadf );}else if *_fabac ==4{return _bbcce (_ffadf );
}else {return nil ,_fcf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ccadea ,_fbegc :=_gadd .(*_bcd .PdfIndirectObject );_fbegc {_edgbf ,_beea :=_ccadea .PdfObject .(*_bcd .PdfObjectDictionary );
if !_beea {_aa .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fcf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_cbde ,_beea :=_edgbf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bcd .PdfObjectInteger );
if !_beea {_aa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fcf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_cbde ==2{return _dfcb (_ccadea );}else if *_cbde ==3{return _dcgg (_ccadea );}else {return nil ,_fcf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bddfe ,_gfeeg :=_gadd .(*_bcd .PdfObjectDictionary );
_gfeeg {_eadf ,_gdfga :=_bddfe .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bcd .PdfObjectInteger );if !_gdfga {_aa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fcf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_eadf ==2{return _dfcb (_bddfe );}else if *_eadf ==3{return _dcgg (_bddfe );
}else {return nil ,_fcf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_aa .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_gadd );
return nil ,_fcf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ed .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ed .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ed .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_dadd *PdfAppender ;_fabg *DSS ;};func (_aege *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};func _gdeeg ()string {_dgecg .Lock ();defer _dgecg .Unlock ();return _efeg };


// GetPdfInfo returns the PDF info dictionary.
func (_gebae *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_bcdcc ,_gfaca :=_gebae .GetTrailer ();if _gfaca !=nil {return nil ,_gfaca ;};var _feaa *_bcd .PdfObjectDictionary ;_fffcgb :=_bcdcc .Get ("\u0049\u006e\u0066\u006f");switch _gecfba :=_fffcgb .(type ){case *_bcd .PdfObjectReference :_agebc :=_gecfba ;
_fffcgb ,_gfaca =_gebae .GetIndirectObjectByNumber (int (_agebc .ObjectNumber ));_fffcgb =_bcd .TraceToDirectObject (_fffcgb );if _gfaca !=nil {return nil ,_gfaca ;};_feaa ,_ =_fffcgb .(*_bcd .PdfObjectDictionary );case *_bcd .PdfObjectDictionary :_feaa =_gecfba ;
};if _feaa ==nil {return nil ,_fcf .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_abgbf ,_gfaca :=NewPdfInfoFromObject (_feaa );if _gfaca !=nil {return nil ,_gfaca ;
};return _abgbf ,nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ec .ReadSeeker )(*PdfReader ,error ){const _bbcde ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _fedda (rs ,&ReaderOpts {LazyLoad :true },false ,_bbcde );
};

// AllFields returns a flattened list of all fields in the form.
func (_bbdg *PdfAcroForm )AllFields ()[]*PdfField {if _bbdg ==nil {return nil ;};var _baea []*PdfField ;if _bbdg .Fields !=nil {for _ ,_fbedd :=range *_bbdg .Fields {_baea =append (_baea ,_abbd (_fbedd )...);};};return _baea ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_decd *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_geff :=vals [0];if _geff < 0.0||_geff > 1.0{_aa .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _geff < 0.0{_geff =0.0;}else if _geff > 1.0{_geff =1.0;};return NewPdfColorDeviceGray (_geff ),nil ;};

// SetDate sets the `M` field of the signature.
func (_dgcea *PdfSignature )SetDate (date _fb .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_dgcea .M =_bcd .MakeString (date .Format (format ));
};func (_aecc *PdfPage )setContainer (_dfac *_bcd .PdfIndirectObject ){_dfac .PdfObject =_aecc ._fgdec ;_aecc ._bebee =_dfac ;};

// SetOCProperties sets the optional content properties.
func (_aceaf *PdfWriter )SetOCProperties (ocProperties _bcd .PdfObject )error {_bcadd :=_aceaf ._daaaa ;if ocProperties !=nil {_aa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_bcadd .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _aceaf .addObjects (ocProperties );};return nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bcd .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_eeae *_bcd .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cbfd *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bcd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffbdf ,_bfaad :=_bcd .GetNumbersAsFloat (objects );
if _bfaad !=nil {return nil ,_bfaad ;};return _cbfd .ColorFromFloats (_ffbdf );};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cdabe :=PdfPage {};_cdabe ._fgdec =_bcd .MakeDict ();_cdabe .Resources =NewPdfPageResources ();_cacd :=_bcd .PdfIndirectObject {};_cacd .PdfObject =_cdabe ._fgdec ;_cdabe ._bebee =&_cacd ;_cdabe ._ggccb =*_cdabe ._fgdec ;return &_cdabe ;
};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_ged *BorderStyle )GetPdfName ()string {switch *_ged {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_aeeab *PdfFont )ToPdfObject ()_bcd .PdfObject {if _aeeab ._fbcb ==nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bcd .MakeNull ();
};return _aeeab ._fbcb .ToPdfObject ();};

// ParserMetadata gets the parser  metadata.
func (_gebe *CompliancePdfReader )ParserMetadata ()_bcd .ParserMetadata {if _gebe ._gbda ==(_bcd .ParserMetadata {}){_gebe ._gbda ,_ =_gebe ._aceagb .ParserMetadata ();};return _gebe ._gbda ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_gcecc *PdfReader )Decrypt (password []byte )(bool ,error ){_acaf ,_aeedf :=_gcecc ._aceagb .Decrypt (password );if _aeedf !=nil {return false ,_aeedf ;};if !_acaf {return false ,nil ;};_aeedf =_gcecc .loadStructure ();if _aeedf !=nil {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_aeedf );
return false ,_aeedf ;};return true ,nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_cfbf DefaultImageHandler )NewImageFromGoImage (goimg _ga .Image )(*Image ,error ){_bgbfe ,_abbgc :=_gac .FromGoImage (goimg );if _abbgc !=nil {return nil ,_abbgc ;};_fdgaf :=_bbbcd (_bgbfe .Base ());return &_fdgaf ,nil ;};func (_acdbe *PdfReader )buildNameNodes (_acgcb *_bcd .PdfIndirectObject ,_bddba map[_bcd .PdfObject ]struct{})error {if _acgcb ==nil {return nil ;
};if _ ,_aadag :=_bddba [_acgcb ];_aadag {_aa .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_acgcb .ObjectNumber );
return nil ;};_bddba [_acgcb ]=struct{}{};_cgab ,_cfeb :=_acgcb .PdfObject .(*_bcd .PdfObjectDictionary );if !_cfeb {return _fcf .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _feaab ,_ffaa :=_bcd .GetDict (_cgab .Get ("\u0044\u0065\u0073t\u0073"));
_ffaa {_adcc ,_acgd :=_bcd .GetArray (_feaab .Get ("\u004b\u0069\u0064\u0073"));if !_acgd {return _fcf .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_aa .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_adcc );
for _abge ,_gccb :=range _adcc .Elements (){_deaeg ,_gcaa :=_bcd .GetIndirect (_gccb );if !_gcaa {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_deaeg );
return _fcf .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_adcc .Set (_abge ,_deaeg );_cbdaf :=_acdbe .buildNameNodes (_deaeg ,_bddba );if _cbdaf !=nil {return _cbdaf ;
};};};if _egfcf ,_dgbaa :=_bcd .GetDict (_cgab );_dgbaa {if !_bcd .IsNullObject (_egfcf .Get ("\u004b\u0069\u0064\u0073")){if _adfab ,_defdef :=_bcd .GetArray (_egfcf .Get ("\u004b\u0069\u0064\u0073"));_defdef {for _baeff ,_baeb :=range _adfab .Elements (){if _fcdfa ,_faff :=_bcd .GetIndirect (_baeb );
_faff {_adfab .Set (_baeff ,_fcdfa );_edgea :=_acdbe .buildNameNodes (_fcdfa ,_bddba );if _edgea !=nil {return _edgea ;};};};};};};return nil ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_abdeg :=NewPdfAnnotation ();_aec :=&PdfAnnotationCaret {};_aec .PdfAnnotation =_abdeg ;_aec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abdeg .SetContext (_aec );return _aec ;};var (_caaa =_ee .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_ddbec =_ee .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_geaeg =_ee .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_feac ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_aebfc ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_fffed ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_bcfg :=&PdfColorspaceLab {};_bcfg .BlackPoint =[]float64 {0.0,0.0,0.0};_bcfg .Range =[]float64 {-100,100,-100,100};return _bcfg ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_dbdae *PdfPage )GetContentStreamObjs ()[]_bcd .PdfObject {if _dbdae .Contents ==nil {return nil ;};_ebcbd :=_bcd .TraceToDirectObject (_dbdae .Contents );if _efda ,_ccggc :=_ebcbd .(*_bcd .PdfObjectArray );_ccggc {return _efda .Elements ();};return []_bcd .PdfObject {_ebcbd };
};

// SetName sets the `Name` field of the signature.
func (_dcbbc *PdfSignature )SetName (name string ){_dcbbc .Name =_bcd .MakeString (name )};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_eedb *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_ffg ,_gag :=color .(*PdfColorDeviceCMYK );if !_gag {_aa .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fccf :=_ffg .C ();_cebbg :=_ffg .M ();_baaf :=_ffg .Y ();_cddc :=_ffg .K ();_fccf =_fccf *(1-_cddc )+_cddc ;_cebbg =_cebbg *(1-_cddc )+_cddc ;
_baaf =_baaf *(1-_cddc )+_cddc ;_afcf :=1-_fccf ;_bdae :=1-_cebbg ;_bgcdb :=1-_baaf ;return NewPdfColorDeviceRGB (_afcf ,_bdae ,_bgcdb ),nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_fafbg []byte ;_fbccc []float64 ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_edba *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_befd ,_gfdg :=color .(*PdfColorCalRGB );if !_gfdg {_aa .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_egdf :=_befd .A ();_ccbdb :=_befd .B ();_addac :=_befd .C ();X :=_edba .Matrix [0]*_cc .Pow (_egdf ,_edba .Gamma [0])+_edba .Matrix [3]*_cc .Pow (_ccbdb ,_edba .Gamma [1])+_edba .Matrix [6]*_cc .Pow (_addac ,_edba .Gamma [2]);
Y :=_edba .Matrix [1]*_cc .Pow (_egdf ,_edba .Gamma [0])+_edba .Matrix [4]*_cc .Pow (_ccbdb ,_edba .Gamma [1])+_edba .Matrix [7]*_cc .Pow (_addac ,_edba .Gamma [2]);Z :=_edba .Matrix [2]*_cc .Pow (_egdf ,_edba .Gamma [0])+_edba .Matrix [5]*_cc .Pow (_ccbdb ,_edba .Gamma [1])+_edba .Matrix [8]*_cc .Pow (_addac ,_edba .Gamma [2]);
_cfce :=3.240479*X +-1.537150*Y +-0.498535*Z ;_afbec :=-0.969256*X +1.875992*Y +0.041556*Z ;_eedd :=0.055648*X +-0.204043*Y +1.057311*Z ;_cfce =_cc .Min (_cc .Max (_cfce ,0),1.0);_afbec =_cc .Min (_cc .Max (_afbec ,0),1.0);_eedd =_cc .Min (_cc .Max (_eedd ,0),1.0);
return NewPdfColorDeviceRGB (_cfce ,_afbec ,_eedd ),nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_ccae *PdfRectangle )Normalize (){if _ccae .Llx > _ccae .Urx {_ccae .Llx ,_ccae .Urx =_ccae .Urx ,_ccae .Llx ;};if _ccae .Lly > _ccae .Ury {_ccae .Lly ,_ccae .Ury =_ccae .Ury ,_ccae .Lly ;};};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bcd .PdfObject ;IC _bcd .PdfObject ;BE _bcd .PdfObject ;RD _bcd .PdfObject ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_dbaeg *Image )Resample (targetBitsPerComponent int64 ){if _dbaeg .BitsPerComponent ==targetBitsPerComponent {return ;};_cbeed :=_dbaeg .GetSamples ();if targetBitsPerComponent < _dbaeg .BitsPerComponent {_febca :=_dbaeg .BitsPerComponent -targetBitsPerComponent ;
for _fgegdf :=range _cbeed {_cbeed [_fgegdf ]>>=uint (_febca );};}else if targetBitsPerComponent > _dbaeg .BitsPerComponent {_gdeb :=targetBitsPerComponent -_dbaeg .BitsPerComponent ;for _fdcg :=range _cbeed {_cbeed [_fdcg ]<<=uint (_gdeb );};};_dbaeg .BitsPerComponent =targetBitsPerComponent ;
if _dbaeg .BitsPerComponent < 8{_dbaeg .resampleLowBits (_cbeed );return ;};_cdfe :=_gac .BytesPerLine (int (_dbaeg .Width ),int (_dbaeg .BitsPerComponent ),_dbaeg .ColorComponents );_gfgga :=make ([]byte ,_cdfe *int (_dbaeg .Height ));var (_fdacd ,_bgade ,_gfagb ,_dbcd int ;
_bgegd uint32 ;);for _gfagb =0;_gfagb < int (_dbaeg .Height );_gfagb ++{_fdacd =_gfagb *_cdfe ;_bgade =(_gfagb +1)*_cdfe -1;_ccgbb :=_gea .ResampleUint32 (_cbeed [_fdacd :_bgade ],int (targetBitsPerComponent ),8);for _dbcd ,_bgegd =range _ccgbb {_gfgga [_dbcd +_fdacd ]=byte (_bgegd );
};};_dbaeg .Data =_gfgga ;};func _ffgdc (_bdbec *_bcd .PdfObjectDictionary )(*PdfShadingType4 ,error ){_afdfb :=PdfShadingType4 {};_dgfdda :=_bdbec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _dgfdda ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_baaac ,_edea :=_dgfdda .(*_bcd .PdfObjectInteger );if !_edea {_aa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgfdda );
return nil ,_bcd .ErrTypeError ;};_afdfb .BitsPerCoordinate =_baaac ;_dgfdda =_bdbec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dgfdda ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_baaac ,_edea =_dgfdda .(*_bcd .PdfObjectInteger );if !_edea {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dgfdda );
return nil ,_bcd .ErrTypeError ;};_afdfb .BitsPerComponent =_baaac ;_dgfdda =_bdbec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dgfdda ==nil {_aa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_baaac ,_edea =_dgfdda .(*_bcd .PdfObjectInteger );if !_edea {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dgfdda );
return nil ,_bcd .ErrTypeError ;};_afdfb .BitsPerComponent =_baaac ;_dgfdda =_bdbec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dgfdda ==nil {_aa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fcdgag ,_edea :=_dgfdda .(*_bcd .PdfObjectArray );if !_edea {_aa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgfdda );
return nil ,_bcd .ErrTypeError ;};_afdfb .Decode =_fcdgag ;_dgfdda =_bdbec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dgfdda ==nil {_aa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_afdfb .Function =[]PdfFunction {};if _dfaga ,_addgc :=_dgfdda .(*_bcd .PdfObjectArray );_addgc {for _ ,_fgeeg :=range _dfaga .Elements (){_aaae ,_bbed :=_bggfc (_fgeeg );if _bbed !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbed );
return nil ,_bbed ;};_afdfb .Function =append (_afdfb .Function ,_aaae );};}else {_dbfaea ,_aebae :=_bggfc (_dgfdda );if _aebae !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aebae );
return nil ,_aebae ;};_afdfb .Function =append (_afdfb .Function ,_dbfaea );};return &_afdfb ,nil ;};

// String returns a string representation of the field.
func (_dbdd *PdfField )String ()string {if _bgfe ,_bbaf :=_dbdd .ToPdfObject ().(*_bcd .PdfIndirectObject );_bbaf {return _f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dbdd ._bacb ,_bgfe .PdfObject .String ());};return "";};func (_dedc *PdfReader )newPdfAnnotationHighlightFromDict (_bccf *_bcd .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_cag :=PdfAnnotationHighlight {};
_acb ,_dgebd :=_dedc .newPdfAnnotationMarkupFromDict (_bccf );if _dgebd !=nil {return nil ,_dgebd ;};_cag .PdfAnnotationMarkup =_acb ;_cag .QuadPoints =_bccf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cag ,nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_abeg *PdfColorspaceDeviceN )GetNumComponents ()int {return _abeg .ColorantNames .Len ()};

// AddCustomInfo adds a custom info into document info dictionary.
func (_cfee *PdfInfo )AddCustomInfo (name string ,value string )error {if _cfee ._fdafc ==nil {_cfee ._fdafc =_bcd .MakeDict ();};if _ ,_ccgc :=_fgbb [name ];_ccgc {return _f .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_cfee ._fdafc .SetIfNotNil (*_bcd .MakeName (name ),_bcd .MakeString (value ));return nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bcd .PdfObject )(*PdfFilespec ,error ){_edgbe :=&PdfFilespec {};var _eafd *_bcd .PdfObjectDictionary ;if _fafe ,_gfcb :=_bcd .GetIndirect (obj );_gfcb {_edgbe ._dgfe =_fafe ;_egea ,_dabd :=_bcd .GetDict (_fafe .PdfObject );
if !_dabd {_aa .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bcd .ErrTypeError ;};_eafd =_egea ;}else if _cfef ,_bcfgc :=_bcd .GetDict (obj );
_bcfgc {_edgbe ._dgfe =_cfef ;_eafd =_cfef ;}else {_aa .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bcd .ErrTypeError ;};if _eafd ==nil {_aa .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fcf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _aefef :=_eafd .Get ("\u0054\u0079\u0070\u0065");_aefef !=nil {_acfd ,_bfgb :=_aefef .(*_bcd .PdfObjectName );if !_bfgb {_aa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_aefef );
}else {if *_acfd !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_aa .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_acfd );
};};};if _efadd :=_eafd .Get ("\u0046\u0053");_efadd !=nil {_edgbe .FS =_efadd ;};if _ebfg :=_eafd .Get ("\u0046");_ebfg !=nil {_edgbe .F =_ebfg ;};if _cdfb :=_eafd .Get ("\u0055\u0046");_cdfb !=nil {_edgbe .UF =_cdfb ;};if _gfdcaa :=_eafd .Get ("\u0044\u004f\u0053");
_gfdcaa !=nil {_edgbe .DOS =_gfdcaa ;};if _gggg :=_eafd .Get ("\u004d\u0061\u0063");_gggg !=nil {_edgbe .Mac =_gggg ;};if _fgdcc :=_eafd .Get ("\u0055\u006e\u0069\u0078");_fgdcc !=nil {_edgbe .Unix =_fgdcc ;};if _ddgd :=_eafd .Get ("\u0049\u0044");_ddgd !=nil {_edgbe .ID =_ddgd ;
};if _bged :=_eafd .Get ("\u0056");_bged !=nil {_edgbe .V =_bged ;};if _bcdbg :=_eafd .Get ("\u0045\u0046");_bcdbg !=nil {_edgbe .EF =_bcdbg ;};if _adgc :=_eafd .Get ("\u0052\u0046");_adgc !=nil {_edgbe .RF =_adgc ;};if _dcdae :=_eafd .Get ("\u0044\u0065\u0073\u0063");
_dcdae !=nil {_edgbe .Desc =_dcdae ;};if _fdbc :=_eafd .Get ("\u0043\u0049");_fdbc !=nil {_edgbe .CI =_fdbc ;};return _edgbe ,nil ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_gfbfg *PdfPageResources )GenerateXObjectName ()_bcd .PdfObjectName {_cbabb :=1;for {_eabfb :=_bcd .MakeName (_f .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_cbabb ));if !_gfbfg .HasXObjectByName (*_eabfb ){return *_eabfb ;};_cbabb ++;};};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cdaf *PdfShadingPatternType3 )ToPdfObject ()_bcd .PdfObject {_cdaf .PdfPattern .ToPdfObject ();_bdbg :=_cdaf .getDict ();if _cdaf .Shading !=nil {_bdbg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cdaf .Shading .ToPdfObject ());};if _cdaf .Matrix !=nil {_bdbg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cdaf .Matrix );
};if _cdaf .ExtGState !=nil {_bdbg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cdaf .ExtGState );};return _cdaf ._bdfe ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_gbda _bcd .ParserMetadata ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_efbe *PdfShadingType2 )ToPdfObject ()_bcd .PdfObject {_efbe .PdfShading .ToPdfObject ();_gdcfg ,_bfac :=_efbe .getShadingDict ();if _bfac !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gdcfg ==nil {_aa .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _efbe .Coords !=nil {_gdcfg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_efbe .Coords );
};if _efbe .Domain !=nil {_gdcfg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_efbe .Domain );};if _efbe .Function !=nil {if len (_efbe .Function )==1{_gdcfg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efbe .Function [0].ToPdfObject ());}else {_gdgc :=_bcd .MakeArray ();
for _ ,_fdeff :=range _efbe .Function {_gdgc .Append (_fdeff .ToPdfObject ());};_gdcfg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdgc );};};if _efbe .Extend !=nil {_gdcfg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_efbe .Extend );};return _efbe ._gggef ;
};

// ToPdfObject returns a stream object.
func (_bfbfec *XObjectImage )ToPdfObject ()_bcd .PdfObject {_bffae :=_bfbfec ._baedd ;_cdegdb :=_bffae .PdfObjectDictionary ;if _bfbfec .Filter !=nil {_cdegdb =_bfbfec .Filter .MakeStreamDict ();_bffae .PdfObjectDictionary =_cdegdb ;};_cdegdb .Set ("\u0054\u0079\u0070\u0065",_bcd .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_cdegdb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0049\u006d\u0061g\u0065"));_cdegdb .Set ("\u0057\u0069\u0064t\u0068",_bcd .MakeInteger (*(_bfbfec .Width )));_cdegdb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bcd .MakeInteger (*(_bfbfec .Height )));
if _bfbfec .BitsPerComponent !=nil {_cdegdb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcd .MakeInteger (*(_bfbfec .BitsPerComponent )));};if _bfbfec .ColorSpace !=nil {_cdegdb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bfbfec .ColorSpace .ToPdfObject ());
};_cdegdb .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_bfbfec .Intent );_cdegdb .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_bfbfec .ImageMask );_cdegdb .SetIfNotNil ("\u004d\u0061\u0073\u006b",_bfbfec .Mask );_aeacb :=_cdegdb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _bfbfec .Decode ==nil &&_aeacb {_cdegdb .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _bfbfec .Decode !=nil {_cdegdb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bfbfec .Decode );};_cdegdb .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_bfbfec .Interpolate );
_cdegdb .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_bfbfec .Alternatives );_cdegdb .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_bfbfec .SMask );_cdegdb .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_bfbfec .SMaskInData );
_cdegdb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bfbfec .Matte );_cdegdb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bfbfec .Name );_cdegdb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bfbfec .StructParent );_cdegdb .SetIfNotNil ("\u0049\u0044",_bfbfec .ID );
_cdegdb .SetIfNotNil ("\u004f\u0050\u0049",_bfbfec .OPI );_cdegdb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bfbfec .Metadata );_cdegdb .SetIfNotNil ("\u004f\u0043",_bfbfec .OC );_cdegdb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcd .MakeInteger (int64 (len (_bfbfec .Stream ))));
_bffae .Stream =_bfbfec .Stream ;return _bffae ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_gagcc :=&XObjectForm {};_bbbde :=&_bcd .PdfObjectStream {};_bbbde .PdfObjectDictionary =_bcd .MakeDict ();_gagcc ._bcgbb =_bbbde ;return _gagcc ;};var _cebee =_ee .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");


// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_dddbd *PdfPageResources )HasXObjectByName (keyName _bcd .PdfObjectName )bool {_fgcaf ,_ :=_dddbd .GetXObjectByName (keyName );return _fgcaf !=nil ;};func _gedc (_ebac string )(map[_af .CharCode ]_af .GlyphName ,error ){_eedf :=_fef .Split (_ebac ,"\u000a");
_ddcf :=make (map[_af .CharCode ]_af .GlyphName );for _ ,_daeb :=range _eedf {_dfebc :=_geaeg .FindStringSubmatch (_daeb );if _dfebc ==nil {continue ;};_bgad ,_cgfbed :=_dfebc [1],_dfebc [2];_gcebd ,_gfdaa :=_gb .Atoi (_bgad );if _gfdaa !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_daeb );
return nil ,_bcd .ErrTypeError ;};_ddcf [_af .CharCode (_gcebd )]=_af .GlyphName (_cgfbed );};_aa .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_ddcf );
return _ddcf ,nil ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_ffbd *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_ffbd .updateObjectsDeep (dss .ToPdfObject (),nil );};_ffbd ._baf =dss ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bcd .PdfObject ;Name _bcd .PdfObject ;};

// Encoder returns the font's text encoder.
func (_afca *PdfFont )Encoder ()_af .TextEncoder {_ccbbg :=_afca .actualFont ();if _ccbbg ==nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_afca ._fbcb );
return nil ;};return _ccbbg .Encoder ();};func _fedg (_decca _bcd .PdfObject )(*_bcd .PdfObjectDictionary ,*fontCommon ,error ){_dcdfg :=&fontCommon {};if _abaf ,_dceb :=_decca .(*_bcd .PdfIndirectObject );_dceb {_dcdfg ._aadcbf =_abaf .ObjectNumber ;};
_aead ,_ebbc :=_bcd .GetDict (_decca );if !_ebbc {_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_decca );
return nil ,nil ,ErrFontNotSupported ;};_cefg ,_ebbc :=_bcd .GetNameVal (_aead .Get ("\u0054\u0079\u0070\u0065"));if !_ebbc {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _cefg !="\u0046\u006f\u006e\u0074"{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_cefg ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_bcd .ErrTypeError ;};_deac ,_ebbc :=_bcd .GetNameVal (_aead .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ebbc {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_dcdfg ._ffaca =_deac ;_edddg ,_ebbc :=_bcd .GetNameVal (_aead .Get ("\u004e\u0061\u006d\u0065"));if _ebbc {_dcdfg ._acacg =_edddg ;};_cbcbb :=_aead .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cbcbb !=nil {_dcdfg ._cdgf =_bcd .TraceToDirectObject (_cbcbb );
_agffgc ,_fbgg :=_bcaab (_dcdfg ._cdgf ,_dcdfg );if _fbgg !=nil {return _aead ,_dcdfg ,_fbgg ;};_dcdfg ._fbfb =_agffgc ;}else if _deac =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_deac =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gdad ,_febc :=_dca .NewCIDSystemInfo (_aead .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _febc !=nil {return _aead ,_dcdfg ,_febc ;};_geace :=_f .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gdad .Registry ,_gdad .Ordering );if _dca .IsPredefinedCMap (_geace ){_dcdfg ._fbfb ,_febc =_dca .LoadPredefinedCMap (_geace );
if _febc !=nil {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_geace ,_febc );
};};};_edfe :=_aead .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _edfe !=nil {_acag ,_fabba :=_dddb (_edfe );if _fabba !=nil {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fabba );
return _aead ,_dcdfg ,_fabba ;};_dcdfg ._agda =_acag ;};if _deac !="\u0054\u0079\u0070e\u0033"{_agge ,_afad :=_bcd .GetNameVal (_aead .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_afad {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _aead ,_dcdfg ,ErrRequiredAttributeMissing ;};_dcdfg ._gagg =_agge ;};return _aead ,_dcdfg ,nil ;};func (_faa *PdfReader )newPdfActionGotoEFromDict (_edgb *_bcd .PdfObjectDictionary )(*PdfActionGoToE ,error ){_aabd ,_ddb :=_cdag (_edgb .Get ("\u0046"));
if _ddb !=nil {return nil ,_ddb ;};return &PdfActionGoToE {D :_edgb .Get ("\u0044"),NewWindow :_edgb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_edgb .Get ("\u0054"),F :_aabd },nil ;};type pdfFontType3 struct{fontCommon ;_bedgb *_bcd .PdfIndirectObject ;


// These fields are specific to Type 3 fonts.
CharProcs _bcd .PdfObject ;Encoding _bcd .PdfObject ;FontBBox _bcd .PdfObject ;FontMatrix _bcd .PdfObject ;FirstChar _bcd .PdfObject ;LastChar _bcd .PdfObject ;Widths _bcd .PdfObject ;Resources _bcd .PdfObject ;_aacec map[_af .CharCode ]float64 ;_efefb _af .TextEncoder ;
};

// ToPdfObject implements interface PdfModel.
func (_bgeag *PdfSignature )ToPdfObject ()_bcd .PdfObject {_cbgf :=_bgeag ._ebafa ;var _bfafe *_bcd .PdfObjectDictionary ;if _cadca ,_ggaee :=_cbgf .PdfObject .(*pdfSignDictionary );_ggaee {_bfafe =_cadca .PdfObjectDictionary ;}else {_bfafe =_cbgf .PdfObject .(*_bcd .PdfObjectDictionary );
};_bfafe .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bgeag .Type );_bfafe .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_bgeag .Filter );_bfafe .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_bgeag .SubFilter );_bfafe .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bgeag .ByteRange );
_bfafe .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bgeag .Contents );_bfafe .SetIfNotNil ("\u0043\u0065\u0072\u0074",_bgeag .Cert );_bfafe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bgeag .Name );_bfafe .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_bgeag .Reason );
_bfafe .SetIfNotNil ("\u004d",_bgeag .M );_bfafe .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_bgeag .Reference );_bfafe .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_bgeag .Changes );_bfafe .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_bgeag .ContactInfo );
return _cbgf ;};func (_fbe *PdfReader )newPdfAnnotationCircleFromDict (_dab *_bcd .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_ceaf :=PdfAnnotationCircle {};_fedb ,_fege :=_fbe .newPdfAnnotationMarkupFromDict (_dab );if _fege !=nil {return nil ,_fege ;
};_ceaf .PdfAnnotationMarkup =_fedb ;_ceaf .BS =_dab .Get ("\u0042\u0053");_ceaf .IC =_dab .Get ("\u0049\u0043");_ceaf .BE =_dab .Get ("\u0042\u0045");_ceaf .RD =_dab .Get ("\u0052\u0044");return &_ceaf ,nil ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_cdage *PdfAppender )Write (w _ec .Writer )error {if _cdage ._gad {return _fcf .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_bacg :=NewPdfWriter ();_dcbe ,_ceea :=_bcd .GetDict (_bacg ._dbege );if !_ceea {return _fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_ggga ,_ceea :=_dcbe .Get ("\u004b\u0069\u0064\u0073").(*_bcd .PdfObjectArray );if !_ceea {return _fcf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_fcfc ,_ceea :=_dcbe .Get ("\u0043\u006f\u0075n\u0074").(*_bcd .PdfObjectInteger );if !_ceea {return _fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_ebba :=_cdage ._aagg ._aceagb ;_eddf :=_ebba .GetTrailer ();if _eddf ==nil {return _fcf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gafb ,_ceea :=_bcd .GetIndirect (_eddf .Get ("\u0052\u006f\u006f\u0074"));
if !_ceea {return _fcf .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_ccbf ,_ceea :=_bcd .GetDict (_gafb );if !_ceea {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gafb ,*_eddf );
return _fcf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_ddab :=range _ccbf .Keys (){if _bacg ._daaaa .Get (_ddab )==nil {_gaaa :=_ccbf .Get (_ddab );_bacg ._daaaa .Set (_ddab ,_gaaa );};};if _cdage ._dde !=nil {if _cdage ._dde ._gecc {if _ceaga :=_bcd .TraceToDirectObject (_cdage ._dde .ToPdfObject ());
!_bcd .IsNullObject (_ceaga ){_bacg ._daaaa .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ceaga );_cdage .updateObjectsDeep (_ceaga ,nil );}else {_aa .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_bacg ._daaaa .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cdage ._dde .ToPdfObject ());_cdage .updateObjectsDeep (_cdage ._dde .ToPdfObject (),nil );};};if _cdage ._baf !=nil {_cdage .updateObjectsDeep (_cdage ._baf .ToPdfObject (),nil );
_bacg ._daaaa .Set ("\u0044\u0053\u0053",_cdage ._baf .GetContainingPdfObject ());};if _cdage ._gcde !=nil {_bacg ._daaaa .Set ("\u0050\u0065\u0072m\u0073",_cdage ._gcde .ToPdfObject ());_cdage .updateObjectsDeep (_cdage ._gcde .ToPdfObject (),nil );};
if _bacg ._cecgb .Major < 2{_bacg .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_bacg .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _geca ,_ddd :=_bcd .GetDict (_eddf .Get ("\u0049\u006e\u0066\u006f"));_ddd {if _bbfa ,_gfff :=_bcd .GetDict (_bacg ._acdbc );
_gfff {for _ ,_ggef :=range _geca .Keys (){if _bbfa .Get (_ggef )==nil {_bbfa .Set (_ggef ,_geca .Get (_ggef ));};};};};if _cdage ._afab !=nil {_bacg ._acdbc =_bcd .MakeIndirectObject (_cdage ._afab .ToPdfObject ());};_cdage .addNewObject (_bacg ._acdbc );
_cdage .addNewObject (_bacg ._ageaa );_gded :=false ;if len (_cdage ._aagg .PageList )!=len (_cdage ._ebcd ){_gded =true ;}else {for _feef :=range _cdage ._aagg .PageList {switch {case _cdage ._ebcd [_feef ]==_cdage ._aagg .PageList [_feef ]:case _cdage ._ebcd [_feef ]==_cdage .Reader .PageList [_feef ]:default:_gded =true ;
};if _gded {break ;};};};if _gded {_cdage .updateObjectsDeep (_bacg ._dbege ,nil );}else {_cdage ._aeaa [_bacg ._dbege ]=struct{}{};};_bacg ._dbege .ObjectNumber =_cdage .Reader ._eaac .ObjectNumber ;_cdage ._fedf [_bacg ._dbege ]=_cdage .Reader ._eaac .ObjectNumber ;
_aafd :=[]_bcd .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_ege :=range _cdage ._ebcd {_bdafb :=_ege .ToPdfObject ();
*_fcfc =*_fcfc +1;if _cebed ,_eab :=_bdafb .(*_bcd .PdfIndirectObject );_eab &&_cebed .GetParser ()==_cdage ._aagg ._aceagb {_ggga .Append (&_cebed .PdfObjectReference );continue ;};if _dcfbd ,_cccb :=_bcd .GetDict (_bdafb );_cccb {_acff ,_deec :=_dcfbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bcd .PdfIndirectObject );
for _deec {_aa .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_acff );_eage ,_acef :=_acff .PdfObject .(*_bcd .PdfObjectDictionary );if !_acef {return _fcf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_edfb :=range _aafd {_aa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_edfb );if _deefa :=_dcfbd .Get (_edfb );_deefa !=nil {_aa .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
if len (_ege ._ggccb .Keys ())> 0&&!_gded {_dagc :=_ege ._ggccb ;if _cbgd :=_dagc .Get (_edfb );_cbgd !=nil {if _deefa !=_cbgd {_aa .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_edfb ,_cbgd );
_dcfbd .Set (_edfb ,_cbgd );};};};continue ;};if _gdg :=_eage .Get (_edfb );_gdg !=nil {_aa .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_edfb );_dcfbd .Set (_edfb ,_gdg );};};_acff ,_deec =_eage .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bcd .PdfIndirectObject );
_aa .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_eage .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _gded {_dcfbd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bacg ._dbege );};};_cdage .updateObjectsDeep (_bdafb ,nil );
_ggga .Append (_bdafb );};if _ ,_caga :=_cdage ._ceac .Seek (0,_ec .SeekStart );_caga !=nil {return _caga ;};_dede :=make (map[SignatureHandler ]_ec .Writer );_eca :=_bcd .MakeArray ();for _ ,_baa :=range _cdage ._gbbe {if _bgde ,_eege :=_bcd .GetIndirect (_baa );
_eege {if _caggg ,_cafd :=_bgde .PdfObject .(*pdfSignDictionary );_cafd {_abfe :=*_caggg ._geef ;var _cebedd error ;_dede [_abfe ],_cebedd =_abfe .NewDigest (_caggg ._eadde );if _cebedd !=nil {return _cebedd ;};_eca .Append (_bcd .MakeInteger (0xfffff),_bcd .MakeInteger (0xfffff));
};};};if _eca .Len ()> 0{_eca .Append (_bcd .MakeInteger (0xfffff),_bcd .MakeInteger (0xfffff));};for _ ,_gcge :=range _cdage ._gbbe {if _deff ,_ffcaa :=_bcd .GetIndirect (_gcge );_ffcaa {if _afbe ,_cbgg :=_deff .PdfObject .(*pdfSignDictionary );_cbgg {_afbe .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_eca );
};};};_eaed :=len (_dede )> 0;var _ega _ec .Reader =_cdage ._ceac ;if _eaed {_bggd :=make ([]_ec .Writer ,0,len (_dede ));for _ ,_ecbaf :=range _dede {_bggd =append (_bggd ,_ecbaf );};_ega =_ec .TeeReader (_cdage ._ceac ,_ec .MultiWriter (_bggd ...));};
_efeae ,_bgcg :=_ec .Copy (w ,_ega );if _bgcg !=nil {return _bgcg ;};if len (_cdage ._gbbe )==0{return nil ;};_bacg ._bcafc =_efeae ;_bacg .ObjNumOffset =_cdage ._eafe ;_bacg ._dbcbd =true ;_bacg ._gdfed =_cdage ._fegef ;_bacg ._bfcad =_cdage ._deae ;_bacg ._cbfdd =_cdage ._edaag ;
_bacg ._cecgb =_cdage ._aagg .PdfVersion ();_bacg ._ddce =_cdage ._fedf ;_bacg ._bdaag =_cdage ._dafd .GetCrypter ();_bacg ._bbbea =_cdage ._dafd .GetEncryptObj ();_ffad :=_cdage ._dafd .GetXrefType ();if _ffad !=nil {_gaegd :=*_ffad ==_bcd .XrefTypeObjectStream ;
_bacg ._dcfad =&_gaegd ;};_bacg ._dgag =map[_bcd .PdfObject ]struct{}{};_bacg ._cccfae =[]_bcd .PdfObject {};for _ ,_cbce :=range _cdage ._gbbe {if _ ,_ggce :=_cdage ._aeaa [_cbce ];_ggce {continue ;};_bacg .addObject (_cbce );};_caef :=w ;if _eaed {_caef =_ge .NewBuffer (nil );
};if _cdage ._geead !=""&&_bacg ._bdaag ==nil {_bacg .Encrypt ([]byte (_cdage ._geead ),[]byte (_cdage ._geead ),_cdage ._fdag );};if _bgdf :=_eddf .Get ("\u0049\u0044");_bgdf !=nil {if _dcaf ,_ffed :=_bcd .GetArray (_bgdf );_ffed {_bacg ._cfgbb =_dcaf ;
};};if _dbed :=_bacg .Write (_caef );_dbed !=nil {return _dbed ;};if _eaed {_fgf :=_caef .(*_ge .Buffer ).Bytes ();_cgfc :=_bcd .MakeArray ();var _abdc []*pdfSignDictionary ;var _acgg int64 ;for _ ,_adab :=range _bacg ._cccfae {if _daca ,_ffdd :=_bcd .GetIndirect (_adab );
_ffdd {if _cbega ,_cgfce :=_daca .PdfObject .(*pdfSignDictionary );_cgfce {_abdc =append (_abdc ,_cbega );_fgabe :=_cbega ._fbdfd +int64 (_cbega ._bcgdfg );_cgfc .Append (_bcd .MakeInteger (_acgg ),_bcd .MakeInteger (_fgabe -_acgg ));_acgg =_cbega ._fbdfd +int64 (_cbega ._bcbga );
};};};_cgfc .Append (_bcd .MakeInteger (_acgg ),_bcd .MakeInteger (_efeae +int64 (len (_fgf ))-_acgg ));_eadb :=[]byte (_cgfc .WriteString ());for _ ,_aace :=range _abdc {_gega :=int (_aace ._fbdfd -_efeae );for _gfbdb :=_aace ._ddffe ;_gfbdb < _aace ._ebefg ;
_gfbdb ++{_fgf [_gega +_gfbdb ]=' ';};_aabgb :=_fgf [_gega +_aace ._ddffe :_gega +_aace ._ebefg ];copy (_aabgb ,_eadb );};var _dafe int ;for _ ,_fgaae :=range _abdc {_ggae :=int (_fgaae ._fbdfd -_efeae );_aagd :=_fgf [_dafe :_ggae +_fgaae ._bcgdfg ];_afbd :=*_fgaae ._geef ;
_dede [_afbd ].Write (_aagd );_dafe =_ggae +_fgaae ._bcbga ;};for _ ,_bfdd :=range _abdc {_fdafg :=_fgf [_dafe :];_bedb :=*_bfdd ._geef ;_dede [_bedb ].Write (_fdafg );};for _ ,_caa :=range _abdc {_faacb :=int (_caa ._fbdfd -_efeae );_fdec :=*_caa ._geef ;
_aeg :=_dede [_fdec ];if _fdea :=_fdec .Sign (_caa ._eadde ,_aeg );_fdea !=nil {return _fdea ;};_caa ._eadde .ByteRange =_cgfc ;_bbgd :=[]byte (_caa ._eadde .Contents .WriteString ());for _beda :=_caa ._ddffe ;_beda < _caa ._ebefg ;_beda ++{_fgf [_faacb +_beda ]=' ';
};for _deebg :=_caa ._bcgdfg ;_deebg < _caa ._bcbga ;_deebg ++{_fgf [_faacb +_deebg ]=' ';};_gggdd :=_fgf [_faacb +_caa ._ddffe :_faacb +_caa ._ebefg ];copy (_gggdd ,_eadb );_gggdd =_fgf [_faacb +_caa ._bcgdfg :_faacb +_caa ._bcbga ];copy (_gggdd ,_bbgd );
};_gcdf :=_ge .NewBuffer (_fgf );_ ,_bgcg =_ec .Copy (w ,_gcdf );if _bgcg !=nil {return _bgcg ;};};_cdage ._gad =true ;return nil ;};func (_ggccg *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _efdea []*PdfFieldSignature ;for _ ,_adbe :=range _ggccg .AllFields (){switch _bbfe :=_adbe .GetContext ().(type ){case *PdfFieldSignature :_ffgd :=_bbfe ;
_efdea =append (_efdea ,_ffgd );};};return _efdea ;};

// CustomKeys returns all custom info keys as list.
func (_faace *PdfInfo )CustomKeys ()[]string {if _faace ._fdafc ==nil {return nil ;};_fbca :=make ([]string ,len (_faace ._fdafc .Keys ()));for _ ,_faafe :=range _faace ._fdafc .Keys (){_fbca =append (_fbca ,_faafe .String ());};return _fbca ;};func (_cgbge *PdfWriter )makeOffSetReference (_cafdc int64 ){_ccafc :=_f .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_cafdc );
_cgbge .writeString (_ccafc );_cgbge .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// SetAction sets the PDF action for the annotation link.
func (_eccf *PdfAnnotationLink )SetAction (action *PdfAction ){_eccf ._ded =action ;if action ==nil {_eccf .A =nil ;};};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cdfa *PdfPage )Duplicate ()*PdfPage {_acec :=*_cdfa ;_acec ._fgdec =_bcd .MakeDict ();_acec ._bebee =_bcd .MakeIndirectObject (_acec ._fgdec );_acec ._ggccb =*_acec ._fgdec ;return &_acec ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_aedfd *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_badd :=NewPdfOutlineItem ();_badd .Title =_bcd .MakeEncodedString (_aedfd .Title ,true );_badd .Dest =_aedfd .Dest .ToPdfObject ();var _dddda []*PdfOutlineItem ;var _ccfe int64 ;var _fdde *PdfOutlineItem ;
for _ ,_ebbda :=range _aedfd .Entries {_dabda ,_afaecb :=_ebbda .ToPdfOutlineItem ();_dabda .Parent =&_badd .PdfOutlineTreeNode ;if _fdde !=nil {_fdde .Next =&_dabda .PdfOutlineTreeNode ;_dabda .Prev =&_fdde .PdfOutlineTreeNode ;};_dddda =append (_dddda ,_dabda );
_ccfe +=_afaecb ;_fdde =_dabda ;};_fgdbf :=len (_dddda );_ccfe +=int64 (_fgdbf );if _fgdbf > 0{_badd .First =&_dddda [0].PdfOutlineTreeNode ;_badd .Last =&_dddda [_fgdbf -1].PdfOutlineTreeNode ;_badd .Count =&_ccfe ;};return _badd ,_ccfe ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bcd .PdfObject ;Dest _bcd .PdfObject ;H _bcd .PdfObject ;PA _bcd .PdfObject ;QuadPoints _bcd .PdfObject ;BS _bcd .PdfObject ;_ded *PdfAction ;_cdd *PdfReader ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_ddaab :=PdfColorCalGray (grayVal );return &_ddaab ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ec .ReadSeeker )(*PdfReader ,error ){const _bgbega ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _fedda (rs ,&ReaderOpts {},false ,_bgbega );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_cddg *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_gbbcc *PdfWriter )adjustXRefAffectedVersion (_eaaabb bool ){if _eaaabb &&_gbbcc ._cecgb .Major ==1&&_gbbcc ._cecgb .Minor < 5{_gbbcc ._cecgb .Minor =5;};};

// ToPdfObject implements interface PdfModel.
func (_gbb *PdfActionImportData )ToPdfObject ()_bcd .PdfObject {_gbb .PdfAction .ToPdfObject ();_dbc :=_gbb ._fgae ;_dbcc :=_dbc .PdfObject .(*_bcd .PdfObjectDictionary );_dbcc .SetIfNotNil ("\u0053",_bcd .MakeName (string (ActionTypeImportData )));if _gbb .F !=nil {_dbcc .Set ("\u0046",_gbb .F .ToPdfObject ());
};return _dbc ;};

// ToPdfObject implements interface PdfModel.
func (_gceb *PdfBorderStyle )ToPdfObject ()_bcd .PdfObject {_dbcb :=_bcd .MakeDict ();if _gceb ._cgeg !=nil {if _bcdd ,_beaa :=_gceb ._cgeg .(*_bcd .PdfIndirectObject );_beaa {_bcdd .PdfObject =_dbcb ;};};_dbcb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _gceb .W !=nil {_dbcb .Set ("\u0057",_bcd .MakeFloat (*_gceb .W ));};if _gceb .S !=nil {_dbcb .Set ("\u0053",_bcd .MakeName (_gceb .S .GetPdfName ()));};if _gceb .D !=nil {_dbcb .Set ("\u0044",_bcd .MakeArrayFromIntegers (*_gceb .D ));};if _gceb ._cgeg !=nil {return _gceb ._cgeg ;
};return _dbcb ;};func _ebebg (_dfgc *PdfPage )map[_bcd .PdfObjectName ]_bcd .PdfObject {_bbff :=make (map[_bcd .PdfObjectName ]_bcd .PdfObject );if _dfgc .Resources ==nil {return _bbff ;};if _dfgc .Resources .Font !=nil {if _cafg ,_cecc :=_bcd .GetDict (_dfgc .Resources .Font );
_cecc {for _ ,_fbbg :=range _cafg .Keys (){_bbff [_fbbg ]=_cafg .Get (_fbbg );};};};if _dfgc .Resources .ExtGState !=nil {if _efea ,_ggf :=_bcd .GetDict (_dfgc .Resources .ExtGState );_ggf {for _ ,_dgde :=range _efea .Keys (){_bbff [_dgde ]=_efea .Get (_dgde );
};};};if _dfgc .Resources .XObject !=nil {if _agff ,_cebc :=_bcd .GetDict (_dfgc .Resources .XObject );_cebc {for _ ,_ggg :=range _agff .Keys (){_bbff [_ggg ]=_agff .Get (_ggg );};};};if _dfgc .Resources .Pattern !=nil {if _bab ,_cfbg :=_bcd .GetDict (_dfgc .Resources .Pattern );
_cfbg {for _ ,_efcc :=range _bab .Keys (){_bbff [_efcc ]=_bab .Get (_efcc );};};};if _dfgc .Resources .Shading !=nil {if _dcff ,_bbce :=_bcd .GetDict (_dfgc .Resources .Shading );_bbce {for _ ,_cae :=range _dcff .Keys (){_bbff [_cae ]=_dcff .Get (_cae );
};};};if _dfgc .Resources .ProcSet !=nil {if _efec ,_cebbf :=_bcd .GetDict (_dfgc .Resources .ProcSet );_cebbf {for _ ,_acc :=range _efec .Keys (){_bbff [_acc ]=_efec .Get (_acc );};};};if _dfgc .Resources .Properties !=nil {if _faaf ,_dbgf :=_bcd .GetDict (_dfgc .Resources .Properties );
_dbgf {for _ ,_gabe :=range _faaf .Keys (){_bbff [_gabe ]=_faaf .Get (_gabe );};};};return _bbff ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_ceccd *PdfInfo )GetCustomInfo (name string )*_bcd .PdfObjectString {var _fgdbd *_bcd .PdfObjectString ;if _ceccd ._fdafc ==nil {return _fgdbd ;};if _baafa ,_gegg :=_ceccd ._fdafc .Get (*_bcd .MakeName (name )).(*_bcd .PdfObjectString );_gegg {_fgdbd =_baafa ;
};return _fgdbd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bfbgba *PdfShading )ToPdfObject ()_bcd .PdfObject {_fcgf :=_bfbgba ._gggef ;_cddae ,_abbf :=_bfbgba .getShadingDict ();if _abbf !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bfbgba .ShadingType !=nil {_cddae .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_bfbgba .ShadingType );};if _bfbgba .ColorSpace !=nil {_cddae .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bfbgba .ColorSpace .ToPdfObject ());
};if _bfbgba .Background !=nil {_cddae .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_bfbgba .Background );};if _bfbgba .BBox !=nil {_cddae .Set ("\u0042\u0042\u006f\u0078",_bfbgba .BBox .ToPdfObject ());};if _bfbgba .AntiAlias !=nil {_cddae .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_bfbgba .AntiAlias );
};return _fcgf ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_dbafbf *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _dbafbf .UnderlyingCS .GetNumComponents ();};func (_dccc *PdfReader )newPdfAnnotationCaretFromDict (_geaf *_bcd .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_fgcf :=PdfAnnotationCaret {};
_cbed ,_cagf :=_dccc .newPdfAnnotationMarkupFromDict (_geaf );if _cagf !=nil {return nil ,_cagf ;};_fgcf .PdfAnnotationMarkup =_cbed ;_fgcf .RD =_geaf .Get ("\u0052\u0044");_fgcf .Sy =_geaf .Get ("\u0053\u0079");return &_fgcf ,nil ;};

// ToInteger convert to an integer format.
func (_efdb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_cage :=_cc .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_cage *_efdb .C ()),uint32 (_cage *_efdb .M ()),uint32 (_cage *_efdb .Y ()),uint32 (_cage *_efdb .K ())};};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ggac *PdfColorspaceDeviceGray )ToPdfObject ()_bcd .PdfObject {return _bcd .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_ddccd *fontFile )parseASCIIPart (_cdgdg []byte )error {if len (_cdgdg )< 2||string (_cdgdg [:2])!="\u0025\u0021"{return _fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_beef ,_abdf ,_egcga :=_fgfa (_cdgdg );if _egcga !=nil {return _egcga ;};_eddce :=_begdc (_beef );_ddccd ._fcbbc =_eddce ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _ddccd ._fcbbc ==""{_aa .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _abdf !=""{_dgdcc ,_fedgd :=_gedc (_abdf );if _fedgd !=nil {return _fedgd ;};_bcec ,_fedgd :=_af .NewCustomSimpleTextEncoder (_dgdcc ,nil );if _fedgd !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_fedgd );
return nil ;};_ddccd ._fbfa =_bcec ;};return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ad *PdfAction )GetContainingPdfObject ()_bcd .PdfObject {return _ad ._fgae };

// A returns the value of the A component of the color.
func (_bge *PdfColorCalRGB )A ()float64 {return _bge [0]};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bcd .PdfObjectBool ;SigFlags *_bcd .PdfObjectInteger ;CO *_bcd .PdfObjectArray ;DR *PdfPageResources ;DA *_bcd .PdfObjectString ;Q *_bcd .PdfObjectInteger ;XFA _bcd .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _bcd .PdfObject ;_cbae *_bcd .PdfIndirectObject ;_gecc bool ;};func _aeffg (_cffgcg *_bcd .PdfObjectDictionary )(*PdfShadingType5 ,error ){_faafb :=PdfShadingType5 {};_gbbff :=_cffgcg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gbbff ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eeedd ,_gdebcc :=_gbbff .(*_bcd .PdfObjectInteger );if !_gdebcc {_aa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbbff );
return nil ,_bcd .ErrTypeError ;};_faafb .BitsPerCoordinate =_eeedd ;_gbbff =_cffgcg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gbbff ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_eeedd ,_gdebcc =_gbbff .(*_bcd .PdfObjectInteger );if !_gdebcc {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gbbff );
return nil ,_bcd .ErrTypeError ;};_faafb .BitsPerComponent =_eeedd ;_gbbff =_cffgcg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _gbbff ==nil {_aa .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_eeedd ,_gdebcc =_gbbff .(*_bcd .PdfObjectInteger );if !_gdebcc {_aa .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gbbff );
return nil ,_bcd .ErrTypeError ;};_faafb .VerticesPerRow =_eeedd ;_gbbff =_cffgcg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gbbff ==nil {_aa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_faaeb ,_gdebcc :=_gbbff .(*_bcd .PdfObjectArray );if !_gdebcc {_aa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gbbff );
return nil ,_bcd .ErrTypeError ;};_faafb .Decode =_faaeb ;if _cddag :=_cffgcg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cddag !=nil {_faafb .Function =[]PdfFunction {};if _adcbe ,_cecfg :=_cddag .(*_bcd .PdfObjectArray );_cecfg {for _ ,_gfdcg :=range _adcbe .Elements (){_cbfba ,_dcgbb :=_bggfc (_gfdcg );
if _dcgbb !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dcgbb );return nil ,_dcgbb ;};_faafb .Function =append (_faafb .Function ,_cbfba );
};}else {_agffd ,_gddca :=_bggfc (_cddag );if _gddca !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gddca );return nil ,_gddca ;
};_faafb .Function =append (_faafb .Function ,_agffd );};};return &_faafb ,nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// ToPdfObject returns the PDF representation of the function.
func (_gcbac *PdfFunctionType2 )ToPdfObject ()_bcd .PdfObject {_cecgc :=_bcd .MakeDict ();_cecgc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcd .MakeInteger (2));_fece :=&_bcd .PdfObjectArray {};for _ ,_bedgf :=range _gcbac .Domain {_fece .Append (_bcd .MakeFloat (_bedgf ));
};_cecgc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fece );if _gcbac .Range !=nil {_abga :=&_bcd .PdfObjectArray {};for _ ,_gcddc :=range _gcbac .Range {_abga .Append (_bcd .MakeFloat (_gcddc ));};_cecgc .Set ("\u0052\u0061\u006eg\u0065",_abga );};if _gcbac .C0 !=nil {_fcdd :=&_bcd .PdfObjectArray {};
for _ ,_gccca :=range _gcbac .C0 {_fcdd .Append (_bcd .MakeFloat (_gccca ));};_cecgc .Set ("\u0043\u0030",_fcdd );};if _gcbac .C1 !=nil {_cefa :=&_bcd .PdfObjectArray {};for _ ,_faad :=range _gcbac .C1 {_cefa .Append (_bcd .MakeFloat (_faad ));};_cecgc .Set ("\u0043\u0031",_cefa );
};_cecgc .Set ("\u004e",_bcd .MakeFloat (_gcbac .N ));if _gcbac ._gdede !=nil {_gcbac ._gdede .PdfObject =_cecgc ;return _gcbac ._gdede ;};return _cecgc ;};func (_adffa *fontFile )loadFromSegments (_efcg ,_gbaa []byte )error {_aa .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_efcg ),len (_gbaa ));
_ecdff :=_adffa .parseASCIIPart (_efcg );if _ecdff !=nil {return _ecdff ;};_aa .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_adffa );if len (_gbaa )==0{return nil ;};_aa .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_adffa );
return nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_aefe *PdfFieldButton )GetType ()ButtonType {_gfaa :=ButtonTypeCheckbox ;if _aefe .Ff !=nil {if (uint32 (*_aefe .Ff )&FieldFlagPushbutton .Mask ())> 0{_gfaa =ButtonTypePush ;}else if (uint32 (*_aefe .Ff )&FieldFlagRadio .Mask ())> 0{_gfaa =ButtonTypeRadio ;
};};return _gfaa ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gbed *PdfOutlineItem )ToPdfObject ()_bcd .PdfObject {_gbdbc :=_gbed ._adcb ;_bdcc :=_gbdbc .PdfObject .(*_bcd .PdfObjectDictionary );_bdcc .Set ("\u0054\u0069\u0074l\u0065",_gbed .Title );if _gbed .A !=nil {_bdcc .Set ("\u0041",_gbed .A );};if _ebfbb :=_bdcc .Get ("\u0053\u0045");
_ebfbb !=nil {_bdcc .Remove ("\u0053\u0045");};if _gbed .C !=nil {_bdcc .Set ("\u0043",_gbed .C );};if _gbed .Dest !=nil {_bdcc .Set ("\u0044\u0065\u0073\u0074",_gbed .Dest );};if _gbed .F !=nil {_bdcc .Set ("\u0046",_gbed .F );};if _gbed .Count !=nil {_bdcc .Set ("\u0043\u006f\u0075n\u0074",_bcd .MakeInteger (*_gbed .Count ));
};if _gbed .Next !=nil {_bdcc .Set ("\u004e\u0065\u0078\u0074",_gbed .Next .ToPdfObject ());};if _gbed .First !=nil {_bdcc .Set ("\u0046\u0069\u0072s\u0074",_gbed .First .ToPdfObject ());};if _gbed .Prev !=nil {_bdcc .Set ("\u0050\u0072\u0065\u0076",_gbed .Prev .GetContext ().GetContainingPdfObject ());
};if _gbed .Last !=nil {_bdcc .Set ("\u004c\u0061\u0073\u0074",_gbed .Last .GetContext ().GetContainingPdfObject ());};if _gbed .Parent !=nil {_bdcc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbed .Parent .GetContext ().GetContainingPdfObject ());};
return _gbdbc ;};type pdfSignDictionary struct{*_bcd .PdfObjectDictionary ;_geef *SignatureHandler ;_eadde *PdfSignature ;_fbdfd int64 ;_bcgdfg int ;_bcbga int ;_ddffe int ;_ebefg int ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _bcd .PdfObject )(*PdfInfo ,error ){var _edbd PdfInfo ;_gagd ,_egee :=obj .(*_bcd .PdfObjectDictionary );if !_egee {return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_gcbe :=range _gagd .Keys (){switch _gcbe {case "\u0054\u0069\u0074l\u0065":_edbd .Title ,_ =_bcd .GetString (_gagd .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_edbd .Author ,_ =_bcd .GetString (_gagd .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_edbd .Subject ,_ =_bcd .GetString (_gagd .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_edbd .Keywords ,_ =_bcd .GetString (_gagd .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_edbd .Creator ,_ =_bcd .GetString (_gagd .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_edbd .Producer ,_ =_bcd .GetString (_gagd .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_edbd .Trapped ,_ =_bcd .GetName (_gagd .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _abaeb ,_debf :=_bcd .GetString (_gagd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_debf &&_abaeb .String ()!=""{_fcfcf ,_adff :=NewPdfDate (_abaeb .String ());if _adff !=nil {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_adff );
};_edbd .CreationDate =&_fcfcf ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _ageg ,_dggb :=_bcd .GetString (_gagd .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_dggb &&_ageg .String ()!=""{_baga ,_ddeg :=NewPdfDate (_ageg .String ());if _ddeg !=nil {return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_ddeg );
};_edbd .ModifiedDate =&_baga ;};default:_aadgc ,_ :=_bcd .GetString (_gagd .Get (_gcbe ));if _edbd ._fdafc ==nil {_edbd ._fdafc =_bcd .MakeDict ();};_edbd ._fdafc .Set (_gcbe ,_aadgc );};};return &_edbd ,nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gcbge []_bcd .PdfObject )([]_bcd .PdfObject ,error );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fagad pdfCIDFontType0 )GetCharMetrics (code _af .CharCode )(_aab .CharMetrics ,bool ){_bcbc :=_fagad ._gcaba ;if _bgcgb ,_fcbgc :=_fagad ._adgbe [code ];_fcbgc {_bcbc =_bgcgb ;};return _aab .CharMetrics {Wx :_bcbc },true ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_fgege *Outline )ToPdfOutline ()*PdfOutline {_fegee :=NewPdfOutline ();var _fedfc []*PdfOutlineItem ;var _fabge int64 ;var _ggbf *PdfOutlineItem ;for _ ,_feddc :=range _fgege .Entries {_ebbg ,_ecfce :=_feddc .ToPdfOutlineItem ();_ebbg .Parent =&_fegee .PdfOutlineTreeNode ;
if _ggbf !=nil {_ggbf .Next =&_ebbg .PdfOutlineTreeNode ;_ebbg .Prev =&_ggbf .PdfOutlineTreeNode ;};_fedfc =append (_fedfc ,_ebbg );_fabge +=_ecfce ;_ggbf =_ebbg ;};_addge :=int64 (len (_fedfc ));_fabge +=_addge ;if _addge > 0{_fegee .First =&_fedfc [0].PdfOutlineTreeNode ;
_fegee .Last =&_fedfc [_addge -1].PdfOutlineTreeNode ;_fegee .Count =&_fabge ;};return _fegee ;};func _bfdac (_gcae *PdfField ,_dfcad _bcd .PdfObject ){for _ ,_fccfg :=range _gcae .Annotations {_fccfg .AS =_dfcad ;_fccfg .ToPdfObject ();};};

// String returns the name of the colorspace (DeviceN).
func (_dcdb *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_baafg ,_eggd :=NewStandard14Font (basefont );if _eggd !=nil {panic (_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _baafg ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_dfdad *PdfWriter )SetDocInfo (info *PdfInfo ){_dfdad .setDocInfo (info .ToPdfObject ())};func (_agf *PdfReader )newPdfAnnotationStrikeOut (_cbef *_bcd .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_egbb :=PdfAnnotationStrikeOut {};_dfa ,_eaea :=_agf .newPdfAnnotationMarkupFromDict (_cbef );
if _eaea !=nil {return nil ,_eaea ;};_egbb .PdfAnnotationMarkup =_dfa ;_egbb .QuadPoints =_cbef .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_egbb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdec *PdfAnnotationScreen )ToPdfObject ()_bcd .PdfObject {_gdec .PdfAnnotation .ToPdfObject ();_gff :=_gdec ._dbd ;_geacd :=_gff .PdfObject .(*_bcd .PdfObjectDictionary );_geacd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_geacd .SetIfNotNil ("\u0054",_gdec .T );_geacd .SetIfNotNil ("\u004d\u004b",_gdec .MK );_geacd .SetIfNotNil ("\u0041",_gdec .A );_geacd .SetIfNotNil ("\u0041\u0041",_gdec .AA );return _gff ;};func (_bffc *PdfReader )flattenFieldsWithOpts (_adgff bool ,_caade FieldAppearanceGenerator ,_egfa *FieldFlattenOpts )error {if _egfa ==nil {_egfa =&FieldFlattenOpts {};
};var _dffaf bool ;_ebbdb :=map[*PdfAnnotation ]bool {};{var _agdg []*PdfField ;_dcece :=_bffc .AcroForm ;if _dcece !=nil {if _egfa .FilterFunc !=nil {_agdg =_dcece .filteredFields (_egfa .FilterFunc ,true );_dffaf =_dcece .Fields !=nil &&len (*_dcece .Fields )> 0;
}else {_agdg =_dcece .AllFields ();};};for _ ,_acgeb :=range _agdg {for _ ,_eebf :=range _acgeb .Annotations {_ebbdb [_eebf .PdfAnnotation ]=_acgeb .V !=nil ;if _caade !=nil {_ccdd ,_fac :=_caade .GenerateAppearanceDict (_dcece ,_acgeb ,_eebf );if _fac !=nil {return _fac ;
};_eebf .AP =_ccdd ;};};};};if _adgff {for _ ,_fddd :=range _bffc .PageList {_ebcb ,_gdfd :=_fddd .GetAnnotations ();if _gdfd !=nil {return _gdfd ;};for _ ,_gafdd :=range _ebcb {_ebbdb [_gafdd ]=true ;};};};for _ ,_gcgec :=range _bffc .PageList {var _fdbb []*PdfAnnotation ;
if _caade !=nil {if _gfbc :=_caade .WrapContentStream (_gcgec );_gfbc !=nil {return _gfbc ;};};_cbab ,_abcf :=_gcgec .GetAnnotations ();if _abcf !=nil {return _abcf ;};for _ ,_dbdea :=range _cbab {_fegbf ,_abdga :=_ebbdb [_dbdea ];if !_abdga &&_egfa .AnnotFilterFunc !=nil {if _ ,_bgbf :=_dbdea .GetContext ().(*PdfAnnotationWidget );
!_bgbf {_abdga =_egfa .AnnotFilterFunc (_dbdea );};};if !_abdga {_fdbb =append (_fdbb ,_dbdea );continue ;};switch _dbdea .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_feedd ,_efecg ,_bafdc :=_ccdf (_dbdea );if _bafdc !=nil {if !_fegbf {_aa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_bafdc );
continue ;};if _feedd ==nil {continue ;};_aebg :=_gcgec .Resources .GenerateXObjectName ();_gcgec .Resources .SetXObjectFormByName (_aebg ,_feedd );_dcbcf ,_bafdc :=_fdeg (_feedd );if _bafdc !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_bafdc );
}else {_abfc :=_bca .IdentityMatrix ();_abfc =_abfc .Translate (-_dcbcf .Llx ,-_dcbcf .Lly );_egccf :=0.0;if _dcbcf .Width ()> 0{_egccf =_efecg .Width ()/_dcbcf .Width ();};_cecac :=0.0;if _dcbcf .Height ()> 0{_cecac =_efecg .Height ()/_dcbcf .Height ();
};_abfc =_abfc .Scale (_egccf ,_cecac );_efecg .Transform (_abfc );};_eacf :=_cc .Min (_efecg .Llx ,_efecg .Urx );_cdeg :=_cc .Min (_efecg .Lly ,_efecg .Ury );var _cgfe []string ;_cgfe =append (_cgfe ,"\u0071");_cgfe =append (_cgfe ,_f .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_eacf ,_cdeg ));
_cgfe =append (_cgfe ,_f .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_aebg .String ()));_cgfe =append (_cgfe ,"\u0051");_cfaga :=_fef .Join (_cgfe ,"\u000a");_bafdc =_gcgec .AppendContentStream (_cfaga );if _bafdc !=nil {return _bafdc ;};if _feedd .Resources !=nil {_ebdb ,_ffac :=_bcd .GetDict (_feedd .Resources .Font );
if _ffac {for _ ,_egdcb :=range _ebdb .Keys (){if !_gcgec .Resources .HasFontByName (_egdcb ){_gcgec .Resources .SetFontByName (_egdcb ,_ebdb .Get (_egdcb ));};};};};};if len (_fdbb )> 0{_gcgec ._gccae =_fdbb ;}else {_gcgec ._gccae =[]*PdfAnnotation {};
};};if !_dffaf {_bffc .AcroForm =nil ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcdde *PdfSignatureReference )ToPdfObject ()_bcd .PdfObject {_ggggb :=_bcd .MakeDict ();_ggggb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_gcdde .Type );_ggggb .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_gcdde .TransformMethod );
_ggggb .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_gcdde .TransformParams );_ggggb .SetIfNotNil ("\u0044\u0061\u0074\u0061",_gcdde .Data );_ggggb .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_gcdde .DigestMethod );
return _ggggb ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_ceaa *PdfFont )CharcodesToUnicodeWithStats (charcodes []_af .CharCode )(_gfdd []rune ,_beaaef ,_aabdb int ){_ffagd ,_beaaef ,_aabdb :=_ceaa .CharcodesToStrings (charcodes );return []rune (_fef .Join (_ffagd ,"")),_beaaef ,_aabdb ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_ebdd *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bcd .PdfObject ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_fcab *PdfFieldButton )IsRadio ()bool {return _fcab .GetType ()==ButtonTypeRadio };

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_ebda *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _aaea []*PdfField ;if _ebda .AcroForm !=nil {_aaea =_ebda .AcroForm .AllFields ();};_bfddc :=make (map[*PdfField ]struct{},len (_aaea ));for _ ,_ageac :=range _aaea {_bfddc [_ageac ]=struct{}{};
};for _ ,_egff :=range _ebda .PageList {_edaf ,_cdbga :=_egff .GetAnnotations ();if _cdbga !=nil {return false ,_cdbga ;};for _ ,_dbebb :=range _edaf {_ffcga ,_cagcb :=_dbebb .GetContext ().(*PdfAnnotationWidget );if !_cagcb {continue ;};_bebab :=_ffcga .Field ();
if _bebab ==nil {return true ,nil ;};if _ ,_ffdaf :=_bfddc [_bebab ];!_ffdaf {return true ,nil ;};};};return false ,nil ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_adfbac *PdfPageResources )SetPatternByName (keyName _bcd .PdfObjectName ,pattern _bcd .PdfObject )error {if _adfbac .Pattern ==nil {_adfbac .Pattern =_bcd .MakeDict ();};_gdebg ,_ebacf :=_bcd .GetDict (_adfbac .Pattern );if !_ebacf {return _bcd .ErrTypeError ;
};_gdebg .Set (keyName ,pattern );return nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_afcg *PdfAcroForm ,_adage *PdfField ,_ffea *PdfAnnotationWidget )(*_bcd .PdfObjectDictionary ,error );};

// AddPages adds pages to be appended to the end of the source PDF.
func (_gbgbg *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_adec :=range pages {_adec =_adec .Duplicate ();_gbcfg (_adec );_gbgbg ._ebcd =append (_gbgbg ._ebcd ,_adec );};};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ec .ReadSeeker )(*PdfFont ,error ){_dffcg ,_bdcbf :=_dc .ReadAll (r );if _bdcbf !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bdcbf );
return nil ,_bdcbf ;};_dega ,_bdcbf :=_aab .TtfParse (_ge .NewReader (_dffcg ));if _bdcbf !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bdcbf );
return nil ,_bdcbf ;};_gedf :=&pdfCIDFontType2 {fontCommon :fontCommon {_ffaca :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bcd .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_dega .Widths )<=0{return nil ,_fcf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_ebdca :=1000.0/float64 (_dega .UnitsPerEm );_abfeb :=_ebdca *float64 (_dega .Widths [0]);_dcce :=make (map[rune ]int );_fcfdg :=make (map[_aab .GID ]int );_fbcfe :=_aab .GID (len (_dega .Widths ));for _cbcd ,_dbfb :=range _dega .Chars {if _dbfb > _fbcfe -1{continue ;
};_dbdg :=int (_ebdca *float64 (_dega .Widths [_dbfb ]));_dcce [_cbcd ]=_dbdg ;_fcfdg [_dbfb ]=_dbdg ;};_gedf ._ffda =_dcce ;_gedf .DW =_bcd .MakeInteger (int64 (_abfeb ));_cfdae :=_cbfec (_fcfdg ,uint16 (_fbcfe ));_gedf .W =_bcd .MakeIndirectObject (_cfdae );
_ggebe :=_bcd .MakeDict ();_ggebe .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bcd .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_ggebe .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bcd .MakeString ("\u0041\u0064\u006fb\u0065"));
_ggebe .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bcd .MakeInteger (0));_gedf .CIDSystemInfo =_ggebe ;_cbffb :=&PdfFontDescriptor {FontName :_bcd .MakeName (_dega .PostScriptName ),Ascent :_bcd .MakeFloat (_ebdca *float64 (_dega .TypoAscender )),Descent :_bcd .MakeFloat (_ebdca *float64 (_dega .TypoDescender )),CapHeight :_bcd .MakeFloat (_ebdca *float64 (_dega .CapHeight )),FontBBox :_bcd .MakeArrayFromFloats ([]float64 {_ebdca *float64 (_dega .Xmin ),_ebdca *float64 (_dega .Ymin ),_ebdca *float64 (_dega .Xmax ),_ebdca *float64 (_dega .Ymax )}),ItalicAngle :_bcd .MakeFloat (_dega .ItalicAngle ),MissingWidth :_bcd .MakeFloat (_abfeb )};
_edaab ,_bdcbf :=_bcd .MakeStream (_dffcg ,_bcd .NewFlateEncoder ());if _bdcbf !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bdcbf );
return nil ,_bdcbf ;};_edaab .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bcd .MakeInteger (int64 (len (_dffcg ))));_cbffb .FontFile2 =_edaab ;if _dega .Bold {_cbffb .StemV =_bcd .MakeInteger (120);}else {_cbffb .StemV =_bcd .MakeInteger (70);
};_abdb :=_fdae ;if _dega .IsFixedPitch {_abdb |=_dcebc ;};if _dega .ItalicAngle !=0{_abdb |=_cefed ;};_cbffb .Flags =_bcd .MakeInteger (int64 (_abdb ));_gedf ._gagg =_dega .PostScriptName ;_gedf ._agda =_cbffb ;_befg :=pdfFontType0 {fontCommon :fontCommon {_ffaca :"\u0054\u0079\u0070e\u0030",_gagg :_dega .PostScriptName },DescendantFont :&PdfFont {_fbcb :_gedf },Encoding :_bcd .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_ggdfd :_dega .NewEncoder ()};
if len (_dega .Chars )> 0{_afccf :=make (map[_dca .CharCode ]rune ,len (_dega .Chars ));for _dbeba ,_cdga :=range _dega .Chars {_dcdd :=_dca .CharCode (_cdga );if _afdcc ,_cbfa :=_afccf [_dcdd ];!_cbfa ||(_cbfa &&_afdcc > _dbeba ){_afccf [_dcdd ]=_dbeba ;
};};_befg ._fbfb =_dca .NewToUnicodeCMap (_afccf );};_fbccf :=PdfFont {_fbcb :&_befg };return &_fbccf ,nil ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_gbde *PdfWriter )GetPdfVersion ()string {return _gbde .getPdfVersion ()};

// SetLocation sets the `Location` field of the signature.
func (_egfbd *PdfSignature )SetLocation (location string ){_egfbd .Location =_bcd .MakeString (location )};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_cgfb *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_dbbbb :=_gea .NewReader (img .getBase ());_ccbba :=_gac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_adda :=_gea .NewWriter (_ccbba );
_bffa :=_cc .Pow (2,float64 (img .BitsPerComponent ))-1;_acdd :=make ([]uint32 ,3);var (_dfafa uint32 ;ANorm ,X ,Y ,Z ,_gdbgec ,_cbff ,_fccg float64 ;_dcag error ;);for {_dfafa ,_dcag =_dbbbb .ReadSample ();if _dcag ==_ec .EOF {break ;}else if _dcag !=nil {return img ,_dcag ;
};ANorm =float64 (_dfafa )/_bffa ;X =_cgfb .WhitePoint [0]*_cc .Pow (ANorm ,_cgfb .Gamma );Y =_cgfb .WhitePoint [1]*_cc .Pow (ANorm ,_cgfb .Gamma );Z =_cgfb .WhitePoint [2]*_cc .Pow (ANorm ,_cgfb .Gamma );_gdbgec =3.240479*X +-1.537150*Y +-0.498535*Z ;
_cbff =-0.969256*X +1.875992*Y +0.041556*Z ;_fccg =0.055648*X +-0.204043*Y +1.057311*Z ;_gdbgec =_cc .Min (_cc .Max (_gdbgec ,0),1.0);_cbff =_cc .Min (_cc .Max (_cbff ,0),1.0);_fccg =_cc .Min (_cc .Max (_fccg ,0),1.0);_acdd [0]=uint32 (_gdbgec *_bffa );
_acdd [1]=uint32 (_cbff *_bffa );_acdd [2]=uint32 (_fccg *_bffa );if _dcag =_adda .WriteSamples (_acdd );_dcag !=nil {return img ,_dcag ;};};return _bbbcd (&_ccbba ),nil ;};var _edfdd =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bcd .PdfObjectDictionary )(*PdfPageResources ,error ){_ceacc :=NewPdfPageResources ();if _cbeae :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cbeae !=nil {_ceacc .ExtGState =_cbeae ;};if _dggae :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_dggae !=nil &&!_bcd .IsNullObject (_dggae ){_ceacc .ColorSpace =_dggae ;};if _edafd :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_edafd !=nil {_ceacc .Pattern =_edafd ;};if _faca :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_faca !=nil {_ceacc .Shading =_faca ;
};if _aafefb :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_aafefb !=nil {_ceacc .XObject =_aafefb ;};if _fabfc :=_bcd .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_fabfc !=nil {_ceacc .Font =_fabfc ;};if _cfage :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_cfage !=nil {_ceacc .ProcSet =_cfage ;};if _fgfc :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_fgfc !=nil {_ceacc .Properties =_fgfc ;};return _ceacc ,nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_fcee :=NewPdfAnnotation ();_fdd :=&PdfAnnotationInk {};_fdd .PdfAnnotation =_fcee ;_fdd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcee .SetContext (_fdd );return _fdd ;};func (_gbdb *PdfReader )newPdfAnnotationWatermarkFromDict (_geeac *_bcd .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_aeac :=PdfAnnotationWatermark {};
_aeac .FixedPrint =_geeac .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_aeac ,nil ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bfbge *PdfWriter )SetPageLabels (pageLabels _bcd .PdfObject )error {if pageLabels ==nil {return nil ;};_aa .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_bfbge ._daaaa .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _bfbge .addObjects (pageLabels );};

// GetVersion gets the document version.
func (_gabbg *PdfWriter )GetVersion ()_bcd .Version {return _gabbg ._cecgb };

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bcd .PdfObject ;};func (_bfbcf *PdfShading )getShadingDict ()(*_bcd .PdfObjectDictionary ,error ){_cbede :=_bfbcf ._gggef ;if _bfeag ,_bebdb :=_cbede .(*_bcd .PdfIndirectObject );_bebdb {_efdfb ,_fffg :=_bfeag .PdfObject .(*_bcd .PdfObjectDictionary );
if !_fffg {return nil ,_bcd .ErrTypeError ;};return _efdfb ,nil ;}else if _baed ,_cegga :=_cbede .(*_bcd .PdfObjectStream );_cegga {return _baed .PdfObjectDictionary ,nil ;}else if _fedaf ,_beace :=_cbede .(*_bcd .PdfObjectDictionary );_beace {return _fedaf ,nil ;
}else {_aa .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_bcd .ErrTypeError ;};};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fgcec pdfFontSimple )GetRuneMetrics (r rune )(_aab .CharMetrics ,bool ){if _fgcec ._daeea !=nil {_cabg ,_dgfb :=_fgcec ._daeea .Read (r );if _dgfb {return _cabg ,true ;};};_ebfa :=_fgcec .Encoder ();if _ebfa ==nil {_aa .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fgcec );
return _aab .CharMetrics {},false ;};_ecdbc ,_agcfe :=_ebfa .RuneToCharcode (r );if !_agcfe {if r !=' '{_aa .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fgcec );
};return _aab .CharMetrics {},false ;};_gcbda ,_bfeff :=_fgcec .GetCharMetrics (_ecdbc );return _gcbda ,_bfeff ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bcd .StreamEncoder )(*XObjectImage ,error ){_bcag :=NewXObjectImage ();return UpdateXObjectImageFromImage (_bcag ,img ,cs ,encoder );};func (_dbefbg *PdfWriter )writeTrailer (_aecb int ){_dbefbg .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");
for _cdbfd :=0;_cdbfd <=_aecb ;{for ;_cdbfd <=_aecb ;_cdbfd ++{_gffaa ,_aefbd :=_dbefbg ._dfafe [_cdbfd ];if _aefbd &&(!_dbefbg ._dbcbd ||_dbefbg ._dbcbd &&(_gffaa .Type ==1&&_gffaa .Offset >=_dbefbg ._cbfdd ||_gffaa .Type ==0)){break ;};};var _bbfga int ;
for _bbfga =_cdbfd +1;_bbfga <=_aecb ;_bbfga ++{_cbeac ,_daab :=_dbefbg ._dfafe [_bbfga ];if _daab &&(!_dbefbg ._dbcbd ||_dbefbg ._dbcbd &&(_cbeac .Type ==1&&_cbeac .Offset > _dbefbg ._cbfdd )){continue ;};break ;};_bfbgec :=_f .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_cdbfd ,_bbfga -_cdbfd );
_dbefbg .writeString (_bfbgec );for _gdce :=_cdbfd ;_gdce < _bbfga ;_gdce ++{_dcgce :=_dbefbg ._dfafe [_gdce ];switch _dcgce .Type {case 0:_bfbgec =_f .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_dbefbg .writeString (_bfbgec );case 1:_bfbgec =_f .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_dcgce .Offset ,0);_dbefbg .writeString (_bfbgec );};};_cdbfd =_bbfga +1;};_gecfa :=_bcd .MakeDict ();_gecfa .Set ("\u0049\u006e\u0066\u006f",_dbefbg ._acdbc );
_gecfa .Set ("\u0052\u006f\u006f\u0074",_dbefbg ._ageaa );_gecfa .Set ("\u0053\u0069\u007a\u0065",_bcd .MakeInteger (int64 (_aecb +1)));if _dbefbg ._dbcbd &&_dbefbg ._bfcad > 0{_gecfa .Set ("\u0050\u0072\u0065\u0076",_bcd .MakeInteger (_dbefbg ._bfcad ));
};if _dbefbg ._bdaag !=nil {_gecfa .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_dbefbg ._bbbea );};if _dbefbg ._cfgbb ==nil &&_dbefbg ._fbcec !=""&&_dbefbg ._efadda !=""{_dbefbg ._cfgbb =_bcd .MakeArray (_bcd .MakeHexString (_dbefbg ._fbcec ),_bcd .MakeHexString (_dbefbg ._efadda ));
};if _dbefbg ._cfgbb !=nil {_gecfa .Set ("\u0049\u0044",_dbefbg ._cfgbb );_aa .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_dbefbg ._cfgbb );};_dbefbg .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_dbefbg .writeString (_gecfa .WriteString ());
_dbefbg .writeString ("\u000a");};func _bgcda (_dfeb _bcd .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_aa .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dfeb .String (),_dfeb );
_eaebc :=NewPdfColorspaceSpecialPattern ();if _bcddg ,_cbeda :=_dfeb .(*_bcd .PdfIndirectObject );_cbeda {_eaebc ._aaee =_bcddg ;};_dfeb =_bcd .TraceToDirectObject (_dfeb );if _ggcc ,_dece :=_dfeb .(*_bcd .PdfObjectName );_dece {if *_ggcc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_f .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _eaebc ,nil ;};_cggfb ,_bdeb :=_dfeb .(*_bcd .PdfObjectArray );if !_bdeb {_aa .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dfeb );
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _cggfb .Len ()!=1&&_cggfb .Len ()!=2{_aa .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_cggfb );
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dfeb =_cggfb .Get (0);if _addc ,_cagaa :=_dfeb .(*_bcd .PdfObjectName );_cagaa {if *_addc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_aa .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_addc );
return nil ,_f .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _cggfb .Len ()> 1{_dfeb =_cggfb .Get (1);_dfeb =_bcd .TraceToDirectObject (_dfeb );_aaaa ,_cdbc :=NewPdfColorspaceFromPdfObject (_dfeb );if _cdbc !=nil {return nil ,_cdbc ;
};_eaebc .UnderlyingCS =_aaaa ;};_aa .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_eaebc .UnderlyingCS );
return _eaebc ,nil ;};

// L returns the value of the L component of the color.
func (_cebcc *PdfColorLab )L ()float64 {return _cebcc [0]};

// Encrypt encrypts the output file with a specified user/owner password.
func (_agcfa *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_fddbe :=RC4_128bit ;if options !=nil {_fddbe =options .Algorithm ;};_ggcga :=_fcg .PermOwner ;if options !=nil {_ggcga =options .Permissions ;};var _fade _gdb .Filter ;
switch _fddbe {case RC4_128bit :_fade =_gdb .NewFilterV2 (16);case AES_128bit :_fade =_gdb .NewFilterAESV2 ();case AES_256bit :_fade =_gdb .NewFilterAESV3 ();default:return _f .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_gcfcc ,_acbfc ,_ggbfg :=_bcd .PdfCryptNewEncrypt (_fade ,userPass ,ownerPass ,_ggcga );if _ggbfg !=nil {return _ggbfg ;};_agcfa ._bdaag =_gcfcc ;if _acbfc .Major !=0{_agcfa .SetVersion (_acbfc .Major ,_acbfc .Minor );};_agcfa ._agece =_acbfc .Encrypt ;
_agcfa ._fbcec ,_agcfa ._efadda =_acbfc .ID0 ,_acbfc .ID1 ;_fcefe :=_bcd .MakeIndirectObject (_acbfc .Encrypt );_agcfa ._bbbea =_fcefe ;_agcfa .addObject (_fcefe );return nil ;};func (_dgf *PdfReader )newPdfAnnotationTextFromDict (_bfbb *_bcd .PdfObjectDictionary )(*PdfAnnotationText ,error ){_ggee :=PdfAnnotationText {};
_ffdg ,_fgg :=_dgf .newPdfAnnotationMarkupFromDict (_bfbb );if _fgg !=nil {return nil ,_fgg ;};_ggee .PdfAnnotationMarkup =_ffdg ;_ggee .Open =_bfbb .Get ("\u004f\u0070\u0065\u006e");_ggee .Name =_bfbb .Get ("\u004e\u0061\u006d\u0065");_ggee .State =_bfbb .Get ("\u0053\u0074\u0061t\u0065");
_ggee .StateModel =_bfbb .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_ggee ,nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_edcgd *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _edcgd ._dabac .(*PdfTilingPattern );};func (_bedg *PdfReader )loadAction (_fcdg _bcd .PdfObject )(*PdfAction ,error ){if _cbcb ,_edec :=_bcd .GetIndirect (_fcdg );_edec {_edcb ,_bfbf :=_bedg .newPdfActionFromIndirectObject (_cbcb );
if _bfbf !=nil {return nil ,_bfbf ;};return _edcb ,nil ;}else if !_bcd .IsNullObject (_fcdg ){return nil ,_fcf .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ecf *PdfAnnotationFreeText )ToPdfObject ()_bcd .PdfObject {_ecf .PdfAnnotation .ToPdfObject ();_deef :=_ecf ._dbd ;_efbb :=_deef .PdfObject .(*_bcd .PdfObjectDictionary );_ecf .PdfAnnotationMarkup .appendToPdfDictionary (_efbb );_efbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_efbb .SetIfNotNil ("\u0044\u0041",_ecf .DA );_efbb .SetIfNotNil ("\u0051",_ecf .Q );_efbb .SetIfNotNil ("\u0052\u0043",_ecf .RC );_efbb .SetIfNotNil ("\u0044\u0053",_ecf .DS );_efbb .SetIfNotNil ("\u0043\u004c",_ecf .CL );_efbb .SetIfNotNil ("\u0049\u0054",_ecf .IT );
_efbb .SetIfNotNil ("\u0042\u0045",_ecf .BE );_efbb .SetIfNotNil ("\u0052\u0044",_ecf .RD );_efbb .SetIfNotNil ("\u0042\u0053",_ecf .BS );_efbb .SetIfNotNil ("\u004c\u0045",_ecf .LE );return _deef ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_bcab *PdfFont )CharcodesToUnicode (charcodes []_af .CharCode )[]rune {_fgdcf ,_ ,_ :=_bcab .CharcodesToUnicodeWithStats (charcodes );return _fgdcf ;};func (_dgdb *PdfReader )newPdfAnnotationProjectionFromDict (_afd *_bcd .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_aebb :=&PdfAnnotationProjection {};
_geacc ,_efgf :=_dgdb .newPdfAnnotationMarkupFromDict (_afd );if _efgf !=nil {return nil ,_efgf ;};_aebb .PdfAnnotationMarkup =_geacc ;return _aebb ,nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_cfcc *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _bfbe []float64 ;for _cadb :=0;_cadb < _cfcc .GetNumComponents ();_cadb ++{_bfbe =append (_bfbe ,0.0,1.0);};return _bfbe ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_fbcgg *PdfWriter )SetRotation (rotate int64 )error {_aecde ,_fdeeb :=_bcd .GetDict (_fbcgg ._dbege );if !_fdeeb {return ErrTypeCheck ;};_aecde .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bcd .MakeInteger (rotate ));return nil ;};

// SetReason sets the `Reason` field of the signature.
func (_gabga *PdfSignature )SetReason (reason string ){_gabga .Reason =_bcd .MakeString (reason )};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// ToInteger convert to an integer format.
func (_dgebb *PdfColorCalGray )ToInteger (bits int )uint32 {_cgbf :=_cc .Pow (2,float64 (bits ))-1;return uint32 (_cgbf *_dgebb .Val ());};func (_bbcg *PdfReader )newPdfAnnotationSoundFromDict (_deg *_bcd .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_dcf :=PdfAnnotationSound {};
_cee ,_efaa :=_bbcg .newPdfAnnotationMarkupFromDict (_deg );if _efaa !=nil {return nil ,_efaa ;};_dcf .PdfAnnotationMarkup =_cee ;_dcf .Name =_deg .Get ("\u004e\u0061\u006d\u0065");_dcf .Sound =_deg .Get ("\u0053\u006f\u0075n\u0064");return &_dcf ,nil ;
};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_bddb *PdfOutlineTreeNode )ToPdfObject ()_bcd .PdfObject {return _bddb .GetContext ().ToPdfObject ();};func (_babd *PdfWriter )writeOutputIntents ()error {if len (_babd ._ecbbc )==0{return nil ;};_eaeac :=make ([]_bcd .PdfObject ,len (_babd ._ecbbc ));
for _fcbde ,_ceebg :=range _babd ._ecbbc {_dcgbe :=_ceebg .ToPdfObject ();_eaeac [_fcbde ]=_bcd .MakeIndirectObject (_dcgbe );};_gcebg :=_bcd .MakeIndirectObject (_bcd .MakeArray (_eaeac ...));_babd ._daaaa .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_gcebg );
if _babfg :=_babd .addObjects (_gcebg );_babfg !=nil {return _babfg ;};return nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_eabec *PdfPageResources )GetColorspaceByName (keyName _bcd .PdfObjectName )(PdfColorspace ,bool ){_dggcb ,_eadea :=_eabec .GetColorspaces ();if _eadea !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eadea );
return nil ,false ;};if _dggcb ==nil {return nil ,false ;};_aggea ,_dcddc :=_dggcb .Colorspaces [string (keyName )];if !_dcddc {return nil ,false ;};return _aggea ,true ;};func (_dcfg *PdfReader )newPdfAnnotationPrinterMarkFromDict (_dgbd *_bcd .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_dfe :=PdfAnnotationPrinterMark {};
_dfe .MN =_dgbd .Get ("\u004d\u004e");return &_dfe ,nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_bebf *PdfColorLab )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_afac *PdfAnnotationLine )ToPdfObject ()_bcd .PdfObject {_afac .PdfAnnotation .ToPdfObject ();_gcbd :=_afac ._dbd ;_bbd :=_gcbd .PdfObject .(*_bcd .PdfObjectDictionary );_afac .PdfAnnotationMarkup .appendToPdfDictionary (_bbd );_bbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u004c\u0069\u006e\u0065"));
_bbd .SetIfNotNil ("\u004c",_afac .L );_bbd .SetIfNotNil ("\u0042\u0053",_afac .BS );_bbd .SetIfNotNil ("\u004c\u0045",_afac .LE );_bbd .SetIfNotNil ("\u0049\u0043",_afac .IC );_bbd .SetIfNotNil ("\u004c\u004c",_afac .LL );_bbd .SetIfNotNil ("\u004c\u004c\u0045",_afac .LLE );
_bbd .SetIfNotNil ("\u0043\u0061\u0070",_afac .Cap );_bbd .SetIfNotNil ("\u0049\u0054",_afac .IT );_bbd .SetIfNotNil ("\u004c\u004c\u004f",_afac .LLO );_bbd .SetIfNotNil ("\u0043\u0050",_afac .CP );_bbd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_afac .Measure );
_bbd .SetIfNotNil ("\u0043\u004f",_afac .CO );return _gcbd ;};func _gccc (_gecd *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_gecd }};func (_dd *PdfReader )newPdfActionFromIndirectObject (_cg *_bcd .PdfIndirectObject )(*PdfAction ,error ){_bdd ,_ead :=_cg .PdfObject .(*_bcd .PdfObjectDictionary );
if !_ead {return nil ,_f .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_dd ._gaafcb .GetModelFromPrimitive (_bdd );model !=nil {_edg ,_dcbb :=model .(*PdfAction );if !_dcbb {return nil ,_f .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _edg ,nil ;};_eea :=&PdfAction {};_eea ._fgae =_cg ;_dd ._gaafcb .Register (_bdd ,_eea );if _bbb :=_bdd .Get ("\u0054\u0079\u0070\u0065");_bbb !=nil {_bbf ,_dae :=_bbb .(*_bcd .PdfObjectName );if !_dae {_aa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bbb );
}else {if *_bbf !="\u0041\u0063\u0074\u0069\u006f\u006e"{_aa .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_bbf );
};_eea .Type =_bbf ;};};if _cfb :=_bdd .Get ("\u004e\u0065\u0078\u0074");_cfb !=nil {_eea .Next =_cfb ;};if _ef :=_bdd .Get ("\u0053");_ef !=nil {_eea .S =_ef ;};_bcg ,_egc :=_eea .S .(*_bcd .PdfObjectName );if !_egc {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_eea .S );
return nil ,_f .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_eea .S );};_adag :=PdfActionType (_bcg .String ());
switch _adag {case ActionTypeGoTo :_bbcf ,_ccbd :=_dd .newPdfActionGotoFromDict (_bdd );if _ccbd !=nil {return nil ,_ccbd ;};_bbcf .PdfAction =_eea ;_eea ._gc =_bbcf ;return _eea ,nil ;case ActionTypeGoToR :_abc ,_ecbb :=_dd .newPdfActionGotoRFromDict (_bdd );
if _ecbb !=nil {return nil ,_ecbb ;};_abc .PdfAction =_eea ;_eea ._gc =_abc ;return _eea ,nil ;case ActionTypeGoToE :_bgf ,_abf :=_dd .newPdfActionGotoEFromDict (_bdd );if _abf !=nil {return nil ,_abf ;};_bgf .PdfAction =_eea ;_eea ._gc =_bgf ;return _eea ,nil ;
case ActionTypeLaunch :_fce ,_gdd :=_dd .newPdfActionLaunchFromDict (_bdd );if _gdd !=nil {return nil ,_gdd ;};_fce .PdfAction =_eea ;_eea ._gc =_fce ;return _eea ,nil ;case ActionTypeThread :_fgab ,_geg :=_dd .newPdfActionThreadFromDict (_bdd );if _geg !=nil {return nil ,_geg ;
};_fgab .PdfAction =_eea ;_eea ._gc =_fgab ;return _eea ,nil ;case ActionTypeURI :_aadg ,_age :=_dd .newPdfActionURIFromDict (_bdd );if _age !=nil {return nil ,_age ;};_aadg .PdfAction =_eea ;_eea ._gc =_aadg ;return _eea ,nil ;case ActionTypeSound :_edff ,_dgc :=_dd .newPdfActionSoundFromDict (_bdd );
if _dgc !=nil {return nil ,_dgc ;};_edff .PdfAction =_eea ;_eea ._gc =_edff ;return _eea ,nil ;case ActionTypeMovie :_ccad ,_cab :=_dd .newPdfActionMovieFromDict (_bdd );if _cab !=nil {return nil ,_cab ;};_ccad .PdfAction =_eea ;_eea ._gc =_ccad ;return _eea ,nil ;
case ActionTypeHide :_dbb ,_ebe :=_dd .newPdfActionHideFromDict (_bdd );if _ebe !=nil {return nil ,_ebe ;};_dbb .PdfAction =_eea ;_eea ._gc =_dbb ;return _eea ,nil ;case ActionTypeNamed :_agec ,_edbe :=_dd .newPdfActionNamedFromDict (_bdd );if _edbe !=nil {return nil ,_edbe ;
};_agec .PdfAction =_eea ;_eea ._gc =_agec ;return _eea ,nil ;case ActionTypeSubmitForm :_dad ,_cbc :=_dd .newPdfActionSubmitFormFromDict (_bdd );if _cbc !=nil {return nil ,_cbc ;};_dad .PdfAction =_eea ;_eea ._gc =_dad ;return _eea ,nil ;case ActionTypeResetForm :_gegf ,_cfg :=_dd .newPdfActionResetFormFromDict (_bdd );
if _cfg !=nil {return nil ,_cfg ;};_gegf .PdfAction =_eea ;_eea ._gc =_gegf ;return _eea ,nil ;case ActionTypeImportData :_efc ,_ddg :=_dd .newPdfActionImportDataFromDict (_bdd );if _ddg !=nil {return nil ,_ddg ;};_efc .PdfAction =_eea ;_eea ._gc =_efc ;
return _eea ,nil ;case ActionTypeSetOCGState :_afe ,_adcd :=_dd .newPdfActionSetOCGStateFromDict (_bdd );if _adcd !=nil {return nil ,_adcd ;};_afe .PdfAction =_eea ;_eea ._gc =_afe ;return _eea ,nil ;case ActionTypeRendition :_ceb ,_bef :=_dd .newPdfActionRenditionFromDict (_bdd );
if _bef !=nil {return nil ,_bef ;};_ceb .PdfAction =_eea ;_eea ._gc =_ceb ;return _eea ,nil ;case ActionTypeTrans :_ggc ,_fbb :=_dd .newPdfActionTransFromDict (_bdd );if _fbb !=nil {return nil ,_fbb ;};_ggc .PdfAction =_eea ;_eea ._gc =_ggc ;return _eea ,nil ;
case ActionTypeGoTo3DView :_edbed ,_bbfb :=_dd .newPdfActionGoTo3DViewFromDict (_bdd );if _bbfb !=nil {return nil ,_bbfb ;};_edbed .PdfAction =_eea ;_eea ._gc =_edbed ;return _eea ,nil ;case ActionTypeJavaScript :_fbf ,_fbbf :=_dd .newPdfActionJavaScriptFromDict (_bdd );
if _fbbf !=nil {return nil ,_fbbf ;};_fbf .PdfAction =_eea ;_eea ._gc =_fbf ;return _eea ,nil ;};_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_adag );
return nil ,nil ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};func _dfcb (_gcbb _bcd .PdfObject )(*PdfFunctionType2 ,error ){_bfgfe :=&PdfFunctionType2 {};var _bacc *_bcd .PdfObjectDictionary ;if _aedea ,_bdec :=_gcbb .(*_bcd .PdfIndirectObject );_bdec {_deadc ,_afega :=_aedea .PdfObject .(*_bcd .PdfObjectDictionary );
if !_afega {return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bfgfe ._gdede =_aedea ;_bacc =_deadc ;}else if _facd ,_ebbcc :=_gcbb .(*_bcd .PdfObjectDictionary );_ebbcc {_bacc =_facd ;}else {return nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_aa .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_bacc .String ());_gaafb ,_dgaa :=_bcd .TraceToDirectObject (_bacc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcd .PdfObjectArray );if !_dgaa {_aa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fcf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gaafb .Len ()< 0||_gaafb .Len ()%2!=0{_aa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_fcf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_faagg ,_cdfd :=_gaafb .ToFloat64Array ();if _cdfd !=nil {return nil ,_cdfd ;};_bfgfe .Domain =_faagg ;_gaafb ,_dgaa =_bcd .TraceToDirectObject (_bacc .Get ("\u0052\u0061\u006eg\u0065")).(*_bcd .PdfObjectArray );
if _dgaa {if _gaafb .Len ()< 0||_gaafb .Len ()%2!=0{return nil ,_fcf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ebbfb ,_cgegd :=_gaafb .ToFloat64Array ();if _cgegd !=nil {return nil ,_cgegd ;};_bfgfe .Range =_ebbfb ;
};_gaafb ,_dgaa =_bcd .TraceToDirectObject (_bacc .Get ("\u0043\u0030")).(*_bcd .PdfObjectArray );if _dgaa {_fecc ,_fegfc :=_gaafb .ToFloat64Array ();if _fegfc !=nil {return nil ,_fegfc ;};_bfgfe .C0 =_fecc ;};_gaafb ,_dgaa =_bcd .TraceToDirectObject (_bacc .Get ("\u0043\u0031")).(*_bcd .PdfObjectArray );
if _dgaa {_fffee ,_agca :=_gaafb .ToFloat64Array ();if _agca !=nil {return nil ,_agca ;};_bfgfe .C1 =_fffee ;};if len (_bfgfe .C0 )!=len (_bfgfe .C1 ){_aa .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_bcd .ErrRangeError ;};N ,_cdfd :=_bcd .GetNumberAsFloat (_bcd .TraceToDirectObject (_bacc .Get ("\u004e")));if _cdfd !=nil {_aa .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_bacc .String ());
return nil ,_cdfd ;};_bfgfe .N =N ;return _bfgfe ,nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_gdece *LTV )EnableByName (name string ,extraCerts []*_b .Certificate )error {_beefa :=_gdece ._dadd ._aagg .AcroForm ;for _ ,_becd :=range _beefa .AllFields (){_dedd ,_ :=_becd .GetContext ().(*PdfFieldSignature );if _dedd ==nil {continue ;};if _fbgb :=_dedd .PartialName ();
_fbgb !=name {continue ;};return _gdece .Enable (_dedd .V ,extraCerts );};return nil ;};func (_dba *PdfReader )newPdfActionRenditionFromDict (_gbea *_bcd .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_gbea .Get ("\u0052"),AN :_gbea .Get ("\u0041\u004e"),OP :_gbea .Get ("\u004f\u0050"),JS :_gbea .Get ("\u004a\u0053")},nil ;
};func (_dga *PdfReader )newPdfActionTransFromDict (_gecf *_bcd .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_gecf .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_aedf *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_cgcd :=_gea .NewReader (img .getBase ());_aeebf :=_gac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_aedf .AlternateSpace .GetNumComponents (),nil ,img ._fafbg ,nil );
_ebgd :=_gea .NewWriter (_aeebf );_gddd :=_cc .Pow (2,float64 (img .BitsPerComponent ))-1;_aa .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_aa .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_aedf .TintTransform );_fede :=_aedf .AlternateSpace .DecodeArray ();var (_bccc uint32 ;_eegg error ;);for {_bccc ,_eegg =_cgcd .ReadSample ();if _eegg ==_ec .EOF {break ;
};if _eegg !=nil {return img ,_eegg ;};_gdgb :=float64 (_bccc )/_gddd ;_eegb ,_gafc :=_aedf .TintTransform .Evaluate ([]float64 {_gdgb });if _gafc !=nil {return img ,_gafc ;};for _cbfef ,_beac :=range _eegb {_ecdcg :=_gac .LinearInterpolate (_beac ,_fede [_cbfef *2],_fede [_cbfef *2+1],0,1);
if _gafc =_ebgd .WriteSample (uint32 (_ecdcg *_gddd ));_gafc !=nil {return img ,_gafc ;};};};return _aedf .AlternateSpace .ImageToRGB (_bbbcd (&_aeebf ));};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_deda *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func (_gecde *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _gecde ._aceagb .GetCrypter ()!=nil &&!_gecde ._aceagb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bgfda :=_gecde ._babac ;_bbge :=_bgfda .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _bbge ==nil {return nil ,nil ;};_feede ,_bfccg :=_bcd .GetIndirect (_bbge );_bbge =_bcd .TraceToDirectObject (_bbge );if _bcd .IsNullObject (_bbge ){_aa .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_aceagbb ,_ebfaf :=_bcd .GetDict (_bbge );if !_ebfaf {_aa .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bbge );_aa .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bbge );};_aa .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_aa .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_gecde ._aacc {_acfbg :=_gecde .traverseObjectData (_aceagbb );
if _acfbg !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_acfbg );
return nil ,_acfbg ;};};_gcged ,_efbfb :=_gecde .newPdfAcroFormFromDict (_feede ,_aceagbb );if _efbfb !=nil {return nil ,_efbfb ;};_gcged ._gecc =!_bfccg ;return _gcged ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_gaeg :=NewPdfAnnotation ();_dbcf :=&PdfAnnotationHighlight {};_dbcf .PdfAnnotation =_gaeg ;_dbcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gaeg .SetContext (_dbcf );return _dbcf ;};func _degf (_dcecf *_bcd .PdfObjectDictionary ,_deba *fontCommon )(*pdfFontType0 ,error ){_ebca ,_gfbbg :=_bcd .GetArray (_dcecf .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_gfbbg {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_deba );
return nil ,_bcd .ErrRangeError ;};if _ebca .Len ()!=1{_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_ebca .Len ());return nil ,_bcd .ErrRangeError ;
};_aaff ,_debfe :=_gbbf (_ebca .Get (0),false );if _debfe !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_debfe ,_deba );
return nil ,_debfe ;};_ggab :=_ddbga (_deba );_ggab .DescendantFont =_aaff ;_dfbae ,_gfbbg :=_bcd .GetNameVal (_dcecf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _gfbbg {if _dfbae =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_dfbae =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_ggab ._ggdfd =_af .NewIdentityTextEncoder (_dfbae );
}else if _dca .IsPredefinedCMap (_dfbae ){_ggab ._fadc ,_debfe =_dca .LoadPredefinedCMap (_dfbae );if _debfe !=nil {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dfbae ,_debfe );
};}else {_aa .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_dfbae );};};if _bdabb :=_aaff .baseFields ()._fbfb ;_bdabb !=nil {if _ggfgg :=_bdabb .Name ();_ggfgg =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_ggfgg =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_ggfgg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_ggfgg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_ggab ._ggdfd =_af .NewCMapEncoder (_dfbae ,_ggab ._fadc ,_bdabb );
};};return _ggab ,nil ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_deedb *PdfWriter )SetNamedDestinations (dests _bcd .PdfObject )error {if dests ==nil {return nil ;};_aa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_deedb ._daaaa .Set ("\u0044\u0065\u0073t\u0073",dests );return _deedb .addObjects (dests );};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ecgb :map[_bcd .PdfObject ]struct{}{},_gaafcb :_afga (),_aceagb :_bcd .NewParserFromString (txt )};};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_bccb *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bcd .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fcf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cded ,_cbefd :=_bcd .GetNumbersAsFloat (objects );
if _cbefd !=nil {return nil ,_cbefd ;};return _bccb .ColorFromFloats (_cded );};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_bdcf PdfOutputIntentType )String ()string {switch _bdcf {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_bff :=NewPdfAction ();_cfc :=&PdfActionImportData {};_cfc .PdfAction =_bff ;_bff .SetContext (_cfc );return _cfc ;};func _aaegad (_aabad *_bcd .PdfObjectDictionary ,_fbaa *fontCommon ,_cfddg _af .TextEncoder )(*pdfFontSimple ,error ){_cbcgf :=_gccc (_fbaa );
_cbcgf ._aeaf =_cfddg ;if _cfddg ==nil {_bdeg :=_aabad .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _bdeg ==nil {_bdeg =_bcd .MakeInteger (0);};_cbcgf .FirstChar =_bdeg ;_fagfb ,_beab :=_bcd .GetIntVal (_bdeg );if !_beab {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bdeg );
return nil ,_bcd .ErrTypeError ;};_ddeef :=_af .CharCode (_fagfb );_bdeg =_aabad .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bdeg ==nil {_bdeg =_bcd .MakeInteger (255);};_cbcgf .LastChar =_bdeg ;_fagfb ,_beab =_bcd .GetIntVal (_bdeg );
if !_beab {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bdeg );return nil ,_bcd .ErrTypeError ;
};_agcfb :=_af .CharCode (_fagfb );_cbcgf ._ggcdb =make (map[_af .CharCode ]float64 );_bdeg =_aabad .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bdeg !=nil {_cbcgf .Widths =_bdeg ;_edbg ,_bfbef :=_bcd .GetArray (_bdeg );if !_bfbef {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bdeg );
return nil ,_bcd .ErrTypeError ;};_eecbd ,_aebcg :=_edbg .ToFloat64Array ();if _aebcg !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_aebcg ;};if len (_eecbd )!=int (_agcfb -_ddeef +1){_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_agcfb -_ddeef +1,len (_eecbd ));
return nil ,_bcd .ErrRangeError ;};for _edbgd ,_gcce :=range _eecbd {_cbcgf ._ggcdb [_ddeef +_af .CharCode (_edbgd )]=_gcce ;};};};_cbcgf .Encoding =_bcd .TraceToDirectObject (_aabad .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _cbcgf ,nil ;
};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_eg :=NewPdfAction ();_adg :=&PdfActionURI {};_adg .PdfAction =_eg ;_eg .SetContext (_adg );return _adg ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_aab .CharMetrics ;

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_geaad *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _geaad .AlternateSpace ==nil {return nil ,_fcf .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _geaad .AlternateSpace .ColorToRGB (color );};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_bfgd *Image )SetSamples (samples []uint32 ){if _bfgd .BitsPerComponent < 8{samples =_bfgd .samplesAddPadding (samples );};_fgdcg :=_gea .ResampleUint32 (samples ,int (_bfgd .BitsPerComponent ),8);_acffag :=make ([]byte ,len (_fgdcg ));for _ecccb ,_eebba :=range _fgdcg {_acffag [_ecccb ]=byte (_eebba );
};_bfgd .Data =_acffag ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);var _ pdfFont =(*pdfFontType0 )(nil );

// ToPdfObject returns a PDF object representation of the outline destination.
func (_adfa OutlineDest )ToPdfObject ()_bcd .PdfObject {if (_adfa .PageObj ==nil &&_adfa .Page < 0)||_adfa .Mode ==""{return _bcd .MakeNull ();};_dgeff :=_bcd .MakeArray ();if _adfa .PageObj !=nil {_dgeff .Append (_adfa .PageObj );}else {_dgeff .Append (_bcd .MakeInteger (_adfa .Page ));
};_dgeff .Append (_bcd .MakeName (_adfa .Mode ));switch _adfa .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_dgeff .Append (_bcd .MakeFloat (_adfa .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_dgeff .Append (_bcd .MakeFloat (_adfa .X ));
case "\u0058\u0059\u005a":_dgeff .Append (_bcd .MakeFloat (_adfa .X ));_dgeff .Append (_bcd .MakeFloat (_adfa .Y ));_dgeff .Append (_bcd .MakeFloat (_adfa .Zoom ));default:_dgeff .Set (1,_bcd .MakeName ("\u0046\u0069\u0074"));};return _dgeff ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_caf PdfModel ;Rect _bcd .PdfObject ;Contents _bcd .PdfObject ;P _bcd .PdfObject ;NM _bcd .PdfObject ;M _bcd .PdfObject ;F _bcd .PdfObject ;AP _bcd .PdfObject ;AS _bcd .PdfObject ;Border _bcd .PdfObject ;C _bcd .PdfObject ;StructParent _bcd .PdfObject ;
OC _bcd .PdfObject ;_dbd *_bcd .PdfIndirectObject ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_ccb :=NewPdfAction ();_egb :=&PdfActionSubmitForm {};_egb .PdfAction =_ccb ;_ccb .SetContext (_egb );return _egb ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_dfaf :=&PdfColorspaceCalGray {};_dfaf .BlackPoint =[]float64 {0.0,0.0,0.0};_dfaf .Gamma =1;return _dfaf ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_ecef *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bcd .GetNumberAsFloat (_ecef .Descent );};func (_eegge *PdfReader )newPdfAcroFormFromDict (_dgafg *_bcd .PdfIndirectObject ,_fdgg *_bcd .PdfObjectDictionary )(*PdfAcroForm ,error ){_abacc :=NewPdfAcroForm ();
if _dgafg !=nil {_abacc ._cbae =_dgafg ;_dgafg .PdfObject =_bcd .MakeDict ();};if _dcaec :=_fdgg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_dcaec !=nil &&!_bcd .IsNullObject (_dcaec ){_caaf ,_dggg :=_bcd .GetArray (_dcaec );if !_dggg {return nil ,_f .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dcaec );
};var _dddff []*PdfField ;for _ ,_gegfd :=range _caaf .Elements (){_gagca ,_dfae :=_bcd .GetIndirect (_gegfd );if !_dfae {if _ ,_cbefdd :=_gegfd .(*_bcd .PdfObjectNull );_cbefdd {_aa .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_aa .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_gegfd );
return nil ,_f .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gfgg ,_dccd :=_eegge .newPdfFieldFromIndirectObject (_gagca ,nil );
if _dccd !=nil {return nil ,_dccd ;};_aa .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_gfgg );_dddff =append (_dddff ,_gfgg );};_abacc .Fields =&_dddff ;};if _fbfe :=_fdgg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_fbfe !=nil {_geffd ,_dbff :=_bcd .GetBool (_fbfe );if _dbff {_abacc .NeedAppearances =_geffd ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_fbfe );
};};if _aeead :=_fdgg .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_aeead !=nil {_acebb ,_ffdb :=_bcd .GetInt (_aeead );if _ffdb {_abacc .SigFlags =_acebb ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aeead );
};};if _cgaff :=_fdgg .Get ("\u0043\u004f");_cgaff !=nil {_eeab ,_fbfg :=_bcd .GetArray (_cgaff );if _fbfg {_abacc .CO =_eeab ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cgaff );
};};if _edce :=_fdgg .Get ("\u0044\u0052");_edce !=nil {if _abadg ,_cbcgd :=_bcd .GetDict (_edce );_cbcgd {_gffa ,_edbcd :=NewPdfPageResourcesFromDict (_abadg );if _edbcd !=nil {_aa .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_edbcd );
return nil ,_edbcd ;};_abacc .DR =_gffa ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_edce );};};if _aefcf :=_fdgg .Get ("\u0044\u0041");
_aefcf !=nil {_dcaee ,_gbgge :=_bcd .GetString (_aefcf );if _gbgge {_abacc .DA =_dcaee ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_aefcf );
};};if _babab :=_fdgg .Get ("\u0051");_babab !=nil {_ffff ,_eeed :=_bcd .GetInt (_babab );if _eeed {_abacc .Q =_ffff ;}else {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_babab );
};};if _fdbcc :=_fdgg .Get ("\u0058\u0046\u0041");_fdbcc !=nil {_abacc .XFA =_fdbcc ;};if _gcccd :=_fdgg .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_gcccd !=nil {_abacc .ADBEEchoSign =_gcccd ;};_abacc .ToPdfObject ();
return _abacc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdbg *PdfAnnotationPolygon )ToPdfObject ()_bcd .PdfObject {_gdbg .PdfAnnotation .ToPdfObject ();_afeg :=_gdbg ._dbd ;_cagfa :=_afeg .PdfObject .(*_bcd .PdfObjectDictionary );_gdbg .PdfAnnotationMarkup .appendToPdfDictionary (_cagfa );_cagfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_cagfa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gdbg .Vertices );_cagfa .SetIfNotNil ("\u004c\u0045",_gdbg .LE );_cagfa .SetIfNotNil ("\u0042\u0053",_gdbg .BS );_cagfa .SetIfNotNil ("\u0049\u0043",_gdbg .IC );_cagfa .SetIfNotNil ("\u0042\u0045",_gdbg .BE );
_cagfa .SetIfNotNil ("\u0049\u0054",_gdbg .IT );_cagfa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gdbg .Measure );return _afeg ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_aebea *PdfReader )GetRevisionNumber ()int {return _aebea ._aceagb .GetRevisionNumber ()};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bcd .PdfObject ;LE _bcd .PdfObject ;BS _bcd .PdfObject ;IC _bcd .PdfObject ;BE _bcd .PdfObject ;IT _bcd .PdfObject ;Measure _bcd .PdfObject ;};

// Encoder returns the font's text encoder.
func (_ddeb pdfCIDFontType0 )Encoder ()_af .TextEncoder {return _ddeb ._gdfea };

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_faf *_bcd .PdfIndirectObject ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_gadg interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_ceccg *PdfPageResources )SetColorspaceByName (keyName _bcd .PdfObjectName ,cs PdfColorspace )error {_ceccb ,_dccgd :=_ceccg .GetColorspaces ();if _dccgd !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_dccgd );
return _dccgd ;};if _ceccb ==nil {_ceccb =NewPdfPageResourcesColorspaces ();_ceccg .SetColorSpace (_ceccb );};_ceccb .Set (keyName ,cs );return nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_fbcb pdfFont };var _dcbf =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_fcfea *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _fcfea ._aceagb .GetRevisionNumber ()==0{return nil ,_fcf .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _egaad ,_eebdg :=_fcfea ._edge [_fcfea ];_eebdg {return _egaad ,nil ;};_gdfde ,_gbgbd :=_fcfea ._aceagb .GetPreviousRevisionReadSeeker ();if _gbgbd !=nil {return nil ,_gbgbd ;};_cfgfc ,_gbgbd :=_fedda (_gdfde ,_fcfea ._fcbgb ,_fcfea ._bbbcde ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _gbgbd !=nil {return nil ,_gbgbd ;};_fcfea ._dbacf [_fcfea ._aceagb .GetRevisionNumber ()-1]=_cfgfc ;_fcfea ._edge [_fcfea ]=_cfgfc ;_cfgfc ._edge =_fcfea ._edge ;return _cfgfc ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bcd .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _efde *_bcd .PdfIndirectObject ;var _bad *_bcd .PdfObjectName ;var _acffa *_bcd .PdfObjectArray ;if _ecdb ,_aaba :=obj .(*_bcd .PdfIndirectObject );
_aaba {_efde =_ecdb ;};obj =_bcd .TraceToDirectObject (obj );switch _gaad :=obj .(type ){case *_bcd .PdfObjectArray :_acffa =_gaad ;case *_bcd .PdfObjectName :_bad =_gaad ;};if _bad !=nil {switch *_bad {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_aa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_bad );return nil ,_bfc ;};};if _acffa !=nil &&_acffa .Len ()> 0{var _dbad _bcd .PdfObject =_efde ;
if _efde ==nil {_dbad =_acffa ;};if _fgaf ,_egag :=_bcd .GetName (_acffa .Get (0));_egag {switch _fgaf .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _acffa .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _acffa .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _acffa .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _cfgb (_dbad );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _ebcc (_dbad );
case "\u004c\u0061\u0062":return _adfb (_dbad );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _deee (_dbad );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _bgcda (_dbad );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _gceg (_dbad );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _faaa (_dbad );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _gaag (_dbad );default:_aa .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_fgaf );
};};};_aa .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func _dddg (_gebg *_bcd .PdfObjectDictionary ,_gaafg *fontCommon )(*pdfFontType3 ,error ){_eccb :=_cdfba (_gaafg );_bcde :=_gebg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _bcde ==nil {_bcde =_bcd .MakeInteger (0);
};_eccb .FirstChar =_bcde ;_ggdad ,_ggfef :=_bcd .GetIntVal (_bcde );if !_ggfef {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bcde );
return nil ,_bcd .ErrTypeError ;};_acad :=_af .CharCode (_ggdad );_bcde =_gebg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bcde ==nil {_bcde =_bcd .MakeInteger (255);};_eccb .LastChar =_bcde ;_ggdad ,_ggfef =_bcd .GetIntVal (_bcde );if !_ggfef {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bcde );
return nil ,_bcd .ErrTypeError ;};_efga :=_af .CharCode (_ggdad );_bcde =_gebg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bcde !=nil {_eccb .Resources =_bcde ;};_bcde =_gebg .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _bcde ==nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_bcde );
return nil ,_bcd .ErrNotSupported ;};_eccb .CharProcs =_bcde ;_bcde =_gebg .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _bcde ==nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_bcde );
return nil ,_bcd .ErrNotSupported ;};_eccb .FontMatrix =_bcde ;_eccb ._aacec =make (map[_af .CharCode ]float64 );_bcde =_gebg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bcde !=nil {_eccb .Widths =_bcde ;_feea ,_gfeg :=_bcd .GetArray (_bcde );if !_gfeg {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bcde );
return nil ,_bcd .ErrTypeError ;};_ecgg ,_bfda :=_feea .ToFloat64Array ();if _bfda !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bfda ;};if len (_ecgg )!=int (_efga -_acad +1){_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_efga -_acad +1,len (_ecgg ));
return nil ,_bcd .ErrRangeError ;};_egeec ,_gfeg :=_bcd .GetArray (_eccb .FontMatrix );if !_gfeg {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_egeec );
return nil ,_bfda ;};_babed ,_bfda :=_egeec .ToFloat64Array ();if _bfda !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bfda ;};_ggdb :=_bca .NewMatrix (_babed [0],_babed [1],_babed [2],_babed [3],_babed [4],_babed [5]);for _cbbb ,_afdbe :=range _ecgg {_gdeee ,_ :=_ggdb .Transform (_afdbe ,_afdbe );_eccb ._aacec [_acad +_af .CharCode (_cbbb )]=_gdeee ;};};_eccb .Encoding =_bcd .TraceToDirectObject (_gebg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_aeafe :=_gebg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _aeafe !=nil {_eccb ._cdgf =_bcd .TraceToDirectObject (_aeafe );_ccbgc ,_bagd :=_bcaab (_eccb ._cdgf ,&_eccb .fontCommon );if _bagd !=nil {return nil ,_bagd ;};_eccb ._fbfb =_ccbgc ;
};if _gfgdc :=_eccb ._fbfb ;_gfgdc !=nil {_eccb ._efefb =_af .NewCMapEncoder ("",nil ,_gfgdc );}else {_eccb ._efefb =_af .NewPdfDocEncoder ();};return _eccb ,nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_afgda :=&PdfPageResources {};_afgda ._ecbbg =_bcd .MakeDict ();return _afgda ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_gccgb *PdfWriter )SetCatalogMetadata (meta _bcd .PdfObject )error {if meta ==nil {_gccgb ._daaaa .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_cdaff ,_ecbde :=_bcd .GetStream (meta );if !_ecbde {return _fcf .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_gccgb .addObject (_cdaff );_gccgb ._daaaa .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cdaff );return nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bcd .PdfObject ;T _bcd .PdfObject ;Operation _bcd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fagg *PdfAnnotationHighlight )ToPdfObject ()_bcd .PdfObject {_fagg .PdfAnnotation .ToPdfObject ();_fba :=_fagg ._dbd ;_agdb :=_fba .PdfObject .(*_bcd .PdfObjectDictionary );_fagg .PdfAnnotationMarkup .appendToPdfDictionary (_agdb );_agdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcd .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_agdb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fagg .QuadPoints );return _fba ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_defe :=&PdfColorPatternType3 {};return _defe };

// ToPdfObject implements interface PdfModel.
func (_ebeec *Permissions )ToPdfObject ()_bcd .PdfObject {return _ebeec ._caccc };

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func _ccdf (_bafb *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_egga ,_cdaca :=_bcd .GetDict (_bafb .AP );if !_cdaca {return nil ,nil ,_fcf .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _egga ==nil {return nil ,nil ,nil ;};_gfef ,_cdaca :=_bcd .GetArray (_bafb .Rect );if !_cdaca ||_gfef .Len ()!=4{return nil ,nil ,_fcf .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_cfaf ,_fedfe :=NewPdfRectangle (*_gfef );
if _fedfe !=nil {return nil ,nil ,_fedfe ;};_agbf :=_bcd .TraceToDirectObject (_egga .Get ("\u004e"));switch _gaafe :=_agbf .(type ){case *_bcd .PdfObjectStream :_egcgbe :=_gaafe ;_egfc ,_aaebb :=NewXObjectFormFromStream (_egcgbe );return _egfc ,_cfaf ,_aaebb ;
case *_bcd .PdfObjectDictionary :_dggbe :=_gaafe ;_ccafg ,_eegeff :=_bcd .GetName (_bafb .AS );if !_eegeff {return nil ,nil ,nil ;};if _dggbe .Get (*_ccafg )==nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_defab ,_eegeff :=_bcd .GetStream (_dggbe .Get (*_ccafg ));if !_eegeff {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_ccafg );
return nil ,nil ,_fcf .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_ggedc ,_dadf :=NewXObjectFormFromStream (_defab );return _ggedc ,_cfaf ,_dadf ;};_aa .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_agbf );
return nil ,nil ,_fcf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_ccbbgd *PdfPage )getParentResources ()(*PdfPageResources ,error ){_gfcgd :=_ccbbgd .Parent ;for _gfcgd !=nil {_fgeaf ,_efacf :=_bcd .GetDict (_gfcgd );
if !_efacf {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_fcf .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _edgda :=_fgeaf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_edgda !=nil {_cedf ,_gbgc :=_bcd .GetDict (_edgda );if !_gbgc {return nil ,_fcf .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_bbdge ,_cacg :=NewPdfPageResourcesFromDict (_cedf );if _cacg !=nil {return nil ,_cacg ;};return _bbdge ,nil ;};_gfcgd =_fgeaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};